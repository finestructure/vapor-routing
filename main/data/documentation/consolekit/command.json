{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/ConsoleKit\/Command"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Command"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10ConsoleKit10AnyCommandP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/ConsoleKit\/AnyCommand","text":"AnyCommand"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Both "},{"code":"Command","type":"codeVoice"},{"type":"text","text":" and "},{"code":"CommandGroup","type":"codeVoice"},{"type":"text","text":" conform to "},{"code":"AnyCommand","type":"codeVoice"},{"type":"text","text":" which provides the basic requirements"},{"type":"text","text":" "},{"type":"text","text":"all command-like types need. In addition to those types, a "},{"code":"Command","type":"codeVoice"},{"type":"text","text":" requires zero or more "},{"code":"CommandArgument","type":"codeVoice"},{"type":"text","text":"s."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Below is a sample command that generates ASCII picture of a cow with a message."}]},{"syntax":null,"type":"codeListing","code":["struct CowsayCommand: Command {","    public struct Signature: CommandSignature {","        @Argument(name: \"message\")","        var message: String","","        @Option(name: \"eyes\", short: \"e\")","        var eyes: String?","","        @Option(name: \"tongue\", short: \"t\")","        var tongue: String?","","        public init() { }","    }","","    var help: String {","        \"Generates ASCII picture of a cow with a message.\"","    }","","    public init() { }","    public func run(using context: CommandContext, signature: Signature) throws {","        let eyes = signature.eyes ?? \"oo\"","        let tongue = signature.tongue ?? \" \"","        let padding = String(repeating: \"-\", count: message.count)","        let text: String = \"\"\"","          \\(padding)","        < \\(message) >","          \\(padding)","                  \\\\   ^__^","                   \\\\  (\\(eyes)\\\\_______","                      (__)\\\\       )\\\\\/\\\\","                        \\(tongue)  ||----w |","                           ||     ||","        \"\"\"","        context.console.print(text)","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Meanwhile you can use the Command in an executable target like:"}]},{"syntax":null,"type":"codeListing","code":["let console: Console = Terminal()","var input = CommandInput(arguments: CommandLine.arguments)","var context = CommandContext(console: console, input: input)","","try console.run(CoswayCommand(), with: context)"]},{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"code":"Commands","type":"codeVoice"},{"text":" to register commands and create a ","type":"text"},{"code":"CommandGroup","type":"codeVoice"},{"text":".","type":"text"}]},{"content":[{"inlineContent":[{"type":"text","text":"You can also use "},{"type":"codeVoice","code":"console.run(...)"},{"type":"text","text":" to run an "},{"type":"codeVoice","code":"AnyCommand"},{"type":"text","text":" manually."}],"type":"paragraph"}],"type":"aside","style":"note"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here is a simple example of the command in action, assuming it has been registered as "},{"type":"codeVoice","code":"\"cowsay\""},{"type":"text","text":"."}]},{"syntax":null,"type":"codeListing","code":["swift run cowsay Hello","  -----","< Hello >","  -----","          \\   ^__^","           \\  (oo\\_______","              (__)\\       )\\\/\\","                   ||----w |","                   ||     ||"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"And an example with flags:"}]},{"syntax":null,"type":"codeListing","code":["swift run cowsay \"I'm a dead cow\" -e xx -t U","  --------------","< I'm a dead cow >","  --------------","          \\   ^__^","           \\  (xx\\_______","              (__)\\       )\\\/\\","                U  ||----w |","                   ||     ||"]}],"kind":"content"}],"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/ConsoleKit\/Command\/Signature"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/ConsoleKit\/Command\/run(using:signature:)"]}],"abstract":[{"type":"text","text":"A command that can be run through a "},{"code":"Console","type":"codeVoice"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/ConsoleKit"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Command","kind":"identifier"}],"roleHeading":"Protocol","modules":[{"name":"ConsoleKit"}],"externalID":"s:10ConsoleKit7CommandP","symbolKind":"protocol","navigatorTitle":[{"text":"Command","kind":"identifier"}],"role":"symbol","title":"Command"},"kind":"symbol","relationshipsSections":[{"kind":"relationships","type":"inheritsFrom","title":"Inherits From","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/ConsoleKit\/AnyCommand"]},{"kind":"relationships","type":"conformingTypes","title":"Conforming Types","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/BootCommand","doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/RoutesCommand","doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/ServeCommand"]}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/consolekit\/command"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/ConsoleKit/Command":{"url":"\/documentation\/consolekit\/command","kind":"symbol","role":"symbol","type":"topic","title":"Command","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/ConsoleKit\/Command","navigatorTitle":[{"kind":"identifier","text":"Command"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Command"}],"abstract":[{"text":"A command that can be run through a ","type":"text"},{"code":"Console","type":"codeVoice"},{"text":".","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Vapor/RoutesCommand":{"title":"RoutesCommand","kind":"symbol","url":"\/documentation\/vapor\/routescommand","navigatorTitle":[{"text":"RoutesCommand","kind":"identifier"}],"abstract":[{"text":"Displays all routes registered to the ","type":"text"},{"type":"codeVoice","code":"Application"},{"text":"â€™s ","type":"text"},{"code":"Router","type":"codeVoice"},{"text":" in an ASCII-formatted table.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RoutesCommand","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/RoutesCommand"},"doc://co.pointfree.VaporRouting/documentation/ConsoleKit/Command/run(using:signature:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"run"},{"kind":"text","text":"("},{"kind":"externalParam","text":"using"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CommandContext","preciseIdentifier":"s:10ConsoleKit14CommandContextV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"signature"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Signature"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"url":"\/documentation\/consolekit\/command\/run(using:signature:)","title":"run(using:signature:)","abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/ConsoleKit\/Command\/run(using:signature:)","required":true,"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Vapor/BootCommand":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BootCommand","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Boots the "},{"type":"codeVoice","code":"Application"},{"type":"text","text":" then exits successfully."}],"url":"\/documentation\/vapor\/bootcommand","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/BootCommand","title":"BootCommand","navigatorTitle":[{"text":"BootCommand","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/ConsoleKit/Command/Signature":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/ConsoleKit\/Command\/Signature","type":"topic","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Signature"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10ConsoleKit16CommandSignatureP","text":"CommandSignature"}],"url":"\/documentation\/consolekit\/command\/signature","abstract":[],"required":true,"title":"Signature","kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/ConsoleKit/AnyCommand":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyCommand"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyCommand"}],"title":"AnyCommand","type":"topic","url":"\/documentation\/consolekit\/anycommand","abstract":[{"type":"text","text":"A type-erased "},{"code":"Command","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/ConsoleKit\/AnyCommand"},"doc://co.pointfree.VaporRouting/documentation/ConsoleKit":{"abstract":[],"role":"collection","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/ConsoleKit","url":"\/documentation\/consolekit","title":"ConsoleKit"},"doc://co.pointfree.VaporRouting/documentation/Vapor/ServeCommand":{"abstract":[{"type":"text","text":"Boots the applicationâ€™s server. Listens for "},{"type":"codeVoice","code":"SIGINT"},{"type":"text","text":" and "},{"type":"codeVoice","code":"SIGTERM"},{"type":"text","text":" for graceful shutdown."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ServeCommand"}],"title":"ServeCommand","kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ServeCommand"}],"url":"\/documentation\/vapor\/servecommand","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/ServeCommand"}}}