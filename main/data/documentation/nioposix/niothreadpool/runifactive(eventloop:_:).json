{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/runIfActive(eventLoop:_:)","interfaceLanguage":"swift"},"sections":[],"abstract":[{"text":"Runs the submitted closure if the thread pool is still active, otherwise fails the promise.","type":"text"},{"text":" ","type":"text"},{"text":"The closure will be run on the thread pool so can do blocking work.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"runIfActive","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"eventLoop","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoop","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP"},{"text":", () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"role":"symbol","roleHeading":"Instance Method","modules":[{"name":"NIOPosix"}],"externalID":"s:8NIOPosix13NIOThreadPoolC11runIfActive9eventLoop_7NIOCore05EventH6FutureCyxGAF0jH0_p_xyKctlF","extendedModule":"NIOPosix","title":"runIfActive(eventLoop:_:)","symbolKind":"method"},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"runIfActive","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"eventLoop","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoop","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"body","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" of "},{"type":"codeVoice","code":"promise"},{"type":"text","text":" fulfilled with the result (or error) of the passed closure."}],"type":"paragraph"}],"kind":"content"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" the returned "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" will fire on."}]}],"name":"eventLoop"},{"content":[{"inlineContent":[{"text":"The closure which performs some blocking work to be done on the thread pool.","type":"text"}],"type":"paragraph"}],"name":"body"}],"kind":"parameters"}],"variants":[{"paths":["\/documentation\/nioposix\/niothreadpool\/runifactive(eventloop:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop":{"abstract":[{"text":"An EventLoop processes IO \/ tasks in an endless loop for ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":"s until itâ€™s closed.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","url":"\/documentation\/niocore\/eventloop","title":"EventLoop"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOThreadPool","kind":"identifier"}],"abstract":[{"text":"A thread pool that should be used if some (kernel thread) blocking work","type":"text"},{"text":" ","type":"text"},{"text":"needs to be performed for which no non-blocking API exists.","type":"text"}],"url":"\/documentation\/nioposix\/niothreadpool","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool","navigatorTitle":[{"text":"NIOThreadPool","kind":"identifier"}],"type":"topic","title":"NIOThreadPool","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFuture","kind":"identifier"}],"navigatorTitle":[{"text":"EventLoopFuture","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopfuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"role":"symbol","title":"EventLoopFuture"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool/runIfActive(eventLoop:_:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"runIfActive","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"eventLoop"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier","text":"EventLoop"},{"kind":"text","text":", () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"text":"Runs the submitted closure if the thread pool is still active, otherwise fails the promise.","type":"text"},{"text":" ","type":"text"},{"text":"The closure will be run on the thread pool so can do blocking work.","type":"text"}],"url":"\/documentation\/nioposix\/niothreadpool\/runifactive(eventloop:_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/runIfActive(eventLoop:_:)","type":"topic","title":"runIfActive(eventLoop:_:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix":{"type":"topic","role":"collection","abstract":[],"url":"\/documentation\/nioposix","title":"NIOPosix","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","kind":"symbol"}}}