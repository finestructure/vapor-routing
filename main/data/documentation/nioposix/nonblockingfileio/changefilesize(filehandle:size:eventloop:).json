{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NonBlockingFileIO"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"changeFileSize","kind":"identifier"},{"text":"(","kind":"text"},{"text":"fileHandle","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOFileHandle","preciseIdentifier":"s:7NIOCore13NIOFileHandleC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"size","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int64","preciseIdentifier":"s:s5Int64V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"eventLoop","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","kind":"typeIdentifier"},{"text":"<()>","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"text":"An ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" which is fulfilled if the write was successful or fails on error.","type":"text"}],"type":"paragraph"}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"NIOFileHandle"},{"type":"text","text":" to write to."}]}],"name":"fileHandle"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The new file size in bytes to write.","type":"text"}]}],"name":"size"},{"content":[{"inlineContent":[{"text":"The ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" to create the returned ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" from.","type":"text"}],"type":"paragraph"}],"name":"eventLoop"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"size"},{"type":"text","text":" is smaller than the current file size, the remaining bytes will be truncated and are lost. If "},{"type":"codeVoice","code":"size"},{"type":"text","text":" "},{"type":"text","text":"is larger than the current file size, the gap will be filled with zero bytes."}],"type":"paragraph"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"changeFileSize","kind":"identifier"},{"text":"(","kind":"text"},{"text":"fileHandle","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOFileHandle","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13NIOFileHandleC"},{"text":", ","kind":"text"},{"text":"size","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"text":", ","kind":"text"},{"text":"eventLoop","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoop","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<()>","kind":"text"}],"symbolKind":"method","externalID":"s:8NIOPosix17NonBlockingFileIOV06changeD4Size10fileHandle4size9eventLoop7NIOCore05EventL6FutureCyytGAH07NIOFileI0C_s5Int64VAH0nL0_ptF","roleHeading":"Instance Method","modules":[{"name":"NIOPosix"}],"role":"symbol","title":"changeFileSize(fileHandle:size:eventLoop:)"},"abstract":[{"text":"Changes the file size of ","type":"text"},{"code":"fileHandle","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"size","type":"codeVoice"},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NonBlockingFileIO\/changeFileSize(fileHandle:size:eventLoop:)","interfaceLanguage":"swift"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioposix\/nonblockingfileio\/changefilesize(filehandle:size:eventloop:)"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop":{"abstract":[{"text":"An EventLoop processes IO \/ tasks in an endless loop for ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":"s until itâ€™s closed.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","url":"\/documentation\/niocore\/eventloop","title":"EventLoop"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix":{"type":"topic","role":"collection","abstract":[],"url":"\/documentation\/nioposix","title":"NIOPosix","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle":{"type":"topic","role":"symbol","url":"\/documentation\/niocore\/niofilehandle","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"NIOFileHandle","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle","abstract":[{"text":"A ","type":"text"},{"code":"NIOFileHandle","type":"codeVoice"},{"text":" is a handle to an open file.","type":"text"}],"title":"NIOFileHandle","navigatorTitle":[{"text":"NIOFileHandle","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NonBlockingFileIO/changeFileSize(fileHandle:size:eventLoop:)":{"role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"Changes the file size of ","type":"text"},{"code":"fileHandle","type":"codeVoice"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"size"},{"text":".","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"changeFileSize","kind":"identifier"},{"text":"(","kind":"text"},{"text":"fileHandle","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOFileHandle","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13NIOFileHandleC"},{"text":", ","kind":"text"},{"text":"size","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"text":", ","kind":"text"},{"text":"eventLoop","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoop","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<()>","kind":"text"}],"url":"\/documentation\/nioposix\/nonblockingfileio\/changefilesize(filehandle:size:eventloop:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NonBlockingFileIO\/changeFileSize(fileHandle:size:eventLoop:)","title":"changeFileSize(fileHandle:size:eventLoop:)"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NonBlockingFileIO":{"title":"NonBlockingFileIO","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NonBlockingFileIO","kind":"identifier"}],"kind":"symbol","abstract":[{"code":"NonBlockingFileIO","type":"codeVoice"},{"text":" is a helper that allows you to read files without blocking the calling thread.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NonBlockingFileIO","type":"topic","url":"\/documentation\/nioposix\/nonblockingfileio","navigatorTitle":[{"text":"NonBlockingFileIO","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFuture","kind":"identifier"}],"navigatorTitle":[{"text":"EventLoopFuture","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopfuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"role":"symbol","title":"EventLoopFuture"}}}