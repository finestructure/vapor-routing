{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap"]]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap\/withPipes(inputDescriptor:outputDescriptor:)","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioposix\/niopipebootstrap\/withpipes(inputdescriptor:outputdescriptor:)"]}],"metadata":{"title":"withPipes(inputDescriptor:outputDescriptor:)","externalID":"s:8NIOPosix16NIOPipeBootstrapC9withPipes15inputDescriptor06outputG07NIOCore15EventLoopFutureCyAG7Channel_pGs5Int32V_AMtF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withPipes","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"inputDescriptor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4CInta","text":"CInt"},{"kind":"text","text":", "},{"kind":"externalParam","text":"outputDescriptor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4CInta","text":"CInt"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"text":">","kind":"text"}],"modules":[{"name":"NIOPosix"}],"symbolKind":"method","roleHeading":"Instance Method","role":"symbol"},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withPipes","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inputDescriptor","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CInt","preciseIdentifier":"s:s4CInta","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"outputDescriptor","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CInt","preciseIdentifier":"s:s4CInta","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"inlineContent":[{"text":"an ","type":"text"},{"type":"codeVoice","code":"EventLoopFuture<Channel>"},{"text":" to deliver the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":".","type":"text"}],"type":"paragraph"}]},{"parameters":[{"name":"inputDescriptor","content":[{"inlineContent":[{"type":"text","text":"The "},{"type":"emphasis","inlineContent":[{"text":"Unix file descriptor","type":"text"}]},{"type":"text","text":" for the input (ie. the read side)."}],"type":"paragraph"}]},{"name":"outputDescriptor","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Unix file descriptor"}]},{"type":"text","text":" for the output (ie. the write side)."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"The input and output file descriptors must be distinct. If you have a single file descriptor, consider using","type":"text"},{"text":" ","type":"text"},{"code":"ClientBootstrap.withConnectedSocket(descriptor:)","type":"codeVoice"},{"text":" if itâ€™s a socket or","type":"text"},{"text":" ","type":"text"},{"code":"NIOPipeBootstrap.withInputOutputDescriptor","type":"codeVoice"},{"text":" if it is not a socket.","type":"text"}]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"If this method returns a succeeded future, SwiftNIO will close ","type":"text"},{"code":"inputDescriptor","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"outputDescriptor","type":"codeVoice"},{"text":" ","type":"text"},{"text":"when the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" becomes inactive. You ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"must not","type":"text"}]},{"text":" do any further operations ","type":"text"},{"code":"inputDescriptor","type":"codeVoice"},{"text":" or","type":"text"},{"text":" ","type":"text"},{"code":"outputDescriptor","type":"codeVoice"},{"text":", including ","type":"text"},{"code":"close","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"If this method returns a failed future, you still own the file descriptors and are responsible for","type":"text"},{"text":" ","type":"text"},{"text":"closing them.","type":"text"}]}],"style":"note"}]}],"abstract":[{"type":"text","text":"Create the "},{"type":"codeVoice","code":"PipeChannel"},{"type":"text","text":" with the provided input and output file descriptors."}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOPipeBootstrap":{"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOPipeBootstrap"}],"url":"\/documentation\/nioposix\/niopipebootstrap","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap","navigatorTitle":[{"kind":"identifier","text":"NIOPipeBootstrap"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"NIOPipeBootstrap"},{"type":"text","text":" is an easy way to bootstrap a "},{"type":"codeVoice","code":"PipeChannel"},{"type":"text","text":" which uses two (uni-directional) UNIX pipes"},{"type":"text","text":" "},{"type":"text","text":"and makes a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" out of them."}],"title":"NIOPipeBootstrap"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOPipeBootstrap/withPipes(inputDescriptor:outputDescriptor:)":{"title":"withPipes(inputDescriptor:outputDescriptor:)","role":"symbol","abstract":[{"text":"Create the ","type":"text"},{"code":"PipeChannel","type":"codeVoice"},{"text":" with the provided input and output file descriptors.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap\/withPipes(inputDescriptor:outputDescriptor:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withPipes"},{"kind":"text","text":"("},{"kind":"externalParam","text":"inputDescriptor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CInt","preciseIdentifier":"s:s4CInta"},{"kind":"text","text":", "},{"kind":"externalParam","text":"outputDescriptor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CInt","preciseIdentifier":"s:s4CInta"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP"},{"kind":"text","text":">"}],"kind":"symbol","url":"\/documentation\/nioposix\/niopipebootstrap\/withpipes(inputdescriptor:outputdescriptor:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFuture","kind":"identifier"}],"navigatorTitle":[{"text":"EventLoopFuture","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopfuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"role":"symbol","title":"EventLoopFuture"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"url":"\/documentation\/niocore\/channel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","navigatorTitle":[{"kind":"identifier","text":"Channel"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"title":"Channel"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix":{"type":"topic","role":"collection","abstract":[],"url":"\/documentation\/nioposix","title":"NIOPosix","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","kind":"symbol"}}}