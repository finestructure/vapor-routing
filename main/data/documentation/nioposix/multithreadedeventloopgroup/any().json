{"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/any()","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"any","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","kind":"typeIdentifier"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":"."}]}]}],"kind":"symbol","abstract":[{"text":"Returns the current ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" if we are on an ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":" of this ","type":"text"},{"type":"codeVoice","code":"MultiThreadedEventLoopGroup"},{"text":" instance.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup"]]},"variants":[{"paths":["\/documentation\/nioposix\/multithreadedeventloopgroup\/any()"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"Instance Method","role":"symbol","modules":[{"name":"NIOPosix"}],"externalID":"s:8NIOPosix27MultiThreadedEventLoopGroupC3any7NIOCore0dE0_pyF","title":"any()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"any"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop"}],"symbolKind":"method"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop":{"abstract":[{"text":"An EventLoop processes IO \/ tasks in an endless loop for ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":"s until itâ€™s closed.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","url":"\/documentation\/niocore\/eventloop","title":"EventLoop"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix":{"type":"topic","role":"collection","abstract":[],"url":"\/documentation\/nioposix","title":"NIOPosix","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/any()":{"role":"symbol","title":"any()","type":"topic","url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/any()","abstract":[{"type":"text","text":"Returns the current "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":" if we are on an "},{"type":"codeVoice","code":"EventLoop"},{"text":" of this ","type":"text"},{"type":"codeVoice","code":"MultiThreadedEventLoopGroup"},{"text":" instance.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/any()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"any","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EventLoop","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup":{"role":"symbol","title":"MultiThreadedEventLoopGroup","type":"topic","url":"\/documentation\/nioposix\/multithreadedeventloopgroup","navigatorTitle":[{"text":"MultiThreadedEventLoopGroup","kind":"identifier"}],"abstract":[{"type":"text","text":"An "},{"code":"EventLoopGroup","type":"codeVoice"},{"type":"text","text":" which will create multiple "},{"type":"codeVoice","code":"EventLoop"},{"text":"s, each tied to its own ","type":"text"},{"type":"codeVoice","code":"NIOThread"},{"text":".","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultiThreadedEventLoopGroup","kind":"identifier"}]}}}