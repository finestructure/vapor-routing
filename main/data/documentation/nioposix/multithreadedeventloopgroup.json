{"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":" which will create multiple "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"s, each tied to its own "},{"type":"codeVoice","code":"NIOThread"},{"type":"text","text":"."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultiThreadedEventLoopGroup","kind":"identifier"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The effect of initializing a "},{"type":"codeVoice","code":"MultiThreadedEventLoopGroup"},{"type":"text","text":" is to spawn "},{"type":"codeVoice","code":"numberOfThreads"},{"type":"text","text":" fresh threads which will"},{"type":"text","text":" "},{"type":"text","text":"all run their own "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":". Those threads will not be shut down until "},{"type":"codeVoice","code":"shutdownGracefully"},{"type":"text","text":" or"},{"type":"text","text":" "},{"type":"codeVoice","code":"syncShutdownGracefully"},{"type":"text","text":" is called."}]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"It’s good style to call ","type":"text"},{"code":"MultiThreadedEventLoopGroup.shutdownGracefully","type":"codeVoice"},{"text":" or","type":"text"},{"text":" ","type":"text"},{"code":"MultiThreadedEventLoopGroup.syncShutdownGracefully","type":"codeVoice"},{"text":" when you no longer need this ","type":"text"},{"code":"EventLoopGroup","type":"codeVoice"},{"text":". In","type":"text"},{"text":" ","type":"text"},{"text":"many cases that is just before your program exits.","type":"text"}]}],"style":"note"},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":"Unit tests often spawn one "},{"type":"codeVoice","code":"MultiThreadedEventLoopGroup"},{"type":"text","text":" per unit test to force isolation between the"},{"type":"text","text":" "},{"type":"text","text":"tests. In those cases it’s important to shut the "},{"type":"codeVoice","code":"MultiThreadedEventLoopGroup"},{"type":"text","text":" down at the end of the"},{"type":"text","text":" "},{"type":"text","text":"test. A good place to start a "},{"type":"codeVoice","code":"MultiThreadedEventLoopGroup"},{"type":"text","text":" is the "},{"type":"codeVoice","code":"setUp"},{"type":"text","text":" method of your "},{"type":"codeVoice","code":"XCTestCase"},{"type":"text","text":" "},{"type":"text","text":"subclass, a good place to shut it down is the "},{"type":"codeVoice","code":"tearDown"},{"type":"text","text":" method."}],"type":"paragraph"}],"style":"warning"}],"kind":"content"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/init(numberOfThreads:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/any()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/makeIterator()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/next()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/shutdownGracefully(queue:_:)"]},{"title":"Type Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/currentEventLoop"]},{"title":"Type Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/withCurrentThreadAsEventLoop(_:)"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/CustomStringConvertible-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/EventLoopGroup-Implementations"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix"]]},"variants":[{"paths":["\/documentation\/nioposix\/multithreadedeventloopgroup"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup","interfaceLanguage":"swift"},"metadata":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultiThreadedEventLoopGroup","kind":"identifier"}],"role":"symbol","modules":[{"name":"NIOPosix"}],"title":"MultiThreadedEventLoopGroup","externalID":"s:8NIOPosix27MultiThreadedEventLoopGroupC","navigatorTitle":[{"text":"MultiThreadedEventLoopGroup","kind":"identifier"}],"symbolKind":"class","roleHeading":"Class"},"sections":[],"kind":"symbol","relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup","doc:\/\/co.pointfree.VaporRouting\/s23CustomStringConvertibleP"],"kind":"relationships"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/shutdownGracefully(queue:_:)":{"abstract":[{"type":"text","text":"Shut this "},{"type":"codeVoice","code":"MultiThreadedEventLoopGroup"},{"type":"text","text":" down which causes the "},{"type":"codeVoice","code":"EventLoop"},{"text":"s and their associated threads to be","type":"text"},{"text":" ","type":"text"},{"text":"shut down and release their resources.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/shutdownGracefully(queue:_:)","role":"symbol","title":"shutdownGracefully(queue:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shutdownGracefully","kind":"identifier"},{"text":"(","kind":"text"},{"text":"queue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"DispatchQueue","kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A5QueueC"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/shutdowngracefully(queue:_:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup":{"role":"symbol","title":"MultiThreadedEventLoopGroup","type":"topic","url":"\/documentation\/nioposix\/multithreadedeventloopgroup","navigatorTitle":[{"text":"MultiThreadedEventLoopGroup","kind":"identifier"}],"abstract":[{"type":"text","text":"An "},{"code":"EventLoopGroup","type":"codeVoice"},{"type":"text","text":" which will create multiple "},{"type":"codeVoice","code":"EventLoop"},{"text":"s, each tied to its own ","type":"text"},{"type":"codeVoice","code":"NIOThread"},{"text":".","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultiThreadedEventLoopGroup","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","type":"unresolvable","identifier":"doc:\/\/co.pointfree.VaporRouting\/s23CustomStringConvertibleP"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/withCurrentThreadAsEventLoop(_:)":{"role":"symbol","title":"withCurrentThreadAsEventLoop(_:)","type":"topic","url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/withcurrentthreadaseventloop(_:)","abstract":[{"type":"text","text":"Convert the calling thread into an "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/withCurrentThreadAsEventLoop(_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withCurrentThreadAsEventLoop","kind":"identifier"},{"text":"((","kind":"text"},{"text":"EventLoop","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/makeIterator()":{"role":"symbol","title":"makeIterator()","type":"topic","url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/makeiterator()","abstract":[{"type":"text","text":"Returns an "},{"code":"EventLoopIterator","type":"codeVoice"},{"type":"text","text":" over the "},{"type":"codeVoice","code":"EventLoop"},{"text":"s in this ","type":"text"},{"type":"codeVoice","code":"MultiThreadedEventLoopGroup"},{"text":".","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/makeIterator()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeIterator","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EventLoopIterator","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore17EventLoopIteratorV"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/any()":{"role":"symbol","title":"any()","type":"topic","url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/any()","abstract":[{"type":"text","text":"Returns the current "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":" if we are on an "},{"type":"codeVoice","code":"EventLoop"},{"text":" of this ","type":"text"},{"type":"codeVoice","code":"MultiThreadedEventLoopGroup"},{"text":" instance.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/any()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"any","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EventLoop","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/EventLoopGroup-Implementations":{"role":"collectionGroup","title":"EventLoopGroup Implementations","type":"topic","url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/eventloopgroup-implementations","abstract":[],"kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/EventLoopGroup-Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/currentEventLoop":{"role":"symbol","title":"currentEventLoop","type":"topic","url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/currenteventloop","abstract":[{"type":"text","text":"Returns the "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":" for the calling thread."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/currentEventLoop","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"currentEventLoop","kind":"identifier"},{"text":": ","kind":"text"},{"text":"EventLoop","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP"},{"text":"?","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/next()":{"role":"symbol","title":"next()","type":"topic","url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/next()","abstract":[{"type":"text","text":"Returns the next "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":" from this "},{"type":"codeVoice","code":"MultiThreadedEventLoopGroup"},{"text":".","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/next()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"next","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EventLoop","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix":{"type":"topic","role":"collection","abstract":[],"url":"\/documentation\/nioposix","title":"NIOPosix","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/init(numberOfThreads:)":{"role":"symbol","title":"init(numberOfThreads:)","type":"topic","url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/init(numberofthreads:)","abstract":[{"type":"text","text":"Creates a "},{"code":"MultiThreadedEventLoopGroup","type":"codeVoice"},{"type":"text","text":" instance which uses "},{"type":"codeVoice","code":"numberOfThreads"},{"text":".","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/init(numberOfThreads:)","fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"numberOfThreads","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/CustomStringConvertible-Implementations":{"role":"collectionGroup","title":"CustomStringConvertible Implementations","type":"topic","url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/customstringconvertible-implementations","abstract":[],"kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/CustomStringConvertible-Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopGroup":{"abstract":[{"type":"text","text":"Provides an endless stream of "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":"s to use."}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopgroup","navigatorTitle":[{"kind":"identifier","text":"EventLoopGroup"}],"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup","title":"EventLoopGroup","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroup"}]}}}