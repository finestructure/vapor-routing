{"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/channelInitializer(_:)"},"metadata":{"externalID":"s:8NIOPosix15ClientBootstrapC18channelInitializeryACXD7NIOCore15EventLoopFutureCyytGAE7Channel_pcF","modules":[{"name":"NIOPosix"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelInitializer","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Channel","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"roleHeading":"Instance Method","title":"channelInitializer(_:)","symbolKind":"method","role":"symbol"},"sections":[],"variants":[{"paths":["\/documentation\/nioposix\/clientbootstrap\/channelinitializer(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Initialize the connected "},{"code":"SocketChannel","type":"codeVoice"},{"type":"text","text":" with "},{"code":"initializer","type":"codeVoice"},{"type":"text","text":". The most common task in initializer is to add"},{"type":"text","text":" "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s to the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelInitializer","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"handler","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Channel","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A closure that initializes the provided "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"handler"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The connected "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" will operate on "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" as inbound and "},{"code":"IOData","type":"codeVoice"},{"type":"text","text":" as outbound messages."}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"handler"},{"type":"text","text":" closure may be invoked "},{"type":"emphasis","inlineContent":[{"text":"multiple times","type":"text"}]},{"type":"text","text":" so it’s usually the right choice to instantiate"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s within "},{"type":"codeVoice","code":"handler"},{"type":"text","text":". The reason "},{"type":"codeVoice","code":"handler"},{"type":"text","text":" may be invoked multiple times is that to"},{"type":"text","text":" "},{"type":"text","text":"successfully set up a connection multiple connections might be setup in the process. Assuming a"},{"type":"text","text":" "},{"type":"text","text":"hostname that resolves to both IPv4 and IPv6 addresses, NIO will follow"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"https:\/\/en.wikipedia.org\/wiki\/Happy_Eyeballs"},{"type":"text","text":" and race both an IPv4 and an IPv6"},{"type":"text","text":" "},{"type":"text","text":"connection. It is possible that both connections get fully established before the IPv4 connection"},{"type":"text","text":" "},{"type":"text","text":"will be closed again because the IPv6 connection ‘won the race’. Therefore the "},{"type":"codeVoice","code":"channelInitializer"},{"type":"text","text":" "},{"type":"text","text":"might be called multiple times and it’s important not to share stateful "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s in more"},{"type":"text","text":" "},{"type":"text","text":"than one "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}]}],"style":"warning","type":"aside"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOPosix":{"type":"topic","role":"collection","abstract":[],"url":"\/documentation\/nioposix","title":"NIOPosix","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap":{"navigatorTitle":[{"text":"ClientBootstrap","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/nioposix\/clientbootstrap","type":"topic","title":"ClientBootstrap","abstract":[{"text":"A ","type":"text"},{"code":"ClientBootstrap","type":"codeVoice"},{"text":" is an easy way to bootstrap a ","type":"text"},{"type":"codeVoice","code":"SocketChannel"},{"text":" when creating network clients.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ClientBootstrap","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFuture","kind":"identifier"}],"navigatorTitle":[{"text":"EventLoopFuture","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopfuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"role":"symbol","title":"EventLoopFuture"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"url":"\/documentation\/niocore\/channel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","navigatorTitle":[{"kind":"identifier","text":"Channel"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"title":"Channel"},"https://en.wikipedia.org/wiki/Happy_Eyeballs":{"type":"link","identifier":"https:\/\/en.wikipedia.org\/wiki\/Happy_Eyeballs","titleInlineContent":[{"type":"emphasis","inlineContent":[{"text":"Happy Eyeballs","type":"text"}]}],"url":"https:\/\/en.wikipedia.org\/wiki\/Happy_Eyeballs","title":"Happy Eyeballs"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap/channelInitializer(_:)":{"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/channelInitializer(_:)","url":"\/documentation\/nioposix\/clientbootstrap\/channelinitializer(_:)","abstract":[{"type":"text","text":"Initialize the connected "},{"code":"SocketChannel","type":"codeVoice"},{"type":"text","text":" with "},{"type":"codeVoice","code":"initializer"},{"type":"text","text":". The most common task in initializer is to add"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s to the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"title":"channelInitializer(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelInitializer","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol"}}}