{"sections":[],"metadata":{"modules":[{"name":"NIOHTTP1"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upgraders"},{"kind":"text","text":": ["},{"text":"HTTPServerProtocolUpgrader","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP126HTTPServerProtocolUpgraderP"},{"text":"], ","kind":"text"},{"text":"httpEncoder","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPResponseEncoder","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP119HTTPResponseEncoderC"},{"text":", ","kind":"text"},{"text":"extraHTTPHandlers","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"RemovableChannelHandler","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore23RemovableChannelHandlerP"},{"text":"], ","kind":"text"},{"text":"upgradeCompletionHandler","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"role":"symbol","title":"init(upgraders:httpEncoder:extraHTTPHandlers:upgradeCompletionHandler:)","roleHeading":"Initializer","externalID":"s:8NIOHTTP124HTTPServerUpgradeHandlerC9upgraders11httpEncoder17extraHTTPHandlers017upgradeCompletionD0ACSayAA0B16ProtocolUpgrader_pG_AA012HTTPResponseG0CSay7NIOCore016RemovableChannelD0_pGyAL0qD7ContextCctcfc","symbolKind":"init"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler"]]},"abstract":[{"type":"text","text":"Create a "},{"type":"codeVoice","code":"HTTPServerUpgradeHandler"},{"type":"text","text":"."}],"variants":[{"paths":["\/documentation\/niohttp1\/httpserverupgradehandler\/init(upgraders:httpencoder:extrahttphandlers:upgradecompletionhandler:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"upgraders","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP126HTTPServerProtocolUpgraderP","text":"HTTPServerProtocolUpgrader","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerProtocolUpgrader","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"httpEncoder","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP119HTTPResponseEncoderC","text":"HTTPResponseEncoder","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPResponseEncoder","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"extraHTTPHandlers","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:7NIOCore23RemovableChannelHandlerP","text":"RemovableChannelHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"upgradeCompletionHandler","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"All ","type":"text"},{"code":"HTTPServerProtocolUpgrader","type":"codeVoice"},{"text":" objects that this pipeline will be able","type":"text"},{"text":" ","type":"text"},{"text":"to use to handle HTTP upgrade.","type":"text"}]}],"name":"upgraders"},{"content":[{"inlineContent":[{"text":"The ","type":"text"},{"code":"HTTPResponseEncoder","type":"codeVoice"},{"text":" encoding responses from this handler and which will","type":"text"},{"text":" ","type":"text"},{"text":"be removed from the pipeline once the upgrade response is sent. This is used to ensure","type":"text"},{"text":" ","type":"text"},{"text":"that the pipeline will be in a clean state after upgrade.","type":"text"}],"type":"paragraph"}],"name":"httpEncoder"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Any other handlers that are directly related to handling HTTP. At the very least","type":"text"},{"text":" ","type":"text"},{"text":"this should include the ","type":"text"},{"code":"HTTPDecoder","type":"codeVoice"},{"text":", but should also include any other handler that cannot tolerate","type":"text"},{"text":" ","type":"text"},{"text":"receiving non-HTTP data.","type":"text"}]}],"name":"extraHTTPHandlers"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A block that will be fired when HTTP upgrade is complete."}]}],"name":"upgradeCompletionHandler"}],"kind":"parameters"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/init(upgraders:httpEncoder:extraHTTPHandlers:upgradeCompletionHandler:)","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerProtocolUpgrader":{"title":"HTTPServerProtocolUpgrader","role":"symbol","url":"\/documentation\/niohttp1\/httpserverprotocolupgrader","navigatorTitle":[{"text":"HTTPServerProtocolUpgrader","kind":"identifier"}],"abstract":[{"text":"An object that implements ","type":"text"},{"code":"HTTPServerProtocolUpgrader","type":"codeVoice"},{"text":" knows how to handle HTTP upgrade to","type":"text"},{"text":" ","type":"text"},{"text":"a protocol on a server-side channel.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerProtocolUpgrader","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPServerProtocolUpgrader","kind":"identifier"}],"kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1","title":"NIOHTTP1","type":"topic","kind":"symbol","url":"\/documentation\/niohttp1","abstract":[],"role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandlerContext":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","role":"symbol","url":"\/documentation\/niocore\/channelhandlercontext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandlerContext"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelHandlerContext"}],"title":"ChannelHandlerContext","abstract":[{"text":"Every ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" has – when added to a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" – a corresponding "},{"type":"codeVoice","code":"ChannelHandlerContext"},{"type":"text","text":" which is"},{"type":"text","text":" "},{"type":"text","text":"the way "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s can interact with other "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s in the pipeline."}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerUpgradeHandler/init(upgraders:httpEncoder:extraHTTPHandlers:upgradeCompletionHandler:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"upgraders","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP126HTTPServerProtocolUpgraderP","text":"HTTPServerProtocolUpgrader","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"httpEncoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP119HTTPResponseEncoderC","text":"HTTPResponseEncoder"},{"kind":"text","text":", "},{"kind":"externalParam","text":"extraHTTPHandlers"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore23RemovableChannelHandlerP","text":"RemovableChannelHandler"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"upgradeCompletionHandler"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/init(upgraders:httpEncoder:extraHTTPHandlers:upgradeCompletionHandler:)","role":"symbol","abstract":[{"text":"Create a ","type":"text"},{"code":"HTTPServerUpgradeHandler","type":"codeVoice"},{"text":".","type":"text"}],"title":"init(upgraders:httpEncoder:extraHTTPHandlers:upgradeCompletionHandler:)","url":"\/documentation\/niohttp1\/httpserverupgradehandler\/init(upgraders:httpencoder:extrahttphandlers:upgradecompletionhandler:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/RemovableChannelHandler":{"title":"RemovableChannelHandler","navigatorTitle":[{"kind":"identifier","text":"RemovableChannelHandler"}],"role":"symbol","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" that can be dynamically removed from a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" whilst"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is operating normally."},{"type":"text","text":" "},{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is required to remove itself from the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" (using"},{"type":"text","text":" "},{"code":"ChannelHandlerContext.removeHandler","type":"codeVoice"},{"type":"text","text":") as soon as possible."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemovableChannelHandler"}],"url":"\/documentation\/niocore\/removablechannelhandler"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPResponseEncoder":{"abstract":[{"text":"A ","type":"text"},{"code":"ChannelOutboundHandler","type":"codeVoice"},{"text":" that can serialize HTTP responses.","type":"text"}],"title":"HTTPResponseEncoder","url":"\/documentation\/niohttp1\/httpresponseencoder","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponseEncoder"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPResponseEncoder","kind":"symbol","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HTTPResponseEncoder"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerUpgradeHandler":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPServerUpgradeHandler"}],"url":"\/documentation\/niohttp1\/httpserverupgradehandler","abstract":[{"text":"A server-side channel handler that receives HTTP requests and optionally performs a HTTP-upgrade.","type":"text"},{"text":" ","type":"text"},{"text":"Removes itself from the channel pipeline after the first inbound request on the connection, regardless of","type":"text"},{"text":" ","type":"text"},{"text":"whether the upgrade succeeded or not.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTPServerUpgradeHandler"}],"title":"HTTPServerUpgradeHandler","type":"topic"}}}