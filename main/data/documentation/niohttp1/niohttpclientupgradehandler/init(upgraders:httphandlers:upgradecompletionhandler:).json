{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler\/init(upgraders:httpHandlers:upgradeCompletionHandler:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"upgraders","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"NIOHTTPClientProtocolUpgrader","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader","preciseIdentifier":"s:8NIOHTTP129NIOHTTPClientProtocolUpgraderP"},{"text":"], ","kind":"text"},{"text":"httpHandlers","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"RemovableChannelHandler","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","preciseIdentifier":"s:7NIOCore23RemovableChannelHandlerP"},{"text":"], ","kind":"text"},{"text":"upgradeCompletionHandler","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}]}]},{"kind":"parameters","parameters":[{"name":"upgraders","content":[{"inlineContent":[{"text":"All ","type":"text"},{"code":"HTTPClientProtocolUpgrader","type":"codeVoice"},{"text":" objects that will add their upgrade request","type":"text"},{"text":" ","type":"text"},{"text":"headers and handle the upgrade if there is a response for their protocol. They should be placed in","type":"text"},{"text":" ","type":"text"},{"text":"order of the preference for the upgrade.","type":"text"}],"type":"paragraph"}]},{"name":"httpHandlers","content":[{"inlineContent":[{"text":"All ","type":"text"},{"code":"RemovableChannelHandler","type":"codeVoice"},{"text":" objects which will be removed from the pipeline","type":"text"},{"text":" ","type":"text"},{"text":"once the upgrade response is sent. This is used to ensure that the pipeline will be in a clean state","type":"text"},{"text":" ","type":"text"},{"text":"after the upgrade. It should include any handlers that are directly related to handling HTTP.","type":"text"},{"text":" ","type":"text"},{"text":"At the very least this should include the ","type":"text"},{"code":"HTTPEncoder","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"HTTPDecoder","type":"codeVoice"},{"text":", but should also include","type":"text"},{"text":" ","type":"text"},{"text":"any other handler that cannot tolerate receiving non-HTTP data.","type":"text"}],"type":"paragraph"}]},{"name":"upgradeCompletionHandler","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that will be fired when HTTP upgrade is complete."}]}]}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler"]]},"metadata":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"upgraders","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"NIOHTTPClientProtocolUpgrader","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP129NIOHTTPClientProtocolUpgraderP"},{"text":"], ","kind":"text"},{"text":"httpHandlers","kind":"externalParam"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore23RemovableChannelHandlerP","text":"RemovableChannelHandler"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"upgradeCompletionHandler"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"symbolKind":"init","role":"symbol","externalID":"s:8NIOHTTP127NIOHTTPClientUpgradeHandlerC9upgraders12httpHandlers017upgradeCompletionD0ACSayAA0B16ProtocolUpgrader_pG_Say7NIOCore016RemovableChannelD0_pGyAI0nD7ContextCctcfc","roleHeading":"Initializer","title":"init(upgraders:httpHandlers:upgradeCompletionHandler:)","modules":[{"name":"NIOHTTP1"}]},"sections":[],"variants":[{"paths":["\/documentation\/niohttp1\/niohttpclientupgradehandler\/init(upgraders:httphandlers:upgradecompletionhandler:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Create a ","type":"text"},{"code":"HTTPClientUpgradeHandler","type":"codeVoice"},{"text":".","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientUpgradeHandler/init(upgraders:httpHandlers:upgradeCompletionHandler:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler\/init(upgraders:httpHandlers:upgradeCompletionHandler:)","role":"symbol","url":"\/documentation\/niohttp1\/niohttpclientupgradehandler\/init(upgraders:httphandlers:upgradecompletionhandler:)","title":"init(upgraders:httpHandlers:upgradeCompletionHandler:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upgraders"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"NIOHTTPClientProtocolUpgrader","preciseIdentifier":"s:8NIOHTTP129NIOHTTPClientProtocolUpgraderP"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"httpHandlers"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"RemovableChannelHandler","preciseIdentifier":"s:7NIOCore23RemovableChannelHandlerP"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"upgradeCompletionHandler"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"abstract":[{"text":"Create a ","type":"text"},{"code":"HTTPClientUpgradeHandler","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/RemovableChannelHandler":{"title":"RemovableChannelHandler","navigatorTitle":[{"kind":"identifier","text":"RemovableChannelHandler"}],"role":"symbol","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" that can be dynamically removed from a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" whilst"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is operating normally."},{"type":"text","text":" "},{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is required to remove itself from the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" (using"},{"type":"text","text":" "},{"code":"ChannelHandlerContext.removeHandler","type":"codeVoice"},{"type":"text","text":") as soon as possible."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemovableChannelHandler"}],"url":"\/documentation\/niocore\/removablechannelhandler"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandlerContext":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","role":"symbol","url":"\/documentation\/niocore\/channelhandlercontext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandlerContext"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelHandlerContext"}],"title":"ChannelHandlerContext","abstract":[{"text":"Every ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" has – when added to a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" – a corresponding "},{"type":"codeVoice","code":"ChannelHandlerContext"},{"type":"text","text":" which is"},{"type":"text","text":" "},{"type":"text","text":"the way "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s can interact with other "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s in the pipeline."}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientProtocolUpgrader":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader","role":"symbol","navigatorTitle":[{"text":"NIOHTTPClientProtocolUpgrader","kind":"identifier"}],"url":"\/documentation\/niohttp1\/niohttpclientprotocolupgrader","title":"NIOHTTPClientProtocolUpgrader","abstract":[{"text":"An object that implements ","type":"text"},{"type":"codeVoice","code":"NIOHTTPClientProtocolUpgrader"},{"text":" knows how to handle HTTP upgrade to","type":"text"},{"text":" ","type":"text"},{"text":"a protocol on a client-side channel.","type":"text"},{"text":" ","type":"text"},{"text":"It has the option of denying this upgrade based upon the server response.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOHTTPClientProtocolUpgrader","kind":"identifier"}],"kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1","title":"NIOHTTP1","type":"topic","kind":"symbol","url":"\/documentation\/niohttp1","abstract":[],"role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientUpgradeHandler":{"url":"\/documentation\/niohttp1\/niohttpclientupgradehandler","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler","navigatorTitle":[{"text":"NIOHTTPClientUpgradeHandler","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[{"text":"A client-side channel handler that sends a HTTP upgrade handshake request to perform a HTTP-upgrade.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"When the first HTTP request is sent, this handler will add all appropriate headers to perform an upgrade to"},{"type":"text","text":" "},{"type":"text","text":"the a protocol. It may add headers for a set of protocols in preference order."},{"type":"text","text":" "},{"type":"text","text":"If the upgrade fails (i.e. response is not 101 Switching Protocols), this handler simply"},{"type":"text","text":" "},{"type":"text","text":"removes itself from the pipeline. If the upgrade is successful, it upgrades the pipeline to the new protocol."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOHTTPClientUpgradeHandler","kind":"identifier"}],"title":"NIOHTTPClientUpgradeHandler"}}}