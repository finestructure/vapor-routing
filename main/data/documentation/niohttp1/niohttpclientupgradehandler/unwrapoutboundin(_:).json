{"abstract":[{"type":"text","text":"Unwrap the provided "},{"code":"NIOAny","type":"codeVoice"},{"type":"text","text":" that was passed to "},{"code":"write","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unwrapOutboundIn"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OutboundIn"}],"platforms":["Linux"]}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler\/unwrapOutboundIn(_:)"},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unwrapOutboundIn","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"OutboundIn","kind":"typeIdentifier"}],"title":"unwrapOutboundIn(_:)","roleHeading":"Instance Method","symbolKind":"method","extendedModule":"NIOCore","role":"symbol","modules":[{"name":"NIOHTTP1"}],"externalID":"s:7NIOCore22ChannelOutboundHandlerPAAE06unwrapC2Iny0cF0QzAA6NIOAnyVF::SYNTHESIZED::s:8NIOHTTP127NIOHTTPClientUpgradeHandlerC"},"variants":[{"paths":["\/documentation\/niohttp1\/niohttpclientupgradehandler\/unwrapoutboundin(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler\/ChannelOutboundHandler-Implementations"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientUpgradeHandler/ChannelOutboundHandler-Implementations":{"kind":"article","title":"ChannelOutboundHandler Implementations","url":"\/documentation\/niohttp1\/niohttpclientupgradehandler\/channeloutboundhandler-implementations","type":"topic","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler\/ChannelOutboundHandler-Implementations","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOAny":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOAny"}],"type":"topic","url":"\/documentation\/niocore\/nioany","navigatorTitle":[{"kind":"identifier","text":"NIOAny"}],"abstract":[{"code":"NIOAny","type":"codeVoice"},{"type":"text","text":" is an opaque container for values of "},{"inlineContent":[{"text":"any","type":"text"}],"type":"emphasis"},{"type":"text","text":" type, similar to Swiftâ€™s builtin "},{"code":"Any","type":"codeVoice"},{"type":"text","text":" type. Contrary to"},{"type":"text","text":" "},{"type":"codeVoice","code":"Any"},{"type":"text","text":" the overhead of "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":" depends on the the type of the wrapped value. Certain types that are important"},{"type":"text","text":" "},{"type":"text","text":"for the performance of a SwiftNIO application like "},{"code":"ByteBuffer","type":"codeVoice"},{"text":", ","type":"text"},{"code":"FileRegion","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"AddressEnvelope<ByteBuffer>","type":"codeVoice"},{"text":" can be expected","type":"text"},{"text":" ","type":"text"},{"text":"to be wrapped almost without overhead. All others will have similar performance as if they were passed as an ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" as","type":"text"},{"text":" ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":" just like ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" will contain them within an existential container.","type":"text"}],"title":"NIOAny","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientUpgradeHandler":{"url":"\/documentation\/niohttp1\/niohttpclientupgradehandler","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler","navigatorTitle":[{"text":"NIOHTTPClientUpgradeHandler","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[{"text":"A client-side channel handler that sends a HTTP upgrade handshake request to perform a HTTP-upgrade.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"When the first HTTP request is sent, this handler will add all appropriate headers to perform an upgrade to"},{"type":"text","text":" "},{"type":"text","text":"the a protocol. It may add headers for a set of protocols in preference order."},{"type":"text","text":" "},{"type":"text","text":"If the upgrade fails (i.e. response is not 101 Switching Protocols), this handler simply"},{"type":"text","text":" "},{"type":"text","text":"removes itself from the pipeline. If the upgrade is successful, it upgrades the pipeline to the new protocol."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOHTTPClientUpgradeHandler","kind":"identifier"}],"title":"NIOHTTPClientUpgradeHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1","title":"NIOHTTP1","type":"topic","kind":"symbol","url":"\/documentation\/niohttp1","abstract":[],"role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientUpgradeHandler/unwrapOutboundIn(_:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unwrapOutboundIn","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"OutboundIn","kind":"typeIdentifier"}],"title":"unwrapOutboundIn(_:)","url":"\/documentation\/niohttp1\/niohttpclientupgradehandler\/unwrapoutboundin(_:)","type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler\/unwrapOutboundIn(_:)","abstract":[{"type":"text","text":"Unwrap the provided "},{"code":"NIOAny","type":"codeVoice"},{"type":"text","text":" that was passed to "},{"code":"write","type":"codeVoice"},{"type":"text","text":"."}]}}}