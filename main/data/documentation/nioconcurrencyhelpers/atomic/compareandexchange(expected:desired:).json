{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compareAndExchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]}]},{"content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"True","type":"codeVoice"},{"text":" if the exchange occurred, or ","type":"text"},{"code":"False","type":"codeVoice"},{"text":" if ","type":"text"},{"code":"expected","type":"codeVoice"},{"text":" did not","type":"text"},{"text":" ","type":"text"},{"text":"match the current value and so no exchange occurred.","type":"text"}]}],"kind":"content"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value that this object must currently hold for the"},{"type":"text","text":" "},{"type":"text","text":"compare-and-swap to succeed."}]}],"name":"expected"},{"content":[{"inlineContent":[{"type":"text","text":"The new value that this object will hold if the compare"},{"type":"text","text":" "},{"type":"text","text":"succeeds."}],"type":"paragraph"}],"name":"desired"}]},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"This implementation conforms to C11’s ","type":"text"},{"code":"atomic_compare_exchange_strong","type":"codeVoice"},{"text":". This","type":"text"},{"text":" ","type":"text"},{"text":"means that the compare-and-swap will always succeed if ","type":"text"},{"code":"expected","type":"codeVoice"},{"text":" is equal to","type":"text"},{"text":" ","type":"text"},{"text":"value. Additionally, it uses a ","type":"text"},{"inlineContent":[{"text":"sequentially consistent ordering","type":"text"}],"type":"emphasis"},{"text":". For more","type":"text"},{"text":" ","type":"text"},{"text":"details on atomic memory models, check the documentation for C11’s","type":"text"},{"text":" ","type":"text"},{"code":"stdatomic.h","type":"codeVoice"},{"text":".","type":"text"}]}],"kind":"content"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/Atomic\/compareAndExchange(expected:desired:)","interfaceLanguage":"swift"},"deprecationSummary":[{"inlineContent":[{"text":"please use NIOAtomic instead","type":"text"}],"type":"paragraph"}],"abstract":[{"type":"text","text":"Atomically compares the value against "},{"type":"codeVoice","code":"expected"},{"type":"text","text":" and, if they are equal,"},{"type":"text","text":" "},{"type":"text","text":"replaces the value with "},{"type":"codeVoice","code":"desired"},{"type":"text","text":"."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioconcurrencyhelpers\/atomic\/compareandexchange(expected:desired:)"]}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/Atomic"]]},"sections":[],"metadata":{"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compareAndExchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"compareAndExchange(expected:desired:)","platforms":[],"externalID":"s:21NIOConcurrencyHelpers6AtomicC18compareAndExchange8expected7desiredSbx_xtF","roleHeading":"Instance Method","role":"symbol","modules":[{"name":"NIOConcurrencyHelpers"}]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers":{"kind":"symbol","abstract":[],"type":"topic","role":"collection","title":"NIOConcurrencyHelpers","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers","url":"\/documentation\/nioconcurrencyhelpers"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/Atomic":{"url":"\/documentation\/nioconcurrencyhelpers\/atomic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Atomic"}],"deprecated":true,"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atomic"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/Atomic","title":"Atomic","type":"topic","abstract":[{"type":"text","text":"An encapsulation of an atomic primitive object."}]},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/Atomic/compareAndExchange(expected:desired:)":{"kind":"symbol","role":"symbol","url":"\/documentation\/nioconcurrencyhelpers\/atomic\/compareandexchange(expected:desired:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"compareAndExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"deprecated":true,"type":"topic","abstract":[{"text":"Atomically compares the value against ","type":"text"},{"code":"expected","type":"codeVoice"},{"text":" and, if they are equal,","type":"text"},{"text":" ","type":"text"},{"text":"replaces the value with ","type":"text"},{"code":"desired","type":"codeVoice"},{"text":".","type":"text"}],"title":"compareAndExchange(expected:desired:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/Atomic\/compareAndExchange(expected:desired:)"}}}