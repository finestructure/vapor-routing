{"abstract":[{"type":"text","text":"Atomically loads and returns the value of this object."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The value of this object","type":"text"}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This implementation uses a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"relaxed"}]},{"type":"text","text":" memory ordering. This guarantees nothing"},{"type":"text","text":" "},{"type":"text","text":"more than that this operation is atomic: there is no guarantee that any other"},{"type":"text","text":" "},{"type":"text","text":"event will be ordered before or after this one."}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/load()"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic"]]},"sections":[],"metadata":{"title":"load()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"load"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"T"}],"modules":[{"name":"NIOConcurrencyHelpers"}],"role":"symbol","roleHeading":"Instance Method","externalID":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV4loadxyF","symbolKind":"method"},"variants":[{"paths":["\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/load()"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic":{"kind":"symbol","type":"topic","url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic","title":"UnsafeEmbeddedAtomic","abstract":[{"type":"text","text":"An atomic primitive object."}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeEmbeddedAtomic","kind":"identifier"}],"navigatorTitle":[{"text":"UnsafeEmbeddedAtomic","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers":{"kind":"symbol","abstract":[],"type":"topic","role":"collection","title":"NIOConcurrencyHelpers","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers","url":"\/documentation\/nioconcurrencyhelpers"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/load()":{"role":"symbol","title":"load()","kind":"symbol","abstract":[{"text":"Atomically loads and returns the value of this object.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/load()","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/load()"}}}