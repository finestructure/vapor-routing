{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic","interfaceLanguage":"swift"},"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafeEmbeddedAtomic"}],"modules":[{"name":"NIOConcurrencyHelpers"}],"title":"UnsafeEmbeddedAtomic","symbolKind":"struct","role":"symbol","externalID":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV","roleHeading":"Structure","navigatorTitle":[{"kind":"identifier","text":"UnsafeEmbeddedAtomic"}]},"variants":[{"paths":["\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeEmbeddedAtomic","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"AtomicPrimitive","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicPrimitive","preciseIdentifier":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"}]}]},{"kind":"content","content":[{"anchor":"overview","text":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"Before using ","type":"text"},{"code":"UnsafeEmbeddedAtomic","type":"codeVoice"},{"text":", please consider whether your needs can be met by ","type":"text"},{"code":"Atomic","type":"codeVoice"},{"text":" instead.","type":"text"},{"text":" ","type":"text"},{"code":"UnsafeEmbeddedAtomic","type":"codeVoice"},{"text":" is a value type, but atomics are heap-allocated. Thus, it is only safe to","type":"text"},{"text":" ","type":"text"},{"text":"use ","type":"text"},{"code":"UnsafeEmbeddedAtomic","type":"codeVoice"},{"text":" in situations where the atomic can be guaranteed to be cleaned up (via calling ","type":"text"},{"code":"destroy","type":"codeVoice"},{"text":").","type":"text"},{"text":" ","type":"text"},{"text":"If you cannot make these guarantees, use ","type":"text"},{"code":"Atomic","type":"codeVoice"},{"text":" instead, which manages this for you.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Atomic objects support a wide range of atomic operations:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Compare and swap"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Add"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Subtract","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Exchange","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Load current value"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Store current value","type":"text"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Atomic primitives are useful when building constructs that need to"},{"type":"text","text":" "},{"type":"text","text":"communicate or cooperate across multiple threads. In the case of"},{"type":"text","text":" "},{"type":"text","text":"SwiftNIO this usually involves communicating across multiple event loops."}]}]}],"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"An atomic primitive object."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/init(value:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/add(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/compareAndExchange(expected:desired:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/destroy()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/exchange(with:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/load()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/store(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/sub(_:)"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/store(_:)":{"title":"store(_:)","abstract":[{"text":"Atomically replaces the value of this object with ","type":"text"},{"code":"value","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/store(_:)","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"store"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/store(_:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic":{"kind":"symbol","type":"topic","url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic","title":"UnsafeEmbeddedAtomic","abstract":[{"type":"text","text":"An atomic primitive object."}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeEmbeddedAtomic","kind":"identifier"}],"navigatorTitle":[{"text":"UnsafeEmbeddedAtomic","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/init(value:)":{"kind":"symbol","type":"topic","url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/init(value:)","title":"init(value:)","abstract":[{"type":"text","text":"Create an atomic object with "},{"code":"value","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/init(value:)"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/sub(_:)":{"title":"sub(_:)","abstract":[{"text":"Atomically subtracts ","type":"text"},{"code":"rhs","type":"codeVoice"},{"text":" from this object.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/sub(_:)","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"sub"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"}],"url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/sub(_:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/compareAndExchange(expected:desired:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compareAndExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/compareAndExchange(expected:desired:)","kind":"symbol","abstract":[{"text":"Atomically compares the value against ","type":"text"},{"code":"expected","type":"codeVoice"},{"text":" and, if they are equal,","type":"text"},{"text":" ","type":"text"},{"text":"replaces the value with ","type":"text"},{"code":"desired","type":"codeVoice"},{"text":".","type":"text"}],"title":"compareAndExchange(expected:desired:)","url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/compareandexchange(expected:desired:)"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/add(_:)":{"title":"add(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/add(_:)","type":"topic","abstract":[{"type":"text","text":"Atomically adds "},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" to this object."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"}],"url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/add(_:)","kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers":{"kind":"symbol","abstract":[],"type":"topic","role":"collection","title":"NIOConcurrencyHelpers","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers","url":"\/documentation\/nioconcurrencyhelpers"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/load()":{"role":"symbol","title":"load()","kind":"symbol","abstract":[{"text":"Atomically loads and returns the value of this object.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/load()","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/load()"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/AtomicPrimitive":{"kind":"symbol","title":"AtomicPrimitive","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicPrimitive","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicPrimitive","type":"topic","abstract":[{"text":"The protocol that all types that can be made atomic must conform to.","type":"text"}],"url":"\/documentation\/nioconcurrencyhelpers\/atomicprimitive","navigatorTitle":[{"text":"AtomicPrimitive","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/destroy()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"destroy"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/destroy()","abstract":[{"text":"Destroy the atomic value.","type":"text"}],"title":"destroy()","role":"symbol","type":"topic","url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/destroy()","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/exchange(with:)":{"title":"exchange(with:)","url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/exchange(with:)","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/exchange(with:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"exchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"abstract":[{"text":"Atomically exchanges ","type":"text"},{"type":"codeVoice","code":"value"},{"text":" for the current value of this object.","type":"text"}]}}}