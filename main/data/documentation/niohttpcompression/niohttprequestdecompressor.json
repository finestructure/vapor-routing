{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestDecompressor","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"metadata":{"externalID":"s:18NIOHTTPCompression26NIOHTTPRequestDecompressorC","navigatorTitle":[{"text":"NIOHTTPRequestDecompressor","kind":"identifier"}],"role":"symbol","modules":[{"name":"NIOHTTPCompression"}],"symbolKind":"class","roleHeading":"Class","title":"NIOHTTPRequestDecompressor","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPRequestDecompressor"}]},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestDecompressor\/init(limit:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestDecompressor\/channelRead(context:data:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestDecompressor\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestDecompressor\/InboundOut","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestDecompressor\/OutboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestDecompressor\/OutboundOut"],"title":"Type Aliases"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestDecompressor\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestDecompressor\/ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestDecompressor\/ChannelOutboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestDecompressor\/RemovableChannelHandler-Implementations"],"generated":true,"title":"Default Implementations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niohttpcompression\/niohttprequestdecompressor"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPRequestDecompressor"}],"platforms":["Linux"]}],"kind":"declarations"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression/NIOHTTPRequestDecompressor/OutboundIn":{"navigatorTitle":[{"kind":"identifier","text":"OutboundIn"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestDecompressor\/OutboundIn","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"The type of the outbound data which is wrapped in "},{"code":"NIOAny","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutboundIn"}],"type":"topic","url":"\/documentation\/niohttpcompression\/niohttprequestdecompressor\/outboundin","title":"NIOHTTPRequestDecompressor.OutboundIn"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression/NIOHTTPRequestDecompressor":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPRequestDecompressor"}],"url":"\/documentation\/niohttpcompression\/niohttprequestdecompressor","title":"NIOHTTPRequestDecompressor","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"NIOHTTPRequestDecompressor"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestDecompressor","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression/NIOHTTPRequestDecompressor/OutboundOut":{"navigatorTitle":[{"kind":"identifier","text":"OutboundOut"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestDecompressor\/OutboundOut","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"The type of the outbound data which will be forwarded to the next "},{"code":"ChannelOutboundHandler","type":"codeVoice"},{"text":" in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutboundOut"}],"type":"topic","url":"\/documentation\/niohttpcompression\/niohttprequestdecompressor\/outboundout","title":"NIOHTTPRequestDecompressor.OutboundOut"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression":{"url":"\/documentation\/niohttpcompression","kind":"symbol","role":"collection","title":"NIOHTTPCompression","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression/NIOHTTPRequestDecompressor/InboundIn":{"navigatorTitle":[{"text":"InboundIn","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestDecompressor\/InboundIn","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundIn","kind":"identifier"}],"title":"NIOHTTPRequestDecompressor.InboundIn","abstract":[{"text":"The type of the inbound data which is wrapped in ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","url":"\/documentation\/niohttpcompression\/niohttprequestdecompressor\/inboundin"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression/NIOHTTPRequestDecompressor/RemovableChannelHandler-Implementations":{"url":"\/documentation\/niohttpcompression\/niohttprequestdecompressor\/removablechannelhandler-implementations","title":"RemovableChannelHandler Implementations","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestDecompressor\/RemovableChannelHandler-Implementations","kind":"article","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression/NIOHTTPRequestDecompressor/channelRead(context:data:)":{"kind":"symbol","title":"channelRead(context:data:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestDecompressor\/channelRead(context:data:)","role":"symbol","abstract":[{"type":"text","text":"Called when some data has been read from the remote peer."}],"type":"topic","url":"\/documentation\/niohttpcompression\/niohttprequestdecompressor\/channelread(context:data:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelRead","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny"},{"kind":"text","text":")"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression/NIOHTTPRequestDecompressor/InboundOut":{"navigatorTitle":[{"kind":"identifier","text":"InboundOut"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestDecompressor\/InboundOut","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"The type of the inbound data which will be forwarded to the next "},{"code":"ChannelInboundHandler","type":"codeVoice"},{"text":" in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundOut"}],"type":"topic","url":"\/documentation\/niohttpcompression\/niohttprequestdecompressor\/inboundout","title":"NIOHTTPRequestDecompressor.InboundOut"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelInboundHandler","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","role":"symbol","abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"text":" which handles inbound I\/O events for a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}],"title":"ChannelInboundHandler","navigatorTitle":[{"text":"ChannelInboundHandler","kind":"identifier"}],"url":"\/documentation\/niocore\/channelinboundhandler"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression/NIOHTTPRequestDecompressor/init(limit:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"limit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:18NIOHTTPCompression20NIOHTTPDecompressionO","text":"NIOHTTPDecompression"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:18NIOHTTPCompression20NIOHTTPDecompressionO18DecompressionLimitV","text":"DecompressionLimit"},{"kind":"text","text":")"}],"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/niohttpcompression\/niohttprequestdecompressor\/init(limit:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestDecompressor\/init(limit:)","title":"init(limit:)","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/RemovableChannelHandler":{"title":"RemovableChannelHandler","navigatorTitle":[{"kind":"identifier","text":"RemovableChannelHandler"}],"role":"symbol","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" that can be dynamically removed from a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" whilst"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is operating normally."},{"type":"text","text":" "},{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is required to remove itself from the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" (using"},{"type":"text","text":" "},{"code":"ChannelHandlerContext.removeHandler","type":"codeVoice"},{"type":"text","text":") as soon as possible."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemovableChannelHandler"}],"url":"\/documentation\/niocore\/removablechannelhandler"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelHandler","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","role":"symbol","abstract":[{"text":"You should ","type":"text"},{"inlineContent":[{"text":"never","type":"text"}],"type":"emphasis"},{"text":" implement this protocol directly. Please implement one of its sub-protocols.","type":"text"}],"title":"ChannelHandler","navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"url":"\/documentation\/niocore\/channelhandler"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression/NIOHTTPRequestDecompressor/ChannelOutboundHandler-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestDecompressor\/ChannelOutboundHandler-Implementations","role":"collectionGroup","kind":"article","abstract":[],"type":"topic","url":"\/documentation\/niohttpcompression\/niohttprequestdecompressor\/channeloutboundhandler-implementations","title":"ChannelOutboundHandler Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression/NIOHTTPRequestDecompressor/ChannelInboundHandler-Implementations":{"abstract":[],"title":"ChannelInboundHandler Implementations","kind":"article","role":"collectionGroup","url":"\/documentation\/niohttpcompression\/niohttprequestdecompressor\/channelinboundhandler-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestDecompressor\/ChannelInboundHandler-Implementations","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression/NIOHTTPRequestDecompressor/ChannelHandler-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestDecompressor\/ChannelHandler-Implementations","role":"collectionGroup","kind":"article","abstract":[],"type":"topic","url":"\/documentation\/niohttpcompression\/niohttprequestdecompressor\/channelhandler-implementations","title":"ChannelHandler Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"navigatorTitle":[{"text":"ChannelOutboundHandler","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ChannelOutboundHandler","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","type":"topic","title":"ChannelOutboundHandler","role":"symbol","kind":"symbol","abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"url":"\/documentation\/niocore\/channeloutboundhandler"}}}