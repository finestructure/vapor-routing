{"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FloatingPointCounterHandler"},{"kind":"text","text":" : AnyObject"}]}],"kind":"declarations"},{"content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"inlineContent":[{"text":"This type is an implementation detail and should not be used directly, unless implementing your own metrics backend.","type":"text"},{"text":" ","type":"text"},{"text":"To use the SwiftMetrics API, please refer to the documentation of ","type":"text"},{"code":"FloatingPointCounter","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"text":"Implementation requirements","level":1,"type":"heading","anchor":"Implementation-requirements"},{"inlineContent":[{"text":"To implement your own ","type":"text"},{"type":"codeVoice","code":"FloatingPointCounterHandler"},{"text":" you should respect a few requirements that are necessary so applications work","type":"text"},{"text":" ","type":"text"},{"text":"as expected regardless of the selected ","type":"text"},{"type":"codeVoice","code":"FloatingPointCounterHandler"},{"text":" implementation.","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"The ","type":"text"},{"code":"FloatingPointCounterHandler","type":"codeVoice"},{"text":" must be a ","type":"text"},{"code":"class","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"metadata":{"externalID":"s:11CoreMetrics27FloatingPointCounterHandlerP","roleHeading":"Protocol","symbolKind":"protocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FloatingPointCounterHandler","kind":"identifier"}],"modules":[{"name":"CoreMetrics"}],"navigatorTitle":[{"text":"FloatingPointCounterHandler","kind":"identifier"}],"title":"FloatingPointCounterHandler"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/coremetrics\/floatingpointcounterhandler"]}],"sections":[],"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/NOOPMetricsHandler"],"type":"conformingTypes","kind":"relationships","title":"Conforming Types"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounterHandler","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounterHandler\/increment(by:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounterHandler\/reset()"],"title":"Instance Methods"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics"]]},"abstract":[{"text":"A ","type":"text"},{"code":"FloatingPointCounterHandler","type":"codeVoice"},{"text":" represents a backend implementation of a ","type":"text"},{"code":"FloatingPointCounter","type":"codeVoice"},{"text":".","type":"text"}],"references":{"doc://co.pointfree.VaporRouting/documentation/CoreMetrics":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics","type":"topic","abstract":[],"title":"CoreMetrics","role":"collection","url":"\/documentation\/coremetrics","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/FloatingPointCounterHandler/increment(by:)":{"kind":"symbol","required":true,"type":"topic","url":"\/documentation\/coremetrics\/floatingpointcounterhandler\/increment(by:)","title":"increment(by:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounterHandler\/increment(by:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"increment","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Increment the counter.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/FloatingPointCounterHandler":{"abstract":[{"text":"A ","type":"text"},{"code":"FloatingPointCounterHandler","type":"codeVoice"},{"text":" represents a backend implementation of a ","type":"text"},{"code":"FloatingPointCounter","type":"codeVoice"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"FloatingPointCounterHandler","kind":"identifier"}],"url":"\/documentation\/coremetrics\/floatingpointcounterhandler","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounterHandler","title":"FloatingPointCounterHandler","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FloatingPointCounterHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/FloatingPointCounterHandler/reset()":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Reset the counter back to zero."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"()"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounterHandler\/reset()","required":true,"title":"reset()","url":"\/documentation\/coremetrics\/floatingpointcounterhandler\/reset()"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/NOOPMetricsHandler":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NOOPMetricsHandler","kind":"identifier"}],"url":"\/documentation\/coremetrics\/noopmetricshandler","kind":"symbol","abstract":[{"type":"text","text":"Ships with the metrics module, used for initial bootstrapping."}],"title":"NOOPMetricsHandler","navigatorTitle":[{"text":"NOOPMetricsHandler","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/NOOPMetricsHandler","type":"topic"}}}