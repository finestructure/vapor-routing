{"kind":"symbol","variants":[{"paths":["\/documentation\/niohttp2\/http2framepayloadtohttp1clientcodec\/init(httpprotocol:normalizehttpheaders:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"httpProtocol"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP235HTTP2FramePayloadToHTTP1ClientCodecC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec","text":"HTTP2FramePayloadToHTTP1ClientCodec"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP235HTTP2FramePayloadToHTTP1ClientCodecC12HTTPProtocolO","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/HTTPProtocol","text":"HTTPProtocol"},{"kind":"text","text":", "},{"kind":"externalParam","text":"normalizeHTTPHeaders"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":" = true)"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"httpProtocol","content":[{"inlineContent":[{"type":"text","text":"The protocol (usually "},{"type":"codeVoice","code":"\"http\""},{"type":"text","text":" or "},{"type":"codeVoice","code":"\"https\""},{"type":"text","text":" that is used)."}],"type":"paragraph"}]},{"name":"normalizeHTTPHeaders","content":[{"inlineContent":[{"type":"text","text":"Whether to automatically normalize the HTTP headers to be suitable for HTTP\/2."},{"type":"text","text":" "},{"type":"text","text":"The normalization will for example lower-case all header names (as required by the"},{"type":"text","text":" "},{"type":"text","text":"HTTP\/2 spec) and remove headers that are unsuitable for HTTP\/2 such as"},{"type":"text","text":" "},{"type":"text","text":"headers related to HTTP\/1â€™s keep-alive behaviour. Unless you are sure that all your"},{"type":"text","text":" "},{"type":"text","text":"headers conform to the HTTP\/2 spec, you should leave this parameter set to "},{"type":"codeVoice","code":"true"},{"type":"text","text":"."}],"type":"paragraph"}]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec"]]},"metadata":{"modules":[{"name":"NIOHTTP2"}],"externalID":"s:8NIOHTTP235HTTP2FramePayloadToHTTP1ClientCodecC12httpProtocol20normalizeHTTPHeadersA2C12HTTPProtocolO_Sbtcfc","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"httpProtocol"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTP2FramePayloadToHTTP1ClientCodec","preciseIdentifier":"s:8NIOHTTP235HTTP2FramePayloadToHTTP1ClientCodecC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"HTTPProtocol","preciseIdentifier":"s:8NIOHTTP235HTTP2FramePayloadToHTTP1ClientCodecC12HTTPProtocolO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"normalizeHTTPHeaders"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"roleHeading":"Initializer","symbolKind":"init","title":"init(httpProtocol:normalizeHTTPHeaders:)","role":"symbol"},"abstract":[{"text":"Initializes a ","type":"text"},{"code":"HTTP2PayloadToHTTP1ClientCodec","type":"codeVoice"},{"text":".","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/init(httpProtocol:normalizeHTTPHeaders:)"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ClientCodec/HTTPProtocol":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/HTTPProtocol","abstract":[{"text":"The HTTP protocol scheme being used on this connection.","type":"text"}],"navigatorTitle":[{"text":"HTTPProtocol","kind":"identifier"}],"type":"topic","title":"HTTP2FramePayloadToHTTP1ClientCodec.HTTPProtocol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPProtocol","kind":"identifier"}],"url":"\/documentation\/niohttp2\/http2framepayloadtohttp1clientcodec\/httpprotocol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2":{"type":"topic","url":"\/documentation\/niohttp2","kind":"symbol","title":"NIOHTTP2","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ClientCodec":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec","title":"HTTP2FramePayloadToHTTP1ClientCodec","abstract":[{"type":"text","text":"A simple channel handler that translates HTTP\/2 concepts into HTTP\/1 data types,"},{"type":"text","text":" "},{"type":"text","text":"and vice versa, for use on the client side."}],"role":"symbol","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTP2FramePayloadToHTTP1ClientCodec","kind":"identifier"}],"url":"\/documentation\/niohttp2\/http2framepayloadtohttp1clientcodec","type":"topic","navigatorTitle":[{"text":"HTTP2FramePayloadToHTTP1ClientCodec","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ClientCodec/init(httpProtocol:normalizeHTTPHeaders:)":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/init(httpProtocol:normalizeHTTPHeaders:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"httpProtocol","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTP2FramePayloadToHTTP1ClientCodec","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP235HTTP2FramePayloadToHTTP1ClientCodecC"},{"text":".","kind":"text"},{"text":"HTTPProtocol","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP235HTTP2FramePayloadToHTTP1ClientCodecC12HTTPProtocolO"},{"text":", ","kind":"text"},{"text":"normalizeHTTPHeaders","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"url":"\/documentation\/niohttp2\/http2framepayloadtohttp1clientcodec\/init(httpprotocol:normalizehttpheaders:)","kind":"symbol","abstract":[{"type":"text","text":"Initializes a "},{"code":"HTTP2PayloadToHTTP1ClientCodec","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","title":"init(httpProtocol:normalizeHTTPHeaders:)"}}}