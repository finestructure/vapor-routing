{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"append","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"each","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"seq","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"generator","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<[","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"]> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:ST","text":"Sequence","kind":"typeIdentifier"}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/append(each:_:)-1fw85"},"metadata":{"title":"append(each:_:)","role":"symbol","roleHeading":"Instance Method","modules":[{"name":"AsyncKit"}],"symbolKind":"method","externalID":"s:8AsyncKit20EventLoopFutureQueueC6append4each_7NIOCore0cdE0CySayq_GGx_AHyq_G7ElementQzctSTRzr0_lF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"append","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"each","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<[","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"]>"}],"extendedModule":"AsyncKit"},"variants":[{"paths":["\/documentation\/asynckit\/eventloopfuturequeue\/append(each:_:)-1fw85"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","abstract":[{"type":"text","text":"For each element of the provided collection, invoke the given generator"},{"type":"text","text":" "},{"type":"text","text":"and queue the returned future. Return a future whose value is an array"},{"type":"text","text":" "},{"type":"text","text":"containing the result of each generated future in the same order as the"},{"type":"text","text":" "},{"type":"text","text":"original sequence. The resulting array is intended to have semantics"},{"type":"text","text":" "},{"type":"text","text":"substantially similar to those provided by "},{"code":"EventLoop.flatten(_:on:)","type":"codeVoice"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue":{"role":"symbol","kind":"symbol","url":"\/documentation\/asynckit\/eventloopfuturequeue","type":"topic","title":"EventLoopFutureQueue","abstract":[{"type":"text","text":"Allows you to queue closures that produce an "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":", so each future only gets run if the previous ones complete, succeed, or fail."}],"navigatorTitle":[{"kind":"identifier","text":"EventLoopFutureQueue"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFutureQueue"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFuture","kind":"identifier"}],"navigatorTitle":[{"text":"EventLoopFuture","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopfuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"role":"symbol","title":"EventLoopFuture"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit":{"title":"AsyncKit","url":"\/documentation\/asynckit","role":"collection","abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/append(each:_:)-1fw85":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/append(each:_:)-1fw85","url":"\/documentation\/asynckit\/eventloopfuturequeue\/append(each:_:)-1fw85","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"append","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"each"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<["},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"]>"}],"kind":"symbol","abstract":[{"text":"For each element of the provided collection, invoke the given generator","type":"text"},{"text":" ","type":"text"},{"text":"and queue the returned future. Return a future whose value is an array","type":"text"},{"text":" ","type":"text"},{"text":"containing the result of each generated future in the same order as the","type":"text"},{"text":" ","type":"text"},{"text":"original sequence. The resulting array is intended to have semantics","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"substantially similar to those provided by "},{"type":"codeVoice","code":"EventLoop.flatten(_:on:)"},{"type":"text","text":"."}],"role":"symbol","title":"append(each:_:)"}}}