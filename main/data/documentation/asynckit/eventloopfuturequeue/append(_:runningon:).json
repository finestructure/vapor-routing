{"metadata":{"externalID":"s:8AsyncKit20EventLoopFutureQueueC6append_9runningOn7NIOCore0cdE0CyxGAIyXA_AC17ContinueConditionOtlF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"append"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">(() -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"runningOn"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8AsyncKit20EventLoopFutureQueueC","text":"EventLoopFutureQueue","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:8AsyncKit20EventLoopFutureQueueC17ContinueConditionO","text":"ContinueCondition","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"symbolKind":"method","modules":[{"name":"AsyncKit"}],"roleHeading":"Instance Method","title":"append(_:runningOn:)","role":"symbol"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"append","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"generator","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"@escaping","kind":"keyword"},{"text":" () -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"runningOn","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"next","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8AsyncKit20EventLoopFutureQueueC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue","text":"EventLoopFutureQueue","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:8AsyncKit20EventLoopFutureQueueC17ContinueConditionO","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueCondition","text":"ContinueCondition","kind":"typeIdentifier"},{"text":" = .complete) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The future passed into the "},{"type":"codeVoice","code":"generator"},{"type":"text","text":" parameter."}]}],"kind":"content"},{"parameters":[{"name":"generator","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The statement that will produce an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"This will automatically get wrapped in a closure."}]}]},{"name":"next","content":[{"inlineContent":[{"type":"text","text":"The condition that the previous future(s) must meet on their completion for the appended future to be run."},{"type":"text","text":" "},{"type":"text","text":"The default value is "},{"code":".complete","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"syntax":null,"type":"codeListing","code":["let model: EventLoopFuture<Model> = queue.append(Model.query(on: database).first())"]}],"kind":"content"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asynckit\/eventloopfuturequeue\/append(_:runningon:)"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue"]]},"sections":[],"abstract":[{"type":"text","text":"An overload for "},{"type":"codeVoice","code":"append(generator:runningOn:)"},{"type":"text","text":" that takes in an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" as an auto closure to provide a better 1-liner API."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/append(_:runningOn:)"},"references":{"doc://co.pointfree.VaporRouting/documentation/AsyncKit":{"title":"AsyncKit","url":"\/documentation\/asynckit","role":"collection","abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFuture","kind":"identifier"}],"navigatorTitle":[{"text":"EventLoopFuture","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopfuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"role":"symbol","title":"EventLoopFuture"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/append(_:runningOn:)":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/append(_:runningOn:)","url":"\/documentation\/asynckit\/eventloopfuturequeue\/append(_:runningon:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"append","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(() -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"runningOn","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopFutureQueue","kind":"typeIdentifier","preciseIdentifier":"s:8AsyncKit20EventLoopFutureQueueC"},{"text":".","kind":"text"},{"text":"ContinueCondition","kind":"typeIdentifier","preciseIdentifier":"s:8AsyncKit20EventLoopFutureQueueC17ContinueConditionO"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","abstract":[{"text":"An overload for ","type":"text"},{"code":"append(generator:runningOn:)","type":"codeVoice"},{"text":" that takes in an ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" as an auto closure to provide a better 1-liner API.","type":"text"}],"role":"symbol","title":"append(_:runningOn:)"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue":{"role":"symbol","kind":"symbol","url":"\/documentation\/asynckit\/eventloopfuturequeue","type":"topic","title":"EventLoopFutureQueue","abstract":[{"type":"text","text":"Allows you to queue closures that produce an "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":", so each future only gets run if the previous ones complete, succeed, or fail."}],"navigatorTitle":[{"kind":"identifier","text":"EventLoopFutureQueue"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFutureQueue"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/ContinueCondition":{"abstract":[{"text":"Under what conditions an appended closure should be run.","type":"text"}],"type":"topic","title":"EventLoopFutureQueue.ContinueCondition","navigatorTitle":[{"text":"ContinueCondition","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueCondition","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContinueCondition","kind":"identifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/asynckit\/eventloopfuturequeue\/continuecondition"}}}