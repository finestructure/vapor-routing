{"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asynckit\/eventloopfuturequeue\/continueerror\/previoussuccess"]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"previousSuccess","kind":"identifier"}],"platforms":["Linux"]}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueError"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueError\/previousSuccess"},"sections":[],"abstract":[{"type":"text","text":"A previous future succeeded, which we don’t desire."}],"metadata":{"role":"symbol","roleHeading":"Case","title":"EventLoopFutureQueue.ContinueError.previousSuccess","externalID":"s:8AsyncKit20EventLoopFutureQueueC13ContinueErrorO15previousSuccessyA2EmF","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"previousSuccess","kind":"identifier"}],"modules":[{"name":"AsyncKit"}],"symbolKind":"case"},"references":{"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/ContinueError/previousSuccess":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueError\/previousSuccess","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"previousSuccess"}],"abstract":[{"type":"text","text":"A previous future succeeded, which we don’t desire."}],"type":"topic","role":"symbol","title":"EventLoopFutureQueue.ContinueError.previousSuccess","url":"\/documentation\/asynckit\/eventloopfuturequeue\/continueerror\/previoussuccess"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit":{"title":"AsyncKit","url":"\/documentation\/asynckit","role":"collection","abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue":{"role":"symbol","kind":"symbol","url":"\/documentation\/asynckit\/eventloopfuturequeue","type":"topic","title":"EventLoopFutureQueue","abstract":[{"type":"text","text":"Allows you to queue closures that produce an "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":", so each future only gets run if the previous ones complete, succeed, or fail."}],"navigatorTitle":[{"kind":"identifier","text":"EventLoopFutureQueue"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFutureQueue"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/ContinueError":{"role":"symbol","kind":"symbol","url":"\/documentation\/asynckit\/eventloopfuturequeue\/continueerror","type":"topic","title":"EventLoopFutureQueue.ContinueError","abstract":[{"type":"text","text":"Errors that get propogated based on a future’s completion status and the next appended closure’s continuation condition."}],"navigatorTitle":[{"kind":"identifier","text":"ContinueError"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContinueError"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueError"}}}