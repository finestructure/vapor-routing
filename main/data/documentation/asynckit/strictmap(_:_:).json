{"sections":[],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strictMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"A","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Res","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":"?, (","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Res","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Res"},{"kind":"text","text":"?"}],"symbolKind":"func","externalID":"s:8AsyncKit9strictMapyq_SgxSg_q_xKXEtKr0_lF","title":"strictMap(_:_:)","modules":[{"name":"AsyncKit"}],"roleHeading":"Function","role":"symbol"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/strictMap(_:_:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strictMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"A","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Res","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"a","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"transform","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Res","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Res","kind":"typeIdentifier"},{"text":"?","kind":"text"}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"content":[{"type":"paragraph","inlineContent":[{"text":"This “baseline”, single-item version of the function is trivially re-expressible using the ","type":"text"},{"code":"??","type":"codeVoice"},{"text":" operator or","type":"text"},{"text":" ","type":"text"},{"code":"Optional.map(_:)","type":"codeVoice"},{"text":", but this is not the case for any of the other overloads.","type":"text"}]}],"style":"note","type":"aside"}]}],"abstract":[{"text":"Given one or more optionals as inputs, checks whether each input is ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":". If ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"any"}]},{"text":" input is ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":", ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" is","type":"text"},{"text":" ","type":"text"},{"text":"immediately returned as an overall results. If all of the inputs have values, the ","type":"text"},{"code":"transform","type":"codeVoice"},{"text":" callback is invoked","type":"text"},{"text":" ","type":"text"},{"text":"with all of the unwrapped values as parameters.","type":"text"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asynckit\/strictmap(_:_:)"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://co.pointfree.VaporRouting/documentation/AsyncKit":{"title":"AsyncKit","url":"\/documentation\/asynckit","role":"collection","abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/strictMap(_:_:)":{"title":"strictMap(_:_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/strictMap(_:_:)","type":"topic","role":"symbol","abstract":[{"text":"Given one or more optionals as inputs, checks whether each input is ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":". If ","type":"text"},{"inlineContent":[{"type":"text","text":"any"}],"type":"emphasis"},{"text":" input is ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":", ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" is","type":"text"},{"text":" ","type":"text"},{"text":"immediately returned as an overall results. If all of the inputs have values, the ","type":"text"},{"type":"codeVoice","code":"transform"},{"text":" callback is invoked","type":"text"},{"text":" ","type":"text"},{"text":"with all of the unwrapped values as parameters.","type":"text"}],"url":"\/documentation\/asynckit\/strictmap(_:_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"strictMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"A"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Res"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":"?, ("},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Res"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Res"},{"kind":"text","text":"?"}]}}}