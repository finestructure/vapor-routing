{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipVO\/init(_:_:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipVO\/p0","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipVO\/p1"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipVO\/parse(_:)"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipVO\/Parser-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipVO\/ParserPrinter-Implementations"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ZipVO","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P0"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"P1"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"P0"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Parser","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","preciseIdentifier":"s:7Parsing6ParserP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P1"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Parser","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","preciseIdentifier":"s:7Parsing6ParserP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P0"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"P1"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P0"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"}]}]}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipVO","interfaceLanguage":"swift"},"metadata":{"extendedModule":"Parsing","navigatorTitle":[{"kind":"identifier","text":"ZipVO"}],"modules":[{"name":"Parsing"}],"role":"symbol","externalID":"s:7Parsing13ParserBuilderO5ZipVOV","symbolKind":"struct","roleHeading":"Structure","title":"ParserBuilder.ZipVO","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ZipVO"}]},"variants":[{"paths":["\/documentation\/parsing\/parserbuilder\/zipvo"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipVO/ParserPrinter-Implementations":{"url":"\/documentation\/parsing\/parserbuilder\/zipvo\/parserprinter-implementations","kind":"article","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipVO\/ParserPrinter-Implementations","abstract":[],"type":"topic","title":"ParserPrinter Implementations"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/parserprinter","navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"P0"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"code":"P1","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"ParserPrinter","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"P0.Input"},{"text":" is ","type":"text"},{"code":"P1.Input","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"P0.Output","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","title":"ParserPrinter","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"abstract":[{"type":"text","text":"A "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","type":"reference"},{"type":"text","text":" that can incrementally “print” an output value back into an input."}]},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","title":"Parsing","url":"\/documentation\/parsing","role":"collection","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipVO/parse(_:)":{"url":"\/documentation\/parsing\/parserbuilder\/zipvo\/parse(_:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipVO\/parse(_:)","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"type":"topic","title":"parse(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"P0"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"P1","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipVO/p0":{"type":"topic","kind":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipvo\/p0","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipVO\/p0","role":"symbol","title":"p0","abstract":[],"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"p0"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"P0"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"navigatorTitle":[{"text":"Parser","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"title":"Parser","role":"symbol","url":"\/documentation\/parsing\/parser","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value from an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder":{"navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"type":"topic","abstract":[{"type":"text","text":"A custom parameter attribute that constructs parsers from closures. The constructed parser"},{"type":"text","text":" "},{"type":"text","text":"runs a number of parsers, one after the other, and accumulates their outputs."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","title":"ParserBuilder","url":"\/documentation\/parsing\/parserbuilder","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserBuilder"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipVO":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ZipVO","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[],"navigatorTitle":[{"text":"ZipVO","kind":"identifier"}],"title":"ParserBuilder.ZipVO","url":"\/documentation\/parsing\/parserbuilder\/zipvo","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipVO"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipVO/p1":{"role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipvo\/p1","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipVO\/p1","title":"p1","type":"topic","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"p1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"P1"}],"abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipVO/init(_:_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipVO\/init(_:_:)","title":"init(_:_:)","url":"\/documentation\/parsing\/parserbuilder\/zipvo\/init(_:_:)","role":"symbol","kind":"symbol","type":"topic","abstract":[],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"P0"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P1"},{"kind":"text","text":")"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipVO/Parser-Implementations":{"role":"collectionGroup","kind":"article","type":"topic","abstract":[],"title":"Parser Implementations","url":"\/documentation\/parsing\/parserbuilder\/zipvo\/parser-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipVO\/Parser-Implementations"}}}