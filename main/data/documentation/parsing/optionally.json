{"kind":"symbol","abstract":[{"text":"A parser that runs the given parser and succeeds with ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" if it fails.","type":"text"}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"]}],"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally","interfaceLanguage":"swift"},"metadata":{"symbolKind":"struct","modules":[{"name":"Parsing"}],"title":"Optionally","navigatorTitle":[{"text":"Optionally","kind":"identifier"}],"externalID":"s:7Parsing10OptionallyV","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Optionally","kind":"identifier"}],"role":"symbol","roleHeading":"Structure"},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally\/init(_:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally\/wrapped"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally\/parse(_:)"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally\/Parser-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally\/ParserPrinter-Implementations"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Optionally"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Wrapped"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Wrapped"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","preciseIdentifier":"s:7Parsing6ParserP","text":"Parser"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Use this parser when you are parsing into an output data model that contains ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When the wrapped parser fails "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally","type":"reference","isActive":true},{"type":"text","text":" will backtrack any consumption of the input so"},{"type":"text","text":" "},{"type":"text","text":"that later parsers can attempt to parser the input:"}]},{"type":"codeListing","code":["let parser = Parse {","  \"Hello,\"","  Optionally { \" \"; Bool.parser() }","  \" world!\"","}","","try parser.parse(\"Hello, world!\")      \/\/ nil 1️⃣","try parser.parse(\"Hello, true world!\") \/\/ true"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally","isActive":true,"type":"reference"},{"text":" did not backtrack then 1️⃣ would fail because it would consume a space,","type":"text"},{"text":" ","type":"text"},{"text":"causing the ","type":"text"},{"code":"\" world!\"","type":"codeVoice"},{"text":" parser to fail since there is no longer any space to consume.","type":"text"},{"text":" ","type":"text"},{"text":"Read the article ","type":"text"},{"text":"doc:Backtracking","type":"text"},{"text":" to learn more about how backtracking works.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you are optionally parsing input that should coalesce into some default, you can skip the"},{"type":"text","text":" "},{"type":"text","text":"optionality and instead use "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally\/replaceError(with:)","type":"reference","isActive":true},{"type":"text","text":" with a default:"}]},{"type":"codeListing","code":["Optionally { Int.parser() }","  .map { $0 ?? 0 }","","\/\/ vs.","","Int.parser()","  .replaceError(with: 0)"],"syntax":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"paths":["\/documentation\/parsing\/optionally"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing":{"type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","title":"Parsing","url":"\/documentation\/parsing","role":"collection","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Optionally/parse(_:)":{"type":"topic","url":"\/documentation\/parsing\/optionally\/parse(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally\/parse(_:)","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"parse(_:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Optionally":{"title":"Optionally","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Optionally","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally","navigatorTitle":[{"text":"Optionally","kind":"identifier"}],"url":"\/documentation\/parsing\/optionally","abstract":[{"text":"A parser that runs the given parser and succeeds with ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" if it fails.","type":"text"}],"kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Optionally/wrapped":{"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrapped"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Wrapped"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally\/wrapped","url":"\/documentation\/parsing\/optionally\/wrapped","title":"wrapped","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Optionally/ParserPrinter-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally\/ParserPrinter-Implementations","kind":"article","role":"collectionGroup","url":"\/documentation\/parsing\/optionally\/parserprinter-implementations","type":"topic","title":"ParserPrinter Implementations","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Optionally/replaceError(with:)":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally\/replaceError(with:)","title":"replaceError(with:)","url":"\/documentation\/parsing\/optionally\/replaceerror(with:)","type":"topic","abstract":[{"type":"text","text":"A parser that replaces its error with a provided output."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceError"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"ReplaceError","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Optionally/init(_:)":{"abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally\/init(_:)","title":"init(_:)","role":"symbol","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","text":"Wrapped"},{"kind":"text","text":")"}],"type":"topic","url":"\/documentation\/parsing\/optionally\/init(_:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"navigatorTitle":[{"text":"Parser","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"title":"Parser","role":"symbol","url":"\/documentation\/parsing\/parser","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value from an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Optionally/Parser-Implementations":{"type":"topic","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally\/Parser-Implementations","role":"collectionGroup","title":"Parser Implementations","abstract":[],"url":"\/documentation\/parsing\/optionally\/parser-implementations"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"abstract":[{"text":"A ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser"},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","url":"\/documentation\/parsing\/parserprinter","type":"topic","role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Wrapped","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ParserPrinter","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"kind":"symbol","title":"ParserPrinter","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}]}}}