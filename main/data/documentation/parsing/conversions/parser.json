{"metadata":{"roleHeading":"Structure","extendedModule":"Parsing","title":"Conversions.Parser","symbolKind":"struct","modules":[{"name":"Parsing"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"navigatorTitle":[{"kind":"identifier","text":"Parser"}],"externalID":"s:7Parsing11ConversionsO6ParserV"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/conversions\/parser"]}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/Parser\/init(parser:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/Parser\/parser"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/Parser\/apply(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/Parser\/unapply(_:)"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/Parser\/Conversion-Implementations"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions"]]},"kind":"symbol","abstract":[{"type":"text","text":"A conversion from a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"},{"type":"text","text":"’s input to its output."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Upstream"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7Parsing13ParserPrinterP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","kind":"typeIdentifier","text":"ParserPrinter"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7Parsing21PrependableCollectionP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrependableCollection","kind":"typeIdentifier","text":"PrependableCollection"}],"languages":["swift"],"platforms":["Linux"]}]},{"content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"You will not typically need to interact with this type directly. Instead you will usually use"},{"type":"text","text":" "},{"type":"text","text":"the "},{"code":"Conversion\/parse(_:)-swift.type.method","type":"codeVoice"},{"type":"text","text":" operation, which constructs this type."}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/Parser"},"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversion"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/Parser/init(parser:)":{"title":"init(parser:)","role":"symbol","type":"topic","kind":"symbol","abstract":[],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"parser"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":")"}],"url":"\/documentation\/parsing\/conversions\/parser\/init(parser:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/Parser\/init(parser:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/Parser/Conversion-Implementations":{"type":"topic","url":"\/documentation\/parsing\/conversions\/parser\/conversion-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/Parser\/Conversion-Implementations","title":"Conversion Implementations","abstract":[],"role":"collectionGroup","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"navigatorTitle":[{"text":"Parser","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"title":"Parser","role":"symbol","url":"\/documentation\/parsing\/parser","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value from an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions":{"role":"symbol","abstract":[{"type":"text","text":"A namespace for types that serve as conversions."}],"kind":"symbol","navigatorTitle":[{"text":"Conversions","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversions","kind":"identifier"}],"type":"topic","title":"Conversions","url":"\/documentation\/parsing\/conversions","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"title":"ParserPrinter","role":"symbol","url":"\/documentation\/parsing\/parserprinter","abstract":[{"text":"A ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser"},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","title":"Parsing","url":"\/documentation\/parsing","role":"collection","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversion":{"navigatorTitle":[{"text":"Conversion","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversion","kind":"identifier"}],"title":"Conversion","role":"symbol","url":"\/documentation\/parsing\/conversion","abstract":[{"text":"Declares a type that can transform an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value into an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value ","type":"text"},{"inlineContent":[{"text":"and","type":"text"}],"type":"emphasis"},{"text":" transform an","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value back into an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversion"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/Parser/parser":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/Parser\/parser","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"parser"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Upstream"}],"abstract":[],"url":"\/documentation\/parsing\/conversions\/parser\/parser","kind":"symbol","title":"parser","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/Parser/apply(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"apply","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"type":"topic","url":"\/documentation\/parsing\/conversions\/parser\/apply(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/Parser\/apply(_:)","title":"apply(_:)","abstract":[{"type":"text","text":"Attempts to transform an input into an output."}],"role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/PrependableCollection":{"url":"\/documentation\/parsing\/prependablecollection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrependableCollection","kind":"identifier"}],"navigatorTitle":[{"text":"PrependableCollection","kind":"identifier"}],"type":"topic","abstract":[{"text":"A collection that supports empty initialization and the ability to prepend a sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements of elements to itself.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrependableCollection","kind":"symbol","title":"PrependableCollection","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/Parser":{"url":"\/documentation\/parsing\/conversions\/parser","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/Parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"abstract":[{"type":"text","text":"A conversion from a "},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","isActive":true},{"type":"text","text":"’s input to its output."}],"title":"Conversions.Parser","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/Parser/unapply(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unapply","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}],"type":"topic","url":"\/documentation\/parsing\/conversions\/parser\/unapply(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/Parser\/unapply(_:)","title":"unapply(_:)","abstract":[{"type":"text","text":"Attempts to transform an output back into an input."}],"role":"symbol","kind":"symbol"}}}