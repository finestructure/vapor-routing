{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/conversions\/bytestostring\/case(_:)-261iz"]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/BytesToString\/case(_:)-261iz","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"type":"text","text":"Converts the associated values of an enum case into the case, and an enum case into its"},{"type":"text","text":" "},{"type":"text","text":"associated values."}],"metadata":{"title":"case(_:)","externalID":"s:7Parsing10ConversionPAAE4casey9CasePaths0D4PathVyqd_0_qd__Gqd_0_qd__cAHRszr0_lFZ::SYNTHESIZED::s:7Parsing11ConversionsO13BytesToStringV","role":"symbol","symbolKind":"method","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`case`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Values","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Enum","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Values","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Enum","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"roleHeading":"Type Method","modules":[{"name":"Parsing"}],"extendedModule":"Parsing"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/BytesToString","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/BytesToString\/Conversion-Implementations"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`case`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Values","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Enum","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"initializer","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Values","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Enum","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CasePaths\/CasePath","preciseIdentifier":"s:9CasePaths0A4PathV","text":"CasePath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Enum","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Values","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"A conversion that can embed the associated values of an enum case into the case,"},{"type":"text","text":" "},{"type":"text","text":"and extract the associated values from the case."}],"type":"paragraph"}]},{"kind":"parameters","parameters":[{"name":"embed","content":[{"type":"paragraph","inlineContent":[{"text":"An embed function where ","type":"text"},{"code":"Values","type":"codeVoice"},{"text":" directly maps to the memory","type":"text"},{"text":" ","type":"text"},{"text":"layout of ","type":"text"},{"code":"Enum","type":"codeVoice"},{"text":", for example the internal, default initializer that is automatically","type":"text"},{"text":" ","type":"text"},{"text":"synthesized for structs.","type":"text"}]}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"Useful for transforming the output of a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","type":"reference"},{"text":" into an enum:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["enum Expression {","  case add(Int, Int)","  ...","}","","let add = ParsePrint(.case(Expression.add)) {","  Int.parser()","  \"+\"","  Int.parser()","}","try add.parse(\"1+2\")  \/\/ Expression.add(1, 2)"]},{"inlineContent":[{"type":"text","text":"To transform the output of a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"},{"type":"text","text":" into a struct, see "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/BytesToString\/memberwise(_:)"},{"type":"text","text":"."}],"type":"paragraph"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions":{"role":"symbol","abstract":[{"type":"text","text":"A namespace for types that serve as conversions."}],"kind":"symbol","navigatorTitle":[{"text":"Conversions","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversions","kind":"identifier"}],"type":"topic","title":"Conversions","url":"\/documentation\/parsing\/conversions","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions"},"doc://co.pointfree.VaporRouting/documentation/Parsing/PrependableCollection":{"url":"\/documentation\/parsing\/prependablecollection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrependableCollection","kind":"identifier"}],"navigatorTitle":[{"text":"PrependableCollection","kind":"identifier"}],"type":"topic","abstract":[{"text":"A collection that supports empty initialization and the ability to prepend a sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements of elements to itself.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrependableCollection","kind":"symbol","title":"PrependableCollection","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","title":"Parsing","url":"\/documentation\/parsing","role":"collection","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"navigatorTitle":[{"text":"Parser","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"title":"Parser","role":"symbol","url":"\/documentation\/parsing\/parser","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value from an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/BytesToString/Conversion-Implementations":{"role":"collectionGroup","url":"\/documentation\/parsing\/conversions\/bytestostring\/conversion-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/BytesToString\/Conversion-Implementations","kind":"article","abstract":[],"title":"Conversion Implementations","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/BytesToString/memberwise(_:)":{"title":"memberwise(_:)","type":"topic","kind":"symbol","url":"\/documentation\/parsing\/conversions\/bytestostring\/memberwise(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"memberwise"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Values"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Struct"},{"kind":"text","text":">(("},{"text":"Values","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Struct","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A conversion from a tuple of values into a struct and a struct into a tuple of values, using a"},{"type":"text","text":" "},{"type":"text","text":"memberwise initializer."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/BytesToString\/memberwise(_:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/BytesToString":{"url":"\/documentation\/parsing\/conversions\/bytestostring","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BytesToString","kind":"identifier"}],"navigatorTitle":[{"text":"BytesToString","kind":"identifier"}],"type":"topic","abstract":[{"text":"A conversion from a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrependableCollection"},{"text":" of UTF-8 bytes to a string.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/BytesToString","kind":"symbol","title":"Conversions.BytesToString","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/BytesToString/case(_:)-261iz":{"kind":"symbol","type":"topic","url":"\/documentation\/parsing\/conversions\/bytestostring\/case(_:)-261iz","role":"symbol","title":"case(_:)","abstract":[{"type":"text","text":"Converts the associated values of an enum case into the case, and an enum case into its"},{"type":"text","text":" "},{"type":"text","text":"associated values."}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`case`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Values","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Enum","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Values","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Enum","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/BytesToString\/case(_:)-261iz"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"title":"ParserPrinter","role":"symbol","url":"\/documentation\/parsing\/parserprinter","abstract":[{"text":"A ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser"},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"},"doc://co.pointfree.VaporRouting/documentation/CasePaths/CasePath":{"role":"symbol","abstract":[{"type":"text","text":"A path that supports embedding a value in a root and attempting to extract a root’s embedded"},{"type":"text","text":" "},{"type":"text","text":"value."}],"kind":"symbol","navigatorTitle":[{"text":"CasePath","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CasePath","kind":"identifier"}],"type":"topic","title":"CasePath","url":"\/documentation\/casepaths\/casepath","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CasePaths\/CasePath"}}}