{"kind":"symbol","sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/End","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/End\/ParserPrinter-Implementations"]]},"variants":[{"paths":["\/documentation\/parsing\/end\/erasetoanyparserprinter()"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"Parsing"}],"extendedModule":"Parsing","roleHeading":"Instance Method","symbolKind":"method","role":"symbol","title":"eraseToAnyParserPrinter()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParserPrinter","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParserPrinter","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing16AnyParserPrinterV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"externalID":"s:7Parsing13ParserPrinterPAAE010eraseToAnybC0AA0fbC0Vy5InputQz6OutputQzGyF::SYNTHESIZED::s:7Parsing3EndV"},"abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParserPrinter"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter","text":"AnyParserPrinter","preciseIdentifier":"s:7Parsing16AnyParserPrinterV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"languages":["swift"]}]},{"content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter","type":"reference","isActive":true},{"type":"text","text":" wrapping this parser-printer."}]}],"kind":"content"},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"text":"This form of ","type":"text"},{"inlineContent":[{"text":"type erasure","type":"text"}],"type":"emphasis"},{"text":" preserves abstraction across API boundaries, such as different","type":"text"},{"text":" ","type":"text"},{"text":"modules.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"When you expose your composed parser-printers as the "},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter","isActive":true},{"type":"text","text":" type, you can change"},{"type":"text","text":" "},{"type":"text","text":"the underlying implementation over time without affecting existing clients."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Equivalent to passing "},{"code":"self","type":"codeVoice"},{"type":"text","text":" to "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter\/init(_:)","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/End\/eraseToAnyParserPrinter()"},"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/AnyParserPrinter/init(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter\/init(_:)","url":"\/documentation\/parsing\/anyparserprinter\/init(_:)","type":"topic","role":"symbol","title":"init(_:)","abstract":[{"type":"text","text":"Creates a type-erasing parser-printer to wrap the given parser-printer."}],"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"text":"P","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/End/ParserPrinter-Implementations":{"abstract":[],"type":"topic","kind":"article","url":"\/documentation\/parsing\/end\/parserprinter-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/End\/ParserPrinter-Implementations","title":"ParserPrinter Implementations","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/Parsing/End/eraseToAnyParserPrinter()":{"abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"url":"\/documentation\/parsing\/end\/erasetoanyparserprinter()","type":"topic","role":"symbol","kind":"symbol","title":"eraseToAnyParserPrinter()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/End\/eraseToAnyParserPrinter()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParserPrinter","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParserPrinter","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing16AnyParserPrinterV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","title":"Parsing","url":"\/documentation\/parsing","role":"collection","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/AnyParserPrinter":{"title":"AnyParserPrinter","abstract":[{"type":"text","text":"A type-erased parser-printer of "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" from "},{"type":"codeVoice","code":"Input"},{"type":"text","text":"."}],"url":"\/documentation\/parsing\/anyparserprinter","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParserPrinter"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter","navigatorTitle":[{"kind":"identifier","text":"AnyParserPrinter"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/End":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/End","url":"\/documentation\/parsing\/end","type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"End","kind":"identifier"}],"title":"End","navigatorTitle":[{"kind":"identifier","text":"End"}],"abstract":[{"type":"text","text":"A parser that succeeds if the input is empty, and fails otherwise."}]}}}