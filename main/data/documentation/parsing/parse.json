{"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parse"}],"modules":[{"name":"Parsing"}],"title":"Parse","externalID":"s:7Parsing5ParseV","navigatorTitle":[{"kind":"identifier","text":"Parse"}],"role":"symbol","symbolKind":"struct","roleHeading":"Structure"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parse"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse\/init(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse\/init(_:with:)-3vq0d","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse\/init(_:with:)-7mnz8","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse\/init(_:with:)-87urg","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse\/init(with:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse\/parsers"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse\/parse(_:)"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse\/Parser-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse\/ParserPrinter-Implementations"],"title":"Default Implementations"}],"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parse","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Parsers","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Parser","preciseIdentifier":"s:7Parsing6ParserP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","kind":"typeIdentifier"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A general entry point into "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","type":"reference","isActive":true},{"type":"text","text":" syntax, which can be used to build complex parsers"},{"type":"text","text":" "},{"type":"text","text":"from simpler ones."}]},{"type":"codeListing","code":["let point = Parse {","  \"(\"","  Int.parser()","  \",\"","  Int.parser()","  \")\"","}","","try point.parse(\"(2,-4)\")  \/\/ (2, -4)","","try point.parse(\"(42,blob)\")","\/\/ error: unexpected input","\/\/  --> input:1:5","\/\/ 1 | (42,blob)","\/\/   |     ^ expected integer"],"syntax":"swift"}],"kind":"content"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing"]]},"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers to accumulate their outputs."}],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"navigatorTitle":[{"text":"Parser","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"title":"Parser","role":"symbol","url":"\/documentation\/parsing\/parser","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value from an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser"},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","title":"Parsing","url":"\/documentation\/parsing","role":"collection","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parse/init(with:)":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","url":"\/documentation\/parsing\/parse\/init(with:)","title":"init(with:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse\/init(with:)","abstract":[{"type":"text","text":"An entry point into "},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","isActive":true},{"type":"text","text":" syntax."}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder":{"navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"type":"topic","abstract":[{"type":"text","text":"A custom parameter attribute that constructs parsers from closures. The constructed parser"},{"type":"text","text":" "},{"type":"text","text":"runs a number of parsers, one after the other, and accumulates their outputs."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","title":"ParserBuilder","url":"\/documentation\/parsing\/parserbuilder","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserBuilder"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parse/ParserPrinter-Implementations":{"url":"\/documentation\/parsing\/parse\/parserprinter-implementations","title":"ParserPrinter Implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse\/ParserPrinter-Implementations","abstract":[],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parse/init(_:with:)-87urg":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Upstream","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":")"}],"kind":"symbol","url":"\/documentation\/parsing\/parse\/init(_:with:)-87urg","title":"init(_:with:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse\/init(_:with:)-87urg","abstract":[{"type":"text","text":"A parser builder that replaces a void output with a given value."}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parse/init(_:with:)-7mnz8":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Upstream","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Downstream"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Downstream"},{"kind":"text","text":", "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":")"}],"kind":"symbol","url":"\/documentation\/parsing\/parse\/init(_:with:)-7mnz8","title":"init(_:with:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse\/init(_:with:)-7mnz8","abstract":[{"type":"text","text":"A parser builder that bakes in a conversion of the tuple output."}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Parsers"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","title":"ParserPrinter","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","isActive":true,"type":"reference"},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"url":"\/documentation\/parsing\/parserprinter"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parse":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers to accumulate their outputs."}],"navigatorTitle":[{"text":"Parse","kind":"identifier"}],"url":"\/documentation\/parsing\/parse","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse","title":"Parse","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parse","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parse/init(_:with:)-3vq0d":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Upstream","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":", "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":")"}],"kind":"symbol","url":"\/documentation\/parsing\/parse\/init(_:with:)-3vq0d","title":"init(_:with:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse\/init(_:with:)-3vq0d","abstract":[{"type":"text","text":"A parser builder that bakes in a transformation of the tuple output."}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parse/Parser-Implementations":{"title":"Parser Implementations","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse\/Parser-Implementations","abstract":[],"kind":"article","url":"\/documentation\/parsing\/parse\/parser-implementations","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parse/parse(_:)":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse\/parse(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"url":"\/documentation\/parsing\/parse\/parse(_:)","title":"parse(_:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parse/parsers":{"title":"parsers","role":"symbol","type":"topic","url":"\/documentation\/parsing\/parse\/parsers","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"parsers"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Parsers"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse\/parsers","abstract":[],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parse/init(_:)":{"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Downstream"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Downstream"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse\/init(_:)","type":"topic","title":"init(_:)","kind":"symbol","url":"\/documentation\/parsing\/parse\/init(_:)","abstract":[],"conformance":{"constraints":[{"type":"codeVoice","code":"Parsers"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}}}}