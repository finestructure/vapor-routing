{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathZipVVOVV","doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathZipVVOVV\/Parser-Implementations"]]},"metadata":{"symbolKind":"method","role":"symbol","extendedModule":"Parsing","externalID":"s:7Parsing6ParserPAAE12replaceError4withAA7ParsersO07ReplaceD0Vy_xG6OutputQz_tF::SYNTHESIZED::s:10URLRouting12PathZipVVOVVV","modules":[{"name":"URLRouting"}],"title":"replaceError(with:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceError"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","text":"ReplaceError","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceError"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"kind":"internalParam","text":"output"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parsers","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ReplaceError","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/ReplaceError","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A parser that never fails."}]}]},{"kind":"parameters","parameters":[{"name":"output","content":[{"inlineContent":[{"type":"text","text":"An output to return should the upstream parser fail."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Useful for providing a default output for a parser.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, we could create a parser that parses a plus or minus sign and maps the result to"},{"type":"text","text":" "},{"type":"text","text":"a positive or negative multiplier respectively, or else defaults to a positive multiplier:"}]},{"type":"codeListing","code":["let sign = OneOf {","  \"+\".map { 1 }","  \"-\".map { -1 }","}",".replaceError(with: 1)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Notably this parser is non-throwing:"}]},{"type":"codeListing","code":["var input = \"-123\"[...]","","\/\/ No `try` required:","sign.parse(&input)  \/\/ -1","input               \/\/ \"123\"","","\/\/ Simply returns the default when parsing fails:","sign.parse(&input)  \/\/ 1"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"This means it can be used to turn throwing parsers into non-throwing ones, which is important","type":"text"},{"text":" ","type":"text"},{"text":"for building up complex parsers that cannot fail.","type":"text"}]}]}],"sections":[],"variants":[{"paths":["\/documentation\/urlrouting\/pathzipvvovv\/replaceerror(with:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathZipVVOVV\/replaceError(with:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","abstract":[{"text":"A parser that replaces its error with a provided output.","type":"text"}],"references":{"doc://co.pointfree.VaporRouting/documentation/URLRouting":{"url":"\/documentation\/urlrouting","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting","role":"collection","title":"URLRouting","kind":"symbol","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathZipVVOVV/Parser-Implementations":{"abstract":[],"role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathZipVVOVV\/Parser-Implementations","kind":"article","type":"topic","title":"Parser Implementations","url":"\/documentation\/urlrouting\/pathzipvvovv\/parser-implementations"},"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathZipVVOVV/replaceError(with:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceError"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","kind":"typeIdentifier","text":"ReplaceError"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"url":"\/documentation\/urlrouting\/pathzipvvovv\/replaceerror(with:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathZipVVOVV\/replaceError(with:)","kind":"symbol","abstract":[{"text":"A parser that replaces its error with a provided output.","type":"text"}],"title":"replaceError(with:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathZipVVOVV":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathZipVVOVV","title":"PathZipVVOVV","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathZipVVOVV","kind":"identifier"}],"kind":"symbol","abstract":[],"role":"symbol","navigatorTitle":[{"text":"PathZipVVOVV","kind":"identifier"}],"url":"\/documentation\/urlrouting\/pathzipvvovv","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parsers":{"navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"title":"Parsers","role":"symbol","url":"\/documentation\/parsing\/parsers","abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parsers/ReplaceError":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"A parser that replaces its error with a provided output."}],"url":"\/documentation\/parsing\/parsers\/replaceerror","title":"Parsers.ReplaceError","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/ReplaceError","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReplaceError","kind":"identifier"}],"navigatorTitle":[{"text":"ReplaceError","kind":"identifier"}]}}}