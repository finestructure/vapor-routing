{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathZipOVOVV","doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathZipOVOVV\/Parser-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/urlrouting\/pathzipovovv\/replaceerror(with:)"]}],"abstract":[{"text":"A parser that replaces its error with a provided output.","type":"text"}],"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceError"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"kind":"internalParam","text":"output"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/ReplaceError","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","text":"ReplaceError"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A parser that never fails."}]}],"kind":"content"},{"parameters":[{"content":[{"inlineContent":[{"text":"An output to return should the upstream parser fail.","type":"text"}],"type":"paragraph"}],"name":"output"}],"kind":"parameters"},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Useful for providing a default output for a parser."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example, we could create a parser that parses a plus or minus sign and maps the result to"},{"type":"text","text":" "},{"type":"text","text":"a positive or negative multiplier respectively, or else defaults to a positive multiplier:"}],"type":"paragraph"},{"code":["let sign = OneOf {","  \"+\".map { 1 }","  \"-\".map { -1 }","}",".replaceError(with: 1)"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Notably this parser is non-throwing:","type":"text"}],"type":"paragraph"},{"code":["var input = \"-123\"[...]","","\/\/ No `try` required:","sign.parse(&input)  \/\/ -1","input               \/\/ \"123\"","","\/\/ Simply returns the default when parsing fails:","sign.parse(&input)  \/\/ 1"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"This means it can be used to turn throwing parsers into non-throwing ones, which is important","type":"text"},{"text":" ","type":"text"},{"text":"for building up complex parsers that cannot fail.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"metadata":{"role":"symbol","extendedModule":"Parsing","roleHeading":"Instance Method","externalID":"s:7Parsing6ParserPAAE12replaceError4withAA7ParsersO07ReplaceD0Vy_xG6OutputQz_tF::SYNTHESIZED::s:10URLRouting12PathZipOVOVVV","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceError","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","text":"ReplaceError","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"symbolKind":"method","title":"replaceError(with:)","modules":[{"name":"URLRouting"}]},"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathZipOVOVV\/replaceError(with:)"},"references":{"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathZipOVOVV":{"type":"topic","kind":"symbol","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"PathZipOVOVV"}],"url":"\/documentation\/urlrouting\/pathzipovovv","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathZipOVOVV","title":"PathZipOVOVV","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathZipOVOVV","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parsers":{"navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"title":"Parsers","role":"symbol","url":"\/documentation\/parsing\/parsers","abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parsers/ReplaceError":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"A parser that replaces its error with a provided output."}],"url":"\/documentation\/parsing\/parsers\/replaceerror","title":"Parsers.ReplaceError","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/ReplaceError","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReplaceError","kind":"identifier"}],"navigatorTitle":[{"text":"ReplaceError","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/URLRouting":{"url":"\/documentation\/urlrouting","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting","role":"collection","title":"URLRouting","kind":"symbol","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathZipOVOVV/replaceError(with:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathZipOVOVV\/replaceError(with:)","type":"topic","url":"\/documentation\/urlrouting\/pathzipovovv\/replaceerror(with:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceError"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","text":"ReplaceError"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"kind":"symbol","abstract":[{"text":"A parser that replaces its error with a provided output.","type":"text"}],"role":"symbol","title":"replaceError(with:)"},"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathZipOVOVV/Parser-Implementations":{"type":"topic","kind":"article","abstract":[],"url":"\/documentation\/urlrouting\/pathzipovovv\/parser-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathZipOVOVV\/Parser-Implementations","title":"Parser Implementations","role":"collectionGroup"}}}