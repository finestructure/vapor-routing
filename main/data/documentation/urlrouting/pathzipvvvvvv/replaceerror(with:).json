{"variants":[{"paths":["\/documentation\/urlrouting\/pathzipvvvvvv\/replaceerror(with:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathZipVVVVVV","doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathZipVVVVVV\/Parser-Implementations"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceError","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"output","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/ReplaceError","text":"ReplaceError","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A parser that never fails."}]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"An output to return should the upstream parser fail."}],"type":"paragraph"}],"name":"output"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"inlineContent":[{"text":"Useful for providing a default output for a parser.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example, we could create a parser that parses a plus or minus sign and maps the result to"},{"type":"text","text":" "},{"type":"text","text":"a positive or negative multiplier respectively, or else defaults to a positive multiplier:"}],"type":"paragraph"},{"code":["let sign = OneOf {","  \"+\".map { 1 }","  \"-\".map { -1 }","}",".replaceError(with: 1)"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"Notably this parser is non-throwing:","type":"text"}],"type":"paragraph"},{"code":["var input = \"-123\"[...]","","\/\/ No `try` required:","sign.parse(&input)  \/\/ -1","input               \/\/ \"123\"","","\/\/ Simply returns the default when parsing fails:","sign.parse(&input)  \/\/ 1"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"This means it can be used to turn throwing parsers into non-throwing ones, which is important"},{"type":"text","text":" "},{"type":"text","text":"for building up complex parsers that cannot fail."}],"type":"paragraph"}]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathZipVVVVVV\/replaceError(with:)","interfaceLanguage":"swift"},"sections":[],"metadata":{"extendedModule":"Parsing","role":"symbol","title":"replaceError(with:)","externalID":"s:7Parsing6ParserPAAE12replaceError4withAA7ParsersO07ReplaceD0Vy_xG6OutputQz_tF::SYNTHESIZED::s:10URLRouting13PathZipVVVVVVV","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceError","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"ReplaceError","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"modules":[{"name":"URLRouting"}],"symbolKind":"method"},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"A parser that replaces its error with a provided output.","type":"text"}],"references":{"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathZipVVVVVV":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathZipVVVVVV","kind":"identifier"}],"url":"\/documentation\/urlrouting\/pathzipvvvvvv","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathZipVVVVVV","role":"symbol","navigatorTitle":[{"text":"PathZipVVVVVV","kind":"identifier"}],"title":"PathZipVVVVVV","kind":"symbol","abstract":[],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathZipVVVVVV/Parser-Implementations":{"url":"\/documentation\/urlrouting\/pathzipvvvvvv\/parser-implementations","abstract":[],"role":"collectionGroup","title":"Parser Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathZipVVVVVV\/Parser-Implementations","type":"topic","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parsers":{"navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"title":"Parsers","role":"symbol","url":"\/documentation\/parsing\/parsers","abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parsers/ReplaceError":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"A parser that replaces its error with a provided output."}],"url":"\/documentation\/parsing\/parsers\/replaceerror","title":"Parsers.ReplaceError","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/ReplaceError","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReplaceError","kind":"identifier"}],"navigatorTitle":[{"text":"ReplaceError","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathZipVVVVVV/replaceError(with:)":{"url":"\/documentation\/urlrouting\/pathzipvvvvvv\/replaceerror(with:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceError","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"ReplaceError","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A parser that replaces its error with a provided output."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathZipVVVVVV\/replaceError(with:)","title":"replaceError(with:)"},"doc://co.pointfree.VaporRouting/documentation/URLRouting":{"url":"\/documentation\/urlrouting","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting","role":"collection","title":"URLRouting","kind":"symbol","abstract":[]}}}