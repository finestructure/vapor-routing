{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stopTLS"},{"kind":"text","text":"("},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopPromise","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">?)"}]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"EventLoopPromise"},{"type":"text","text":" that will be completed when the unwrapping has"},{"type":"text","text":" "},{"type":"text","text":"completed."}],"type":"paragraph"}],"name":"promise"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This will send a CLOSE_NOTIFY and wait for the corresponding CLOSE_NOTIFY. When that next","type":"text"},{"text":" ","type":"text"},{"text":"CLOSE_NOTIFY is received, this handler will pass on all pending writes and remove itself","type":"text"},{"text":" ","type":"text"},{"text":"from the channel pipeline. If the shutdown times out then an error will fire down the","type":"text"},{"text":" ","type":"text"},{"text":"pipeline, this handler will remove itself from the pipeline, but the channel will not be","type":"text"},{"text":" ","type":"text"},{"text":"automatically closed.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function "},{"inlineContent":[{"type":"text","text":"is not thread-safe"}],"type":"strong"},{"type":"text","text":": you "},{"inlineContent":[{"type":"text","text":"must"}],"type":"strong"},{"type":"text","text":" call it from the correct event"},{"type":"text","text":" "},{"type":"text","text":"loop thread."}]}]}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/stopTLS(promise:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/niossl\/niosslhandler\/stoptls(promise:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"extendedModule":"NIOSSL","roleHeading":"Instance Method","title":"stopTLS(promise:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"stopTLS","kind":"identifier"},{"text":"(","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">?)","kind":"text"}],"modules":[{"name":"NIOSSL"}],"externalID":"s:6NIOSSL13NIOSSLHandlerC7stopTLS7promisey7NIOCore16EventLoopPromiseVyytGSg_tF","symbolKind":"method","role":"symbol"},"kind":"symbol","abstract":[{"type":"text","text":"Called to instruct this handler to perform an orderly TLS shutdown and then remove itself"},{"type":"text","text":" "},{"type":"text","text":"from the pipeline. This will leave the connection established, but remove the TLS wrapper"},{"type":"text","text":" "},{"type":"text","text":"from it."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOSSL":{"url":"\/documentation\/niossl","title":"NIOSSL","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL","type":"topic","role":"collection","abstract":[],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopPromise":{"role":"symbol","abstract":[{"type":"text","text":"A promise to provide a result later."}],"kind":"symbol","navigatorTitle":[{"text":"EventLoopPromise","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopPromise","kind":"identifier"}],"type":"topic","title":"EventLoopPromise","url":"\/documentation\/niocore\/eventlooppromise","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopPromise"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler","role":"symbol","url":"\/documentation\/niossl\/niosslhandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSSLHandler"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"NIOSSLHandler"}],"title":"NIOSSLHandler","abstract":[{"text":"The base class for all NIOSSL handlers. This class cannot actually be instantiated by","type":"text"},{"type":"text","text":" "},{"type":"text","text":"users directly: instead, users must select which mode they would like their handler to"},{"type":"text","text":" "},{"type":"text","text":"operate in, client or server."}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/stopTLS(promise:)":{"title":"stopTLS(promise:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stopTLS"},{"kind":"text","text":"("},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">?)"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/stopTLS(promise:)","type":"topic","url":"\/documentation\/niossl\/niosslhandler\/stoptls(promise:)","kind":"symbol","abstract":[{"type":"text","text":"Called to instruct this handler to perform an orderly TLS shutdown and then remove itself"},{"type":"text","text":" "},{"type":"text","text":"from the pipeline. This will leave the connection established, but remove the TLS wrapper"},{"type":"text","text":" "},{"type":"text","text":"from it."}],"role":"symbol"}}}