{"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey"]]},"sections":[],"metadata":{"required":true,"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decrypt"},{"kind":"text","text":"("},{"kind":"externalParam","text":"channel"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","text":"Channel"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier","text":"ByteBuffer"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier","text":"ByteBuffer"},{"kind":"text","text":">"}],"modules":[{"name":"NIOSSL"}],"roleHeading":"Instance Method","role":"symbol","title":"decrypt(channel:data:)","externalID":"s:6NIOSSL22NIOSSLCustomPrivateKeyP7decrypt7channel4data7NIOCore15EventLoopFutureCyAG10ByteBufferVGAG7Channel_p_AKtF"},"abstract":[{"type":"text","text":"Called to perform a decryption operation."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decrypt","kind":"identifier"},{"text":"(","kind":"text"},{"text":"channel","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Channel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ByteBuffer","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"ByteBuffer","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that will be fulfilled with a "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" containing the decrypted bytes, if"},{"type":"text","text":" "},{"type":"text","text":"the decryption operation completes, or that will be failed with a relevant "},{"type":"codeVoice","code":"Error"},{"type":"text","text":" if the decrypted bytes"},{"type":"text","text":" "},{"type":"text","text":"could not be produced."}],"type":"paragraph"}]},{"kind":"parameters","parameters":[{"name":"channel","content":[{"inlineContent":[{"text":"The ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" representing the connection for which we are performing the decryption operation.","type":"text"}],"type":"paragraph"}]},{"name":"data","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The data to be decrypted."}]}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The data being passed to the call should be decrypted using "},{"type":"emphasis","inlineContent":[{"text":"raw","type":"text"}]},{"type":"text","text":" RSA public key decryption, without padding."},{"type":"text","text":" "},{"type":"text","text":"This call will always execute on "},{"code":"channel.eventLoop","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"This function should only be implemented for RSA keys, and then only if you support RSA key exchange. If you","type":"text"},{"text":" ","type":"text"},{"text":"are only using TLS 1.3 and later, this function is entirely unnecessary and it will never be called.","type":"text"}]}]}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niossl\/niosslcustomprivatekey\/decrypt(channel:data:)"]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey\/decrypt(channel:data:)","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLCustomPrivateKey/decrypt(channel:data:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey\/decrypt(channel:data:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decrypt"},{"kind":"text","text":"("},{"kind":"externalParam","text":"channel"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","text":"Channel"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier","text":"ByteBuffer"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier","text":"ByteBuffer"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Called to perform a decryption operation."}],"role":"symbol","kind":"symbol","required":true,"title":"decrypt(channel:data:)","url":"\/documentation\/niossl\/niosslcustomprivatekey\/decrypt(channel:data:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"url":"\/documentation\/niocore\/channel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","navigatorTitle":[{"kind":"identifier","text":"Channel"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"title":"Channel"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFuture","kind":"identifier"}],"navigatorTitle":[{"text":"EventLoopFuture","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopfuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"role":"symbol","title":"EventLoopFuture"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLCustomPrivateKey":{"title":"NIOSSLCustomPrivateKey","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSSLCustomPrivateKey"}],"abstract":[{"code":"NIOSSLCustomPrivateKey","type":"codeVoice"},{"text":" defines the interface of a custom, non-BoringSSL private key.","type":"text"}],"url":"\/documentation\/niossl\/niosslcustomprivatekey","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey","type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"NIOSSLCustomPrivateKey"}]},"doc://co.pointfree.VaporRouting/documentation/NIOSSL":{"url":"\/documentation\/niossl","title":"NIOSSL","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL","type":"topic","role":"collection","abstract":[],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","url":"\/documentation\/niocore\/bytebuffer","title":"ByteBuffer"}}}