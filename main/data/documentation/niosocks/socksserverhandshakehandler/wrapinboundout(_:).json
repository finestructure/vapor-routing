{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSOCKS","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSOCKS\/SOCKSServerHandshakeHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSOCKS\/SOCKSServerHandshakeHandler\/ChannelInboundHandler-Implementations"]]},"abstract":[{"text":"Wrap the provided ","type":"text"},{"code":"InboundOut","type":"codeVoice"},{"text":" that will be passed to the next ","type":"text"},{"code":"ChannelInboundHandler","type":"codeVoice"},{"text":" by calling ","type":"text"},{"code":"ChannelHandlerContext.fireChannelRead","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrapInboundOut","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"InboundOut","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NIOAny","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny"}],"languages":["swift"]}]}],"variants":[{"paths":["\/documentation\/niosocks\/socksserverhandshakehandler\/wrapinboundout(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSOCKS\/SOCKSServerHandshakeHandler\/wrapInboundOut(_:)","interfaceLanguage":"swift"},"metadata":{"symbolKind":"method","roleHeading":"Instance Method","title":"wrapInboundOut(_:)","modules":[{"name":"NIOSOCKS"}],"extendedModule":"NIOCore","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrapInboundOut","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"InboundOut","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"}],"role":"symbol","externalID":"s:7NIOCore21ChannelInboundHandlerPAAE04wrapC3OutyAA6NIOAnyV0cF0QzF::SYNTHESIZED::s:8NIOSOCKS27SOCKSServerHandshakeHandlerC"},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOSOCKS/SOCKSServerHandshakeHandler":{"navigatorTitle":[{"kind":"identifier","text":"SOCKSServerHandshakeHandler"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SOCKSServerHandshakeHandler"}],"type":"topic","abstract":[{"text":"Add this handshake handler to the front of your channel, closest to the network.","type":"text"},{"text":" ","type":"text"},{"text":"The handler will receive bytes from the network and run them through a state machine","type":"text"},{"text":" ","type":"text"},{"text":"and parser to enforce SOCKSv5 protocol correctness. Inbound bytes will by parsed into","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ClientMessage"},{"text":" for downstream consumption. Send ","type":"text"},{"type":"codeVoice","code":"ServerMessage"},{"text":" to this","type":"text"},{"text":" ","type":"text"},{"text":"handler.","type":"text"}],"role":"symbol","url":"\/documentation\/niosocks\/socksserverhandshakehandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSOCKS\/SOCKSServerHandshakeHandler","kind":"symbol","title":"SOCKSServerHandshakeHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOSOCKS":{"type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSOCKS","kind":"symbol","title":"NIOSOCKS","url":"\/documentation\/niosocks"},"doc://co.pointfree.VaporRouting/documentation/NIOSOCKS/SOCKSServerHandshakeHandler/ChannelInboundHandler-Implementations":{"url":"\/documentation\/niosocks\/socksserverhandshakehandler\/channelinboundhandler-implementations","title":"ChannelInboundHandler Implementations","abstract":[],"kind":"article","role":"collectionGroup","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSOCKS\/SOCKSServerHandshakeHandler\/ChannelInboundHandler-Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOSOCKS/SOCKSServerHandshakeHandler/wrapInboundOut(_:)":{"abstract":[{"text":"Wrap the provided ","type":"text"},{"code":"InboundOut","type":"codeVoice"},{"text":" that will be passed to the next ","type":"text"},{"code":"ChannelInboundHandler","type":"codeVoice"},{"text":" by calling ","type":"text"},{"code":"ChannelHandlerContext.fireChannelRead","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrapInboundOut"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InboundOut"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"}],"url":"\/documentation\/niosocks\/socksserverhandshakehandler\/wrapinboundout(_:)","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSOCKS\/SOCKSServerHandshakeHandler\/wrapInboundOut(_:)","title":"wrapInboundOut(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOAny":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOAny"}],"type":"topic","url":"\/documentation\/niocore\/nioany","navigatorTitle":[{"kind":"identifier","text":"NIOAny"}],"abstract":[{"code":"NIOAny","type":"codeVoice"},{"type":"text","text":" is an opaque container for values of "},{"inlineContent":[{"text":"any","type":"text"}],"type":"emphasis"},{"type":"text","text":" type, similar to Swiftâ€™s builtin "},{"code":"Any","type":"codeVoice"},{"type":"text","text":" type. Contrary to"},{"type":"text","text":" "},{"type":"codeVoice","code":"Any"},{"type":"text","text":" the overhead of "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":" depends on the the type of the wrapped value. Certain types that are important"},{"type":"text","text":" "},{"type":"text","text":"for the performance of a SwiftNIO application like "},{"code":"ByteBuffer","type":"codeVoice"},{"text":", ","type":"text"},{"code":"FileRegion","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"AddressEnvelope<ByteBuffer>","type":"codeVoice"},{"text":" can be expected","type":"text"},{"text":" ","type":"text"},{"text":"to be wrapped almost without overhead. All others will have similar performance as if they were passed as an ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" as","type":"text"},{"text":" ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":" just like ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" will contain them within an existential container.","type":"text"}],"title":"NIOAny","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny"}}}