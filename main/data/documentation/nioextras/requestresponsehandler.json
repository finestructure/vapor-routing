{"metadata":{"title":"RequestResponseHandler","roleHeading":"Class","role":"symbol","externalID":"s:9NIOExtras22RequestResponseHandlerC","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestResponseHandler","kind":"identifier"}],"modules":[{"name":"NIOExtras"}],"symbolKind":"class","navigatorTitle":[{"text":"RequestResponseHandler","kind":"identifier"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras"]]},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/init(initialBufferCapacity:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/channelInactive(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/channelRead(context:data:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/errorCaught(context:error:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/write(context:data:promise:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/InboundOut","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/OutboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/OutboundOut"],"title":"Type Aliases"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/ChannelOutboundHandler-Implementations"],"title":"Default Implementations"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"abstract":[{"code":"RequestResponseHandler","type":"codeVoice"},{"text":" receives a ","type":"text"},{"code":"Request","type":"codeVoice"},{"text":" alongside an ","type":"text"},{"code":"EventLoopPromise<Response>","type":"codeVoice"},{"text":" from the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"‘s","type":"text"},{"text":" ","type":"text"},{"text":"outbound side. It will fulfill the promise with the ","type":"text"},{"code":"Response","type":"codeVoice"},{"text":" once it’s received from the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"’s inbound","type":"text"},{"text":" ","type":"text"},{"text":"side.","type":"text"}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler"],"type":"conformsTo","kind":"relationships"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestResponseHandler","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Request","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Response","kind":"genericParameter"},{"text":">","kind":"text"}]}],"kind":"declarations"},{"content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"code":"RequestResponseHandler","type":"codeVoice"},{"text":" does support pipelining ","type":"text"},{"code":"Request","type":"codeVoice"},{"text":"s and it will send them pipelined further down the","type":"text"},{"text":" ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":". Should ","type":"text"},{"code":"RequestResponseHandler","type":"codeVoice"},{"text":" receive an error from the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":", it will fail all promises meant for","type":"text"},{"text":" ","type":"text"},{"text":"the outstanding ","type":"text"},{"code":"Reponse","type":"codeVoice"},{"text":"s and close the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":". All requests enqueued after an error occured will be immediately","type":"text"},{"text":" ","type":"text"},{"text":"failed with the first error the channel received.","type":"text"}]},{"type":"paragraph","inlineContent":[{"code":"RequestResponseHandler","type":"codeVoice"},{"text":" requires that the ","type":"text"},{"code":"Response","type":"codeVoice"},{"text":"s arrive on ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" in the same order as the ","type":"text"},{"code":"Request","type":"codeVoice"},{"text":"s","type":"text"},{"text":" ","type":"text"},{"text":"were submitted.","type":"text"}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/nioextras\/requestresponsehandler"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/channelInactive(context:)":{"url":"\/documentation\/nioextras\/requestresponsehandler\/channelinactive(context:)","type":"topic","title":"channelInactive(context:)","role":"symbol","kind":"symbol","abstract":[{"text":"Called when the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" has become inactive and is no longer able to send and receive data`.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/channelInactive(context:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelInactive","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":")","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/errorCaught(context:error:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"errorCaught","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":", ","kind":"text"},{"text":"error","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":")","kind":"text"}],"url":"\/documentation\/nioextras\/requestresponsehandler\/errorcaught(context:error:)","abstract":[{"text":"An error was encountered earlier in the inbound ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/errorCaught(context:error:)","role":"symbol","kind":"symbol","title":"errorCaught(context:error:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelHandler","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","role":"symbol","abstract":[{"text":"You should ","type":"text"},{"inlineContent":[{"text":"never","type":"text"}],"type":"emphasis"},{"text":" implement this protocol directly. Please implement one of its sub-protocols.","type":"text"}],"title":"ChannelHandler","navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"url":"\/documentation\/niocore\/channelhandler"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"navigatorTitle":[{"text":"ChannelOutboundHandler","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ChannelOutboundHandler","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","type":"topic","title":"ChannelOutboundHandler","role":"symbol","kind":"symbol","abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"url":"\/documentation\/niocore\/channeloutboundhandler"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/OutboundOut":{"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/OutboundOut","url":"\/documentation\/nioextras\/requestresponsehandler\/outboundout","title":"RequestResponseHandler.OutboundOut","abstract":[{"text":"The type of the outbound data which will be forwarded to the next ","type":"text"},{"code":"ChannelOutboundHandler","type":"codeVoice"},{"text":" in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"OutboundOut","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundOut","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/channelRead(context:data:)":{"title":"channelRead(context:data:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelRead"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Called when some data has been read from the remote peer."}],"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/nioextras\/requestresponsehandler\/channelread(context:data:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/channelRead(context:data:)"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/ChannelInboundHandler-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/ChannelInboundHandler-Implementations","abstract":[],"type":"topic","title":"ChannelInboundHandler Implementations","kind":"article","url":"\/documentation\/nioextras\/requestresponsehandler\/channelinboundhandler-implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/OutboundIn":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/OutboundIn","role":"symbol","type":"topic","abstract":[{"text":"The type of the outbound data which is wrapped in ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundIn","kind":"identifier"}],"title":"RequestResponseHandler.OutboundIn","navigatorTitle":[{"text":"OutboundIn","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/nioextras\/requestresponsehandler\/outboundin"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler":{"type":"topic","kind":"symbol","abstract":[{"type":"codeVoice","code":"RequestResponseHandler"},{"text":" receives a ","type":"text"},{"type":"codeVoice","code":"Request"},{"text":" alongside an ","type":"text"},{"type":"codeVoice","code":"EventLoopPromise<Response>"},{"type":"text","text":" from the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"‘s"},{"type":"text","text":" "},{"type":"text","text":"outbound side. It will fulfill the promise with the "},{"code":"Response","type":"codeVoice"},{"text":" once it’s received from the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"’s inbound","type":"text"},{"text":" ","type":"text"},{"text":"side.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler","navigatorTitle":[{"text":"RequestResponseHandler","kind":"identifier"}],"title":"RequestResponseHandler","url":"\/documentation\/nioextras\/requestresponsehandler","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestResponseHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/ChannelHandler-Implementations":{"title":"ChannelHandler Implementations","url":"\/documentation\/nioextras\/requestresponsehandler\/channelhandler-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/ChannelHandler-Implementations","type":"topic","role":"collectionGroup","kind":"article","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/ChannelOutboundHandler-Implementations":{"type":"topic","role":"collectionGroup","kind":"article","url":"\/documentation\/nioextras\/requestresponsehandler\/channeloutboundhandler-implementations","abstract":[],"title":"ChannelOutboundHandler Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/ChannelOutboundHandler-Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelInboundHandler","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","role":"symbol","abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"text":" which handles inbound I\/O events for a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}],"title":"ChannelInboundHandler","navigatorTitle":[{"text":"ChannelInboundHandler","kind":"identifier"}],"url":"\/documentation\/niocore\/channelinboundhandler"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/InboundOut":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundOut"}],"role":"symbol","url":"\/documentation\/nioextras\/requestresponsehandler\/inboundout","abstract":[{"type":"text","text":"The type of the inbound data which will be forwarded to the next "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/InboundOut","kind":"symbol","title":"RequestResponseHandler.InboundOut","navigatorTitle":[{"kind":"identifier","text":"InboundOut"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras":{"kind":"symbol","title":"NIOExtras","role":"collection","url":"\/documentation\/nioextras","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/init(initialBufferCapacity:)":{"abstract":[{"type":"text","text":"Create a new "},{"type":"codeVoice","code":"RequestResponseHandler"},{"type":"text","text":"."}],"type":"topic","kind":"symbol","title":"init(initialBufferCapacity:)","url":"\/documentation\/nioextras\/requestresponsehandler\/init(initialbuffercapacity:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/init(initialBufferCapacity:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"initialBufferCapacity"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":")"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/write(context:data:promise:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/write(context:data:promise:)","url":"\/documentation\/nioextras\/requestresponsehandler\/write(context:data:promise:)","abstract":[{"text":"Called to request a write operation. The write operation will write the messages through the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":". Those are then ready to be flushed to the actual "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" when"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel.flush"},{"type":"text","text":" or "},{"type":"codeVoice","code":"ChannelHandlerContext.flush"},{"type":"text","text":" is called."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"title":"write(context:data:promise:)","type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/InboundIn":{"type":"topic","title":"RequestResponseHandler.InboundIn","abstract":[{"text":"The type of the inbound data which is wrapped in ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundIn","kind":"identifier"}],"url":"\/documentation\/nioextras\/requestresponsehandler\/inboundin","kind":"symbol","navigatorTitle":[{"text":"InboundIn","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/InboundIn"}}}