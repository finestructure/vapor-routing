{"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LengthFieldBasedFrameDecoder\/InboundIn","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LengthFieldBasedFrameDecoder"]]},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"InboundIn"}],"externalID":"s:9NIOExtras28LengthFieldBasedFrameDecoderC9InboundIna","role":"symbol","modules":[{"name":"NIOExtras"}],"symbolKind":"typealias","title":"LengthFieldBasedFrameDecoder.InboundIn","roleHeading":"Type Alias","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundIn"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/nioextras\/lengthfieldbasedframedecoder\/inboundin"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundIn","kind":"identifier"},{"text":" = ","kind":"text"},{"text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"}],"platforms":["Linux"]}],"kind":"declarations"}],"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","url":"\/documentation\/niocore\/bytebuffer","title":"ByteBuffer"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras":{"kind":"symbol","title":"NIOExtras","role":"collection","url":"\/documentation\/nioextras","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/LengthFieldBasedFrameDecoder/InboundIn":{"kind":"symbol","navigatorTitle":[{"text":"InboundIn","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LengthFieldBasedFrameDecoder\/InboundIn","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"InboundIn","kind":"identifier"}],"abstract":[],"type":"topic","role":"symbol","title":"LengthFieldBasedFrameDecoder.InboundIn","url":"\/documentation\/nioextras\/lengthfieldbasedframedecoder\/inboundin"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/LengthFieldBasedFrameDecoder":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LengthFieldBasedFrameDecoder","url":"\/documentation\/nioextras\/lengthfieldbasedframedecoder","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LengthFieldBasedFrameDecoder","kind":"identifier"}],"title":"LengthFieldBasedFrameDecoder","kind":"symbol","abstract":[{"text":"A decoder that splits the received ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" by the number of bytes specified in a fixed length header","type":"text"},{"text":" ","type":"text"},{"text":"contained within the buffer.","type":"text"},{"text":" ","type":"text"},{"text":"For example, if you received the following four fragmented packets:","type":"text"},{"text":" ","type":"text"},{"text":"+—+––+——+––+","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"| A | BC | DEFG | HI |"},{"type":"text","text":" "},{"type":"text","text":"+—+––+——+––+"}],"navigatorTitle":[{"text":"LengthFieldBasedFrameDecoder","kind":"identifier"}],"role":"symbol"}}}