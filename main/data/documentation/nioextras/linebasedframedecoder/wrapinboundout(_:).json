{"metadata":{"externalID":"s:7NIOCore20ByteToMessageDecoderPAAE14wrapInboundOutyAA6NIOAnyV0gH0QzF::SYNTHESIZED::s:9NIOExtras21LineBasedFrameDecoderC","role":"symbol","modules":[{"name":"NIOExtras"}],"extendedModule":"NIOCore","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrapInboundOut"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InboundOut"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"}],"title":"wrapInboundOut(_:)","roleHeading":"Instance Method"},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"ByteToMessageDecoder.wrapInboundOut(_:)"},{"type":"text","text":"."}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LineBasedFrameDecoder\/wrapInboundOut(_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LineBasedFrameDecoder","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LineBasedFrameDecoder\/ByteToMessageDecoder-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrapInboundOut","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"InboundOut","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny","kind":"typeIdentifier"}],"languages":["swift"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioextras\/linebasedframedecoder\/wrapinboundout(_:)"]}],"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOExtras/LineBasedFrameDecoder/ByteToMessageDecoder-Implementations":{"abstract":[],"kind":"article","url":"\/documentation\/nioextras\/linebasedframedecoder\/bytetomessagedecoder-implementations","type":"topic","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LineBasedFrameDecoder\/ByteToMessageDecoder-Implementations","title":"ByteToMessageDecoder Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras":{"kind":"symbol","title":"NIOExtras","role":"collection","url":"\/documentation\/nioextras","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/LineBasedFrameDecoder/wrapInboundOut(_:)":{"abstract":[],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrapInboundOut"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InboundOut"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier","text":"NIOAny"}],"title":"wrapInboundOut(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LineBasedFrameDecoder\/wrapInboundOut(_:)","kind":"symbol","url":"\/documentation\/nioextras\/linebasedframedecoder\/wrapinboundout(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/LineBasedFrameDecoder":{"abstract":[{"type":"text","text":"A decoder that splits incoming "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":"s around line end"},{"type":"text","text":" "},{"type":"text","text":"character(s) ("},{"type":"codeVoice","code":"'\\n'"},{"type":"text","text":" or "},{"type":"codeVoice","code":"'\\r\\n'"},{"type":"text","text":")."}],"kind":"symbol","url":"\/documentation\/nioextras\/linebasedframedecoder","navigatorTitle":[{"text":"LineBasedFrameDecoder","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LineBasedFrameDecoder","title":"LineBasedFrameDecoder","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LineBasedFrameDecoder","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOAny":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOAny"}],"type":"topic","url":"\/documentation\/niocore\/nioany","navigatorTitle":[{"kind":"identifier","text":"NIOAny"}],"abstract":[{"code":"NIOAny","type":"codeVoice"},{"type":"text","text":" is an opaque container for values of "},{"inlineContent":[{"text":"any","type":"text"}],"type":"emphasis"},{"type":"text","text":" type, similar to Swiftâ€™s builtin "},{"code":"Any","type":"codeVoice"},{"type":"text","text":" type. Contrary to"},{"type":"text","text":" "},{"type":"codeVoice","code":"Any"},{"type":"text","text":" the overhead of "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":" depends on the the type of the wrapped value. Certain types that are important"},{"type":"text","text":" "},{"type":"text","text":"for the performance of a SwiftNIO application like "},{"code":"ByteBuffer","type":"codeVoice"},{"text":", ","type":"text"},{"code":"FileRegion","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"AddressEnvelope<ByteBuffer>","type":"codeVoice"},{"text":" can be expected","type":"text"},{"text":" ","type":"text"},{"text":"to be wrapped almost without overhead. All others will have similar performance as if they were passed as an ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" as","type":"text"},{"text":" ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":" just like ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" will contain them within an existential container.","type":"text"}],"title":"NIOAny","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny"}}}