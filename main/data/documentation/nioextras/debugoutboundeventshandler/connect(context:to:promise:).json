{"abstract":[{"text":"Called to request that the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" connect to a given ","type":"text"},{"code":"SocketAddress","type":"codeVoice"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioextras\/debugoutboundeventshandler\/connect(context:to:promise:)"]}],"metadata":{"externalID":"s:9NIOExtras26DebugOutboundEventsHandlerC7connect7context2to7promisey7NIOCore07ChannelE7ContextC_AH13SocketAddressOAH16EventLoopPromiseVyytGSgtF","modules":[{"name":"NIOExtras"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore13SocketAddressO","kind":"typeIdentifier","text":"SocketAddress"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"roleHeading":"Instance Method","role":"symbol","title":"connect(context:to:promise:)","symbolKind":"method"},"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/connect(context:to:promise:)","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"to"},{"kind":"text","text":" "},{"kind":"internalParam","text":"address"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SocketAddress","preciseIdentifier":"s:7NIOCore13SocketAddressO","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketAddress"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopPromise"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}]}]},{"kind":"parameters","parameters":[{"name":"context","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"ChannelHandlerContext","type":"codeVoice"},{"text":" which this ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" belongs to.","type":"text"}]}]},{"name":"to","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"SocketAddress","type":"codeVoice"},{"text":" to which the the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" should connect.","type":"text"}]}]},{"name":"promise","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"EventLoopPromise","type":"codeVoice"},{"text":" which should be notified once the operation completes, or nil if no notification should take place.","type":"text"}]}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"This should call ","type":"text"},{"code":"context.connect","type":"codeVoice"},{"text":" to forward the operation to the next ","type":"text"},{"code":"_ChannelOutboundHandler","type":"codeVoice"},{"text":" in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" or","type":"text"},{"text":" ","type":"text"},{"text":"complete the ","type":"text"},{"code":"EventLoopPromise","type":"codeVoice"},{"text":" to let the caller know that the operation completed.","type":"text"}],"type":"paragraph"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopPromise":{"role":"symbol","abstract":[{"type":"text","text":"A promise to provide a result later."}],"kind":"symbol","navigatorTitle":[{"text":"EventLoopPromise","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopPromise","kind":"identifier"}],"type":"topic","title":"EventLoopPromise","url":"\/documentation\/niocore\/eventlooppromise","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopPromise"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandlerContext":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","role":"symbol","url":"\/documentation\/niocore\/channelhandlercontext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandlerContext"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelHandlerContext"}],"title":"ChannelHandlerContext","abstract":[{"text":"Every ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" has – when added to a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" – a corresponding "},{"type":"codeVoice","code":"ChannelHandlerContext"},{"type":"text","text":" which is"},{"type":"text","text":" "},{"type":"text","text":"the way "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s can interact with other "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s in the pipeline."}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketAddress":{"navigatorTitle":[{"text":"SocketAddress","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SocketAddress","kind":"identifier"}],"title":"SocketAddress","role":"symbol","url":"\/documentation\/niocore\/socketaddress","abstract":[{"text":"Represent a socket address to which we may want to connect or bind.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketAddress"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras":{"kind":"symbol","title":"NIOExtras","role":"collection","url":"\/documentation\/nioextras","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugOutboundEventsHandler/connect(context:to:promise:)":{"abstract":[{"type":"text","text":"Called to request that the "},{"code":"Channel","type":"codeVoice"},{"text":" connect to a given ","type":"text"},{"code":"SocketAddress","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SocketAddress","preciseIdentifier":"s:7NIOCore13SocketAddressO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/connect(context:to:promise:)","url":"\/documentation\/nioextras\/debugoutboundeventshandler\/connect(context:to:promise:)","kind":"symbol","title":"connect(context:to:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugOutboundEventsHandler":{"navigatorTitle":[{"text":"DebugOutboundEventsHandler","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DebugOutboundEventsHandler","kind":"identifier"}],"title":"DebugOutboundEventsHandler","role":"symbol","url":"\/documentation\/nioextras\/debugoutboundeventshandler","abstract":[{"text":"ChannelOutboundHandler that prints all outbound events that pass through the pipeline by default,","type":"text"},{"text":" ","type":"text"},{"text":"overridable by providing your own closure for custom logging. See DebugInboundEventsHandler for inbound events.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler"}}}