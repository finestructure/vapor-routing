{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioextras\/fixedlengthframedecoder\/decode(context:buffer:)"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/FixedLengthFrameDecoder"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/FixedLengthFrameDecoder\/decode(context:buffer:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"buffer"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"DecodingState","preciseIdentifier":"s:7NIOCore13DecodingStateO","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/DecodingState"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"DecodingState.continue"},{"text":" if we should continue calling this method or ","type":"text"},{"type":"codeVoice","code":"DecodingState.needMoreData"},{"text":" if it should be called","type":"text"},{"text":" ","type":"text"},{"text":"again once more data is present in the ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":".","type":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"ChannelHandlerContext","type":"codeVoice"},{"text":" which this ","type":"text"},{"code":"ByteToMessageDecoder","type":"codeVoice"},{"text":" belongs to.","type":"text"}]}],"name":"context"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" from which we decode."}]}],"name":"buffer"}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"This method will be called in a loop until either the input "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" has nothing to read left or"},{"type":"text","text":" "},{"type":"codeVoice","code":"DecodingState.needMoreData"},{"type":"text","text":" is returned. If "},{"type":"codeVoice","code":"DecodingState.continue"},{"type":"text","text":" is returned and the "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" "},{"type":"text","text":"contains more readable bytes, this method will immediately be invoked again, unless "},{"type":"codeVoice","code":"decodeLast"},{"type":"text","text":" needs"},{"type":"text","text":" "},{"type":"text","text":"to be invoked instead."}],"type":"paragraph"}]}],"abstract":[{"type":"text","text":"Decode from a "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":"."}],"kind":"symbol","sections":[],"metadata":{"role":"symbol","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decode","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"buffer"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"DecodingState","preciseIdentifier":"s:7NIOCore13DecodingStateO"}],"externalID":"s:9NIOExtras23FixedLengthFrameDecoderC6decode7context6buffer7NIOCore13DecodingStateOAG21ChannelHandlerContextC_AG10ByteBufferVztKF","title":"decode(context:buffer:)","modules":[{"name":"NIOExtras"}]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","url":"\/documentation\/niocore\/bytebuffer","title":"ByteBuffer"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/DecodingState":{"role":"symbol","navigatorTitle":[{"text":"DecodingState","kind":"identifier"}],"url":"\/documentation\/niocore\/decodingstate","title":"DecodingState","abstract":[{"type":"text","text":"State of the current decoding process."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"DecodingState","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/DecodingState","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/FixedLengthFrameDecoder/decode(context:buffer:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/FixedLengthFrameDecoder\/decode(context:buffer:)","abstract":[{"text":"Decode from a ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":"."}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"buffer"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"DecodingState","preciseIdentifier":"s:7NIOCore13DecodingStateO"}],"url":"\/documentation\/nioextras\/fixedlengthframedecoder\/decode(context:buffer:)","title":"decode(context:buffer:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras":{"kind":"symbol","title":"NIOExtras","role":"collection","url":"\/documentation\/nioextras","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandlerContext":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","role":"symbol","url":"\/documentation\/niocore\/channelhandlercontext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandlerContext"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelHandlerContext"}],"title":"ChannelHandlerContext","abstract":[{"text":"Every ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" has – when added to a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" – a corresponding "},{"type":"codeVoice","code":"ChannelHandlerContext"},{"type":"text","text":" which is"},{"type":"text","text":" "},{"type":"text","text":"the way "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s can interact with other "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s in the pipeline."}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/FixedLengthFrameDecoder":{"kind":"symbol","url":"\/documentation\/nioextras\/fixedlengthframedecoder","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FixedLengthFrameDecoder"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FixedLengthFrameDecoder"}],"abstract":[{"text":"A decoder that splits the received ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" by a fixed number","type":"text"},{"text":" ","type":"text"},{"text":"of bytes. For example, if you received the following four fragmented packets:","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/FixedLengthFrameDecoder","title":"FixedLengthFrameDecoder"}}}