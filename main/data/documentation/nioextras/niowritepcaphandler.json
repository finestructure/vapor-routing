{"topicSections":[{"title":"Classes","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/SynchronizedFileSink"]},{"title":"Structures","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/Settings"]},{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/init(mode:fakeLocalAddress:fakeRemoteAddress:fileSink:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/init(mode:fakeLocalAddress:fakeRemoteAddress:settings:fileSink:)"]},{"title":"Type Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/pcapFileHeader"]},{"title":"Enumerations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/Mode"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/ChannelOutboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/RemovableChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/_ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/_ChannelOutboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/_EmittingChannelHandler-Implementations"],"generated":true}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioextras\/niowritepcaphandler"]}],"abstract":[{"type":"text","text":"A "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" that can write a "},{"isActive":true,"type":"reference","identifier":"https:\/\/en.wikipedia.org\/wiki\/Pcap"},{"type":"text","text":" containing the send\/received"},{"type":"text","text":" "},{"type":"text","text":"data as synthesized TCP packet captures."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOWritePCAPHandler"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You will be able to open the "},{"type":"codeVoice","code":".pcap"},{"type":"text","text":" file in for example "},{"identifier":"https:\/\/www.wireshark.org","type":"reference","isActive":true},{"type":"text","text":" or"},{"type":"text","text":" "},{"identifier":"http:\/\/www.tcpdump.org","type":"reference","isActive":true},{"type":"text","text":". Using "},{"type":"codeVoice","code":"NIOWritePCAPHandler"},{"type":"text","text":" to write your "},{"type":"codeVoice","code":".pcap"},{"type":"text","text":" files can be useful for"},{"type":"text","text":" "},{"type":"text","text":"example when your real network traffic is TLS protected (so "},{"type":"codeVoice","code":"tcpdump"},{"type":"text","text":"\/Wireshark can’t read it directly), or if you"},{"type":"text","text":" "},{"type":"text","text":"don’t have enough privileges on the running host to dump the network traffic."}]},{"type":"paragraph","inlineContent":[{"code":"NIOWritePCAPHandler","type":"codeVoice"},{"text":" will also work with Unix Domain Sockets in which case it will still synthesize a TCP packet","type":"text"},{"text":" ","type":"text"},{"text":"capture with local address ","type":"text"},{"code":"111.111.111.111","type":"codeVoice"},{"text":" (port ","type":"text"},{"code":"1111","type":"codeVoice"},{"text":") and remote address ","type":"text"},{"code":"222.222.222.222","type":"codeVoice"},{"text":" (port ","type":"text"},{"code":"2222","type":"codeVoice"},{"text":").","type":"text"}]}]}],"metadata":{"roleHeading":"Class","modules":[{"name":"NIOExtras"}],"navigatorTitle":[{"kind":"identifier","text":"NIOWritePCAPHandler"}],"role":"symbol","title":"NIOWritePCAPHandler","externalID":"s:9NIOExtras19NIOWritePCAPHandlerC","symbolKind":"class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOWritePCAPHandler"}]},"relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler"]}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelInboundHandler","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","role":"symbol","abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"text":" which handles inbound I\/O events for a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}],"title":"ChannelInboundHandler","navigatorTitle":[{"text":"ChannelInboundHandler","kind":"identifier"}],"url":"\/documentation\/niocore\/channelinboundhandler"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/RemovableChannelHandler-Implementations":{"type":"topic","abstract":[],"title":"RemovableChannelHandler Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/RemovableChannelHandler-Implementations","url":"\/documentation\/nioextras\/niowritepcaphandler\/removablechannelhandler-implementations","role":"collectionGroup","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"navigatorTitle":[{"text":"ChannelOutboundHandler","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ChannelOutboundHandler","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","type":"topic","title":"ChannelOutboundHandler","role":"symbol","kind":"symbol","abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"url":"\/documentation\/niocore\/channeloutboundhandler"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/ChannelOutboundHandler-Implementations":{"type":"topic","role":"collectionGroup","url":"\/documentation\/nioextras\/niowritepcaphandler\/channeloutboundhandler-implementations","title":"ChannelOutboundHandler Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/ChannelOutboundHandler-Implementations","abstract":[],"kind":"article"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/Settings":{"type":"topic","url":"\/documentation\/nioextras\/niowritepcaphandler\/settings","title":"NIOWritePCAPHandler.Settings","abstract":[{"text":"Settings for ","type":"text"},{"type":"codeVoice","code":"NIOWritePCAPHandler"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Settings","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/Settings","navigatorTitle":[{"text":"Settings","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/_ChannelInboundHandler-Implementations":{"abstract":[],"url":"\/documentation\/nioextras\/niowritepcaphandler\/_channelinboundhandler-implementations","role":"collectionGroup","title":"_ChannelInboundHandler Implementations","kind":"article","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/_ChannelInboundHandler-Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/RemovableChannelHandler":{"title":"RemovableChannelHandler","navigatorTitle":[{"kind":"identifier","text":"RemovableChannelHandler"}],"role":"symbol","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" that can be dynamically removed from a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" whilst"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is operating normally."},{"type":"text","text":" "},{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is required to remove itself from the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" (using"},{"type":"text","text":" "},{"code":"ChannelHandlerContext.removeHandler","type":"codeVoice"},{"type":"text","text":") as soon as possible."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemovableChannelHandler"}],"url":"\/documentation\/niocore\/removablechannelhandler"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/_ChannelOutboundHandler-Implementations":{"url":"\/documentation\/nioextras\/niowritepcaphandler\/_channeloutboundhandler-implementations","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/_ChannelOutboundHandler-Implementations","type":"topic","kind":"article","abstract":[],"title":"_ChannelOutboundHandler Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/Mode":{"abstract":[],"role":"symbol","url":"\/documentation\/nioextras\/niowritepcaphandler\/mode","title":"NIOWritePCAPHandler.Mode","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Mode","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"Mode","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/Mode"},"https://en.wikipedia.org/wiki/Pcap":{"type":"link","titleInlineContent":[{"code":".pcap","type":"codeVoice"},{"type":"text","text":" file"}],"url":"https:\/\/en.wikipedia.org\/wiki\/Pcap","title":".pcap file","identifier":"https:\/\/en.wikipedia.org\/wiki\/Pcap"},"https://www.wireshark.org":{"type":"link","titleInlineContent":[{"type":"text","text":"Wireshark"}],"url":"https:\/\/www.wireshark.org","title":"Wireshark","identifier":"https:\/\/www.wireshark.org"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelHandler","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","role":"symbol","abstract":[{"text":"You should ","type":"text"},{"inlineContent":[{"text":"never","type":"text"}],"type":"emphasis"},{"text":" implement this protocol directly. Please implement one of its sub-protocols.","type":"text"}],"title":"ChannelHandler","navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"url":"\/documentation\/niocore\/channelhandler"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/ChannelHandler-Implementations":{"kind":"article","title":"ChannelHandler Implementations","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/ChannelHandler-Implementations","role":"collectionGroup","url":"\/documentation\/nioextras\/niowritepcaphandler\/channelhandler-implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/_EmittingChannelHandler-Implementations":{"url":"\/documentation\/nioextras\/niowritepcaphandler\/_emittingchannelhandler-implementations","kind":"article","role":"collectionGroup","type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/_EmittingChannelHandler-Implementations","title":"_EmittingChannelHandler Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/init(mode:fakeLocalAddress:fakeRemoteAddress:settings:fileSink:)":{"type":"topic","url":"\/documentation\/nioextras\/niowritepcaphandler\/init(mode:fakelocaladdress:fakeremoteaddress:settings:filesink:)","title":"init(mode:fakeLocalAddress:fakeRemoteAddress:settings:fileSink:)","abstract":[{"text":"Initialize a ","type":"text"},{"type":"codeVoice","code":"NIOWritePCAPHandler"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"mode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOWritePCAPHandler","preciseIdentifier":"s:9NIOExtras19NIOWritePCAPHandlerC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Mode","preciseIdentifier":"s:9NIOExtras19NIOWritePCAPHandlerC4ModeO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fakeLocalAddress","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SocketAddress","preciseIdentifier":"s:7NIOCore13SocketAddressO","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"fakeRemoteAddress","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SocketAddress","preciseIdentifier":"s:7NIOCore13SocketAddressO","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"settings","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOWritePCAPHandler","preciseIdentifier":"s:9NIOExtras19NIOWritePCAPHandlerC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Settings","preciseIdentifier":"s:9NIOExtras19NIOWritePCAPHandlerC8SettingsV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fileSink","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/init(mode:fakeLocalAddress:fakeRemoteAddress:settings:fileSink:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras":{"kind":"symbol","title":"NIOExtras","role":"collection","url":"\/documentation\/nioextras","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/init(mode:fakeLocalAddress:fakeRemoteAddress:fileSink:)":{"abstract":[{"type":"text","text":"Initialize a "},{"type":"codeVoice","code":"NIOWritePCAPHandler"},{"type":"text","text":" with default settings."}],"role":"symbol","url":"\/documentation\/nioextras\/niowritepcaphandler\/init(mode:fakelocaladdress:fakeremoteaddress:filesink:)","title":"init(mode:fakeLocalAddress:fakeRemoteAddress:fileSink:)","kind":"symbol","fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"mode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOWritePCAPHandler","kind":"typeIdentifier","preciseIdentifier":"s:9NIOExtras19NIOWritePCAPHandlerC"},{"text":".","kind":"text"},{"text":"Mode","kind":"typeIdentifier","preciseIdentifier":"s:9NIOExtras19NIOWritePCAPHandlerC4ModeO"},{"text":", ","kind":"text"},{"text":"fakeLocalAddress","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SocketAddress","preciseIdentifier":"s:7NIOCore13SocketAddressO","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"fakeRemoteAddress","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SocketAddress","preciseIdentifier":"s:7NIOCore13SocketAddressO","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"fileSink","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/init(mode:fakeLocalAddress:fakeRemoteAddress:fileSink:)"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler":{"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" that can write a "},{"type":"reference","identifier":"https:\/\/en.wikipedia.org\/wiki\/Pcap","isActive":true},{"type":"text","text":" containing the send\/received"},{"type":"text","text":" "},{"type":"text","text":"data as synthesized TCP packet captures."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOWritePCAPHandler"}],"navigatorTitle":[{"kind":"identifier","text":"NIOWritePCAPHandler"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler","url":"\/documentation\/nioextras\/niowritepcaphandler","title":"NIOWritePCAPHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/ChannelInboundHandler-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/ChannelInboundHandler-Implementations","title":"ChannelInboundHandler Implementations","abstract":[],"url":"\/documentation\/nioextras\/niowritepcaphandler\/channelinboundhandler-implementations","role":"collectionGroup","kind":"article","type":"topic"},"http://www.tcpdump.org":{"type":"link","titleInlineContent":[{"code":"tcpdump","type":"codeVoice"}],"url":"http:\/\/www.tcpdump.org","title":"tcpdump","identifier":"http:\/\/www.tcpdump.org"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/SynchronizedFileSink":{"abstract":[{"type":"text","text":"A synchronised file sink that uses a "},{"type":"codeVoice","code":"DispatchQueue"},{"type":"text","text":" to do all the necessary write synchronously."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SynchronizedFileSink"}],"navigatorTitle":[{"kind":"identifier","text":"SynchronizedFileSink"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/SynchronizedFileSink","url":"\/documentation\/nioextras\/niowritepcaphandler\/synchronizedfilesink","title":"NIOWritePCAPHandler.SynchronizedFileSink"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/pcapFileHeader":{"type":"topic","kind":"symbol","title":"pcapFileHeader","abstract":[],"url":"\/documentation\/nioextras\/niowritepcaphandler\/pcapfileheader","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/pcapFileHeader","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"pcapFileHeader"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV"}],"role":"symbol"}}}