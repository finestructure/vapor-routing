{"metadata":{"symbolKind":"method","role":"symbol","externalID":"s:5Vapor12BCryptDigestC6verify_7createdSbSS_SStKF","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"verify"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"created"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"modules":[{"name":"Vapor"}],"title":"verify(_:created:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/BCryptDigest\/verify(_:created:)"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor","doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/BCryptDigest"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"verify","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"plaintext","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"created","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"hash","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]}]},{"content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"inlineContent":[{"text":"","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if the hash was created from the supplied plaintext data.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Plaintext data to digest and verify.","type":"text"}]}],"name":"plaintext"},{"content":[{"inlineContent":[{"type":"text","text":"Existing BCrypt hash to parse version, salt, and existing digest from."}],"type":"paragraph"}],"name":"hash"}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"codeListing","code":["let hash = try BCrypt.hash(\"vapor\", cost: 4)","try BCrypt.verify(\"vapor\", created: hash) \/\/ true","try BCrypt.verify(\"foo\", created: hash) \/\/ false"],"syntax":null},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"CryptoError"},{"text":" if hashing fails or if data conversion fails.","type":"text"}]}],"type":"aside","style":"note","name":"Throws"}],"kind":"content"}],"abstract":[{"text":"Verifies an existing BCrypt hash matches the supplied plaintext value. Verification works by parsing the salt and version from","type":"text"},{"text":" ","type":"text"},{"text":"the existing digest and using that information to hash the plaintext data. If hash digests match, this method returns ","type":"text"},{"type":"codeVoice","code":"true"},{"text":".","type":"text"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vapor\/bcryptdigest\/verify(_:created:)"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Vapor/BCryptDigest":{"url":"\/documentation\/vapor\/bcryptdigest","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/BCryptDigest","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BCryptDigest","kind":"identifier"}],"type":"topic","title":"BCryptDigest","abstract":[{"type":"text","text":"Creates and verifies BCrypt hashes. Normally you will not need to initialize one of these classes and you will"},{"type":"text","text":" "},{"type":"text","text":"use the global "},{"type":"codeVoice","code":"BCrypt"},{"type":"text","text":" convenience instead."}],"navigatorTitle":[{"text":"BCryptDigest","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Vapor":{"type":"topic","url":"\/documentation\/vapor","kind":"symbol","title":"Vapor","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor"},"doc://co.pointfree.VaporRouting/documentation/Vapor/BCryptDigest/verify(_:created:)":{"url":"\/documentation\/vapor\/bcryptdigest\/verify(_:created:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/BCryptDigest\/verify(_:created:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"verify","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"created","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","title":"verify(_:created:)","abstract":[{"type":"text","text":"Verifies an existing BCrypt hash matches the supplied plaintext value. Verification works by parsing the salt and version from"},{"type":"text","text":" "},{"type":"text","text":"the existing digest and using that information to hash the plaintext data. If hash digests match, this method returns "},{"type":"codeVoice","code":"true"},{"text":".","type":"text"}]}}}