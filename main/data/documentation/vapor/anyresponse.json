{"metadata":{"modules":[{"name":"Vapor"}],"externalID":"s:5Vapor11AnyResponseV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyResponse"}],"navigatorTitle":[{"kind":"identifier","text":"AnyResponse"}],"title":"AnyResponse","roleHeading":"Structure","symbolKind":"struct","role":"symbol"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vapor\/anyresponse"]}],"abstract":[{"text":"A type erased response useful for routes that can return more than one type.","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyResponse","interfaceLanguage":"swift"},"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/ResponseEncodable"],"kind":"relationships","type":"conformsTo"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyResponse","kind":"identifier"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"type":"codeListing","syntax":null,"code":["router.get(\"foo\") { req -> AnyResponse in","    if \/* something *\/ {","        return AnyResponse(42)","    } else {","        return AnyResponse(\"string\")","    }","}"]},{"inlineContent":[{"text":"This can also be done using a ","type":"text"},{"code":"ResponseEncodable","type":"codeVoice"},{"text":" enum.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["enum IntOrString: ResponseEncodable {","    case int(Int)","    case string(String)","","    func encode(for req: Request) throws -> EventLoopFuture<Response> {","        switch self {","        case .int(let i): return try i.encode(for: req)","        case .string(let s): return try s.encode(for: req)","        }","    }","}","","router.get(\"foo\") { req -> IntOrString in","    if \/* something *\/ {","        return .int(42)","    } else {","        return .string(\"string\")","    }","}"]}]}],"sections":[],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyResponse\/init(_:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyResponse\/encodeResponse(for:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyResponse\/ResponseEncodable-Implementations"],"generated":true}],"references":{"doc://co.pointfree.VaporRouting/documentation/Vapor/AnyResponse/ResponseEncodable-Implementations":{"type":"topic","abstract":[],"title":"ResponseEncodable Implementations","kind":"article","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyResponse\/ResponseEncodable-Implementations","url":"\/documentation\/vapor\/anyresponse\/responseencodable-implementations"},"doc://co.pointfree.VaporRouting/documentation/Vapor/AnyResponse":{"type":"topic","abstract":[{"text":"A type erased response useful for routes that can return more than one type.","type":"text"}],"title":"AnyResponse","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyResponse"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyResponse"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyResponse","url":"\/documentation\/vapor\/anyresponse"},"doc://co.pointfree.VaporRouting/documentation/Vapor/AnyResponse/encodeResponse(for:)":{"type":"topic","abstract":[{"text":"Encodes an instance of ","type":"text"},{"code":"Self","type":"codeVoice"},{"type":"text","text":" to a "},{"code":"Response","type":"codeVoice"},{"type":"text","text":"."}],"title":"encodeResponse(for:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encodeResponse"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5Vapor7RequestC","kind":"typeIdentifier","text":"Request"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:5Vapor8ResponseC","kind":"typeIdentifier","text":"Response"},{"kind":"text","text":">"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyResponse\/encodeResponse(for:)","url":"\/documentation\/vapor\/anyresponse\/encoderesponse(for:)"},"doc://co.pointfree.VaporRouting/documentation/Vapor/AnyResponse/init(_:)":{"type":"topic","abstract":[{"text":"Creates a new ","type":"text"},{"code":"AnyResponse","type":"codeVoice"},{"type":"text","text":"."}],"title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"preciseIdentifier":"s:5Vapor17ResponseEncodableP","kind":"typeIdentifier","text":"ResponseEncodable"},{"kind":"text","text":")"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyResponse\/init(_:)","url":"\/documentation\/vapor\/anyresponse\/init(_:)"},"doc://co.pointfree.VaporRouting/documentation/Vapor/ResponseEncodable":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseEncodable","kind":"identifier"}],"navigatorTitle":[{"text":"ResponseEncodable","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/vapor\/responseencodable","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/ResponseEncodable","abstract":[{"text":"Can convert ","type":"text"},{"code":"self","type":"codeVoice"},{"text":" to a ","type":"text"},{"code":"Response","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","title":"ResponseEncodable"},"doc://co.pointfree.VaporRouting/documentation/Vapor":{"type":"topic","url":"\/documentation\/vapor","kind":"symbol","title":"Vapor","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor"}}}