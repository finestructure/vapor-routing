{"abstract":[{"type":"text","text":"This middleware ensures that an "},{"code":"Authenticatable","type":"codeVoice"},{"type":"text","text":" type "},{"code":"A","type":"codeVoice"},{"type":"text","text":" has been authenticated"},{"type":"text","text":" "},{"type":"text","text":"by a previous "},{"code":"Middleware","type":"codeVoice"},{"type":"text","text":" or throws an "},{"code":"Error","type":"codeVoice"},{"type":"text","text":". The middlewares that actually perform"},{"type":"text","text":" "},{"type":"text","text":"authentication will "},{"type":"emphasis","inlineContent":[{"type":"text","text":"not"}]},{"type":"text","text":" throw errors if they fail to authenticate the user (except in"},{"type":"text","text":" "},{"type":"text","text":"some exceptional cases like malformed data). This allows the middlewares to be composed"},{"type":"text","text":" "},{"type":"text","text":"together to create chains of authentication for multiple user types."}],"sections":[],"metadata":{"extendedModule":"Vapor","roleHeading":"Type Method","title":"guardMiddleware(throwing:)","externalID":"s:5Vapor15AuthenticatablePAAE15guardMiddleware8throwingAA0D0_ps5Error_p_tFZ","symbolKind":"method","role":"symbol","modules":[{"name":"Vapor"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"guardMiddleware","kind":"identifier"},{"text":"(","kind":"text"},{"text":"throwing","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:5Vapor10MiddlewareP","text":"Middleware","kind":"typeIdentifier"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor","doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Authenticatable"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"guardMiddleware"},{"kind":"text","text":"("},{"kind":"externalParam","text":"throwing"},{"kind":"text","text":" "},{"kind":"internalParam","text":"error"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":" = Abort(.unauthorized, reason: \"\\(Self.self) not authenticated.\")) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Vapor10MiddlewareP","text":"Middleware","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Middleware"}]}],"kind":"declarations"},{"parameters":[{"name":"throwing","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"Error"},{"type":"text","text":" to throw if the type is not authed."}]}]}],"kind":"parameters"},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Use this middleware to protect routes that might not otherwise attempt to access the","type":"text"},{"text":" ","type":"text"},{"text":"authenticated user (which always requires prior authentication).","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"codeVoice","code":"Authenticatable.guardMiddleware(...)"},{"type":"text","text":" to create an instance."}]},{"type":"paragraph","inlineContent":[{"text":"Use this middleware in conjunction with other middleware such as ","type":"text"},{"type":"codeVoice","code":"BearerAuthenticator"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"type":"codeVoice","code":"BasicAuthenticator"},{"text":" to do the actual authentication.","type":"text"}]}],"kind":"content"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Authenticatable\/guardMiddleware(throwing:)","interfaceLanguage":"swift"},"kind":"symbol","variants":[{"paths":["\/documentation\/vapor\/authenticatable\/guardmiddleware(throwing:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Vapor/Middleware":{"url":"\/documentation\/vapor\/middleware","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Middleware"}],"abstract":[{"type":"codeVoice","code":"Middleware"},{"type":"text","text":" is placed between the server and your router. It is capable of"},{"type":"text","text":" "},{"type":"text","text":"mutating both incoming requests and outgoing responses. "},{"code":"Middleware","type":"codeVoice"},{"type":"text","text":" can choose"},{"type":"text","text":" "},{"type":"text","text":"to pass requests on to the next "},{"type":"codeVoice","code":"Middleware"},{"type":"text","text":" in a chain, or they can short circuit and"},{"type":"text","text":" "},{"type":"text","text":"return a custom "},{"type":"codeVoice","code":"Response"},{"text":" if desired.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Middleware"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Middleware","kind":"symbol","type":"topic","title":"Middleware"},"doc://co.pointfree.VaporRouting/documentation/Vapor":{"type":"topic","url":"\/documentation\/vapor","kind":"symbol","title":"Vapor","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Authenticatable":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Authenticatable","kind":"symbol","abstract":[{"type":"text","text":"Capable of being authenticated."}],"role":"symbol","type":"topic","url":"\/documentation\/vapor\/authenticatable","navigatorTitle":[{"text":"Authenticatable","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Authenticatable","kind":"identifier"}],"title":"Authenticatable"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Authenticatable/guardMiddleware(throwing:)":{"title":"guardMiddleware(throwing:)","abstract":[{"text":"This middleware ensures that an ","type":"text"},{"type":"codeVoice","code":"Authenticatable"},{"text":" type ","type":"text"},{"type":"codeVoice","code":"A"},{"text":" has been authenticated","type":"text"},{"text":" ","type":"text"},{"text":"by a previous ","type":"text"},{"type":"codeVoice","code":"Middleware"},{"text":" or throws an ","type":"text"},{"type":"codeVoice","code":"Error"},{"text":". The middlewares that actually perform","type":"text"},{"text":" ","type":"text"},{"text":"authentication will ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"not"}]},{"type":"text","text":" throw errors if they fail to authenticate the user (except in"},{"type":"text","text":" "},{"type":"text","text":"some exceptional cases like malformed data). This allows the middlewares to be composed"},{"type":"text","text":" "},{"type":"text","text":"together to create chains of authentication for multiple user types."}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"guardMiddleware","kind":"identifier"},{"text":"(","kind":"text"},{"text":"throwing","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:5Vapor10MiddlewareP","text":"Middleware","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Authenticatable\/guardMiddleware(throwing:)","url":"\/documentation\/vapor\/authenticatable\/guardmiddleware(throwing:)"}}}