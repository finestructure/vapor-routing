{"abstract":[{"type":"text","text":"An environment for testing your application."}],"kind":"symbol","sections":[],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Environment\/testing","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor","doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Environment"]]},"variants":[{"paths":["\/documentation\/vapor\/environment\/testing"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"testing"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5Vapor11EnvironmentV","kind":"typeIdentifier","text":"Environment","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Environment"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"Performs an explicit sanitization step because this preset is often used directly in unit tests, without the","type":"text"},{"text":" ","type":"text"},{"text":"benefit of the logic usually invoked through either form of ","type":"text"},{"code":"detect()","type":"codeVoice"},{"text":". This means that when ","type":"text"},{"code":"--env test","type":"codeVoice"},{"text":" is","type":"text"},{"text":" ","type":"text"},{"text":"explicitly specified, the sanitize logic is run twice, but this should be harmless.","type":"text"}],"type":"paragraph"}]}],"metadata":{"externalID":"s:5Vapor11EnvironmentV7testingACvpZ","symbolKind":"property","modules":[{"name":"Vapor"}],"title":"testing","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"testing"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5Vapor11EnvironmentV","text":"Environment","kind":"typeIdentifier"}],"roleHeading":"Type Property","role":"symbol"},"references":{"doc://co.pointfree.VaporRouting/documentation/Vapor":{"type":"topic","url":"\/documentation\/vapor","kind":"symbol","title":"Vapor","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Environment":{"navigatorTitle":[{"kind":"identifier","text":"Environment"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Environment"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Environment","type":"topic","title":"Environment","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"The environment the application is running in, i.e., production, dev, etc. All "},{"type":"codeVoice","code":"Container"},{"type":"text","text":"s will have"},{"type":"text","text":" "},{"type":"text","text":"an "},{"type":"codeVoice","code":"Environment"},{"type":"text","text":" that can be used to dynamically register and configure services."}],"url":"\/documentation\/vapor\/environment"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Environment/testing":{"type":"topic","abstract":[{"type":"text","text":"An environment for testing your application."}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"testing"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Vapor11EnvironmentV","text":"Environment"}],"title":"testing","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Environment\/testing","url":"\/documentation\/vapor\/environment\/testing","kind":"symbol"}}}