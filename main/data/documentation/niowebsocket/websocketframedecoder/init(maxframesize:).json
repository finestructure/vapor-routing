{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameDecoder\/init(maxFrameSize:)"},"metadata":{"role":"symbol","title":"init(maxFrameSize:)","modules":[{"name":"NIOWebSocket"}],"roleHeading":"Initializer","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxFrameSize"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":")"}],"externalID":"s:12NIOWebSocket03WebB12FrameDecoderC03maxD4SizeACSi_tcfc","symbolKind":"init"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxFrameSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":" = 1 << 14)"}]}]},{"kind":"parameters","parameters":[{"name":"maxFrameSize","content":[{"inlineContent":[{"text":"The maximum frame size the decoder is willing to tolerate from the","type":"text"},{"text":" ","type":"text"},{"text":"remote peer. WebSockets in principle allows frame sizes up to ","type":"text"},{"code":"2**64","type":"codeVoice"},{"text":" bytes, but","type":"text"},{"text":" ","type":"text"},{"text":"this is an objectively unreasonable maximum value (on AMD64 systems it is not","type":"text"},{"text":" ","type":"text"},{"text":"possible to even allocate a buffer large enough to handle this size), so we","type":"text"},{"text":" ","type":"text"},{"text":"set a lower one. The default value is the same as the default HTTP\/2 max frame","type":"text"},{"text":" ","type":"text"},{"text":"size, ","type":"text"},{"code":"2**14","type":"codeVoice"},{"text":" bytes. Users may override this to any value up to ","type":"text"},{"code":"UInt32.max","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Users are strongly encouraged not to increase this value unless they absolutely","type":"text"},{"type":"text","text":" "},{"type":"text","text":"must, as the decoder will not produce partial frames, meaning that it will hold"},{"type":"text","text":" "},{"type":"text","text":"on to data until the "},{"type":"emphasis","inlineContent":[{"text":"entire","type":"text"}]},{"type":"text","text":" body is received."}],"type":"paragraph"}]},{"name":"automaticErrorHandling","content":[{"inlineContent":[{"text":"Whether this ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":" should automatically handle","type":"text"},{"text":" ","type":"text"},{"text":"protocol errors in frame serialization, or whether it should allow the pipeline","type":"text"},{"text":" ","type":"text"},{"text":"to handle them.","type":"text"}],"type":"paragraph"}]}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameDecoder"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niowebsocket\/websocketframedecoder\/init(maxframesize:)"]}],"sections":[],"abstract":[{"type":"text","text":"Construct a new "},{"type":"codeVoice","code":"WebSocketFrameDecoder"}],"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameDecoder":{"kind":"symbol","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebSocketFrameDecoder","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameDecoder","title":"WebSocketFrameDecoder","url":"\/documentation\/niowebsocket\/websocketframedecoder","navigatorTitle":[{"kind":"identifier","text":"WebSocketFrameDecoder"}],"abstract":[{"type":"text","text":"An inbound "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" that deserializes websocket frames into a structured"},{"type":"text","text":" "},{"type":"text","text":"format for further processing."}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket":{"title":"NIOWebSocket","abstract":[],"type":"topic","role":"collection","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","url":"\/documentation\/niowebsocket"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameDecoder/init(maxFrameSize:)":{"type":"topic","url":"\/documentation\/niowebsocket\/websocketframedecoder\/init(maxframesize:)","title":"init(maxFrameSize:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameDecoder\/init(maxFrameSize:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"maxFrameSize","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","kind":"symbol","abstract":[{"text":"Construct a new ","type":"text"},{"type":"codeVoice","code":"WebSocketFrameDecoder"}]}}}