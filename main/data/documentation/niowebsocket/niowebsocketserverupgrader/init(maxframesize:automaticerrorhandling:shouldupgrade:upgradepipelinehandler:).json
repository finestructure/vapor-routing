{"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"maxFrameSize","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"automaticErrorHandling","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":" = true, ","kind":"text"},{"text":"shouldUpgrade","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Channel","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel"},{"text":", ","kind":"text"},{"text":"HTTPRequestHead","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP115HTTPRequestHeadV","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPRequestHead"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"},{"text":"<","kind":"text"},{"text":"HTTPHeaders","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP111HTTPHeadersV","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPHeaders"},{"text":"?>, ","kind":"text"},{"text":"upgradePipelineHandler","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Channel","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP115HTTPRequestHeadV","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPRequestHead","text":"HTTPRequestHead"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">)"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The maximum frame size the decoder is willing to tolerate from the"},{"type":"text","text":" "},{"type":"text","text":"remote peer. WebSockets in principle allows frame sizes up to "},{"type":"codeVoice","code":"2**64"},{"type":"text","text":" bytes, but"},{"type":"text","text":" "},{"type":"text","text":"this is an objectively unreasonable maximum value (on AMD64 systems it is not"},{"type":"text","text":" "},{"type":"text","text":"possible to even. Users may set this to any value up to "},{"type":"codeVoice","code":"UInt32.max"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"maxFrameSize"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Whether the pipeline should automatically handle protocol"},{"type":"text","text":" "},{"type":"text","text":"errors by sending error responses and closing the connection. Defaults to "},{"type":"codeVoice","code":"true"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"may be set to "},{"type":"codeVoice","code":"false"},{"type":"text","text":" if the user wishes to handle their own errors."}]}],"name":"automaticErrorHandling"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A callback that determines whether the websocket request should be"},{"type":"text","text":" "},{"type":"text","text":"upgraded. This callback is responsible for creating a "},{"type":"codeVoice","code":"HTTPHeaders"},{"type":"text","text":" object with"},{"type":"text","text":" "},{"type":"text","text":"any headers that it needs on the response "},{"inlineContent":[{"text":"except for","type":"text"}],"type":"emphasis"},{"type":"text","text":" the "},{"type":"codeVoice","code":"Upgrade"},{"type":"text","text":", "},{"type":"codeVoice","code":"Connection"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":"Sec-WebSocket-Accept"},{"type":"text","text":" headers, which this upgrader will handle. Should return"},{"type":"text","text":" "},{"type":"text","text":"an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" containing "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the upgrade should be refused."}]}],"name":"shouldUpgrade"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A function that will be called once the upgrade response is"},{"type":"text","text":" "},{"type":"text","text":"flushed, and that is expected to mutate the "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" appropriately to handle the"},{"type":"text","text":" "},{"type":"text","text":"websocket protocol. This only needs to add the user handlers: the"},{"type":"text","text":" "},{"code":"WebSocketFrameEncoder","type":"codeVoice"},{"type":"text","text":" and "},{"code":"WebSocketFrameDecoder","type":"codeVoice"},{"type":"text","text":" will have been added to the"},{"type":"text","text":" "},{"type":"text","text":"pipeline automatically."}]}],"name":"upgradePipelineHandler"}],"kind":"parameters"}],"metadata":{"externalID":"s:12NIOWebSocket0aB14ServerUpgraderC12maxFrameSize22automaticErrorHandling13shouldUpgrade22upgradePipelineHandlerACSi_Sb7NIOCore15EventLoopFutureCy8NIOHTTP111HTTPHeadersVSgGAH7Channel_p_AK15HTTPRequestHeadVtcAJyytGAhP_p_ARtctcfc","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"maxFrameSize","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"automaticErrorHandling","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"shouldUpgrade","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP115HTTPRequestHeadV","text":"HTTPRequestHead","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP111HTTPHeadersV","text":"HTTPHeaders","kind":"typeIdentifier"},{"text":"?>, ","kind":"text"},{"text":"upgradePipelineHandler","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP115HTTPRequestHeadV","text":"HTTPRequestHead","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"title":"init(maxFrameSize:automaticErrorHandling:shouldUpgrade:upgradePipelineHandler:)","roleHeading":"Initializer","role":"symbol","modules":[{"name":"NIOWebSocket"}],"symbolKind":"init"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niowebsocket\/niowebsocketserverupgrader\/init(maxframesize:automaticerrorhandling:shouldupgrade:upgradepipelinehandler:)"]}],"kind":"symbol","abstract":[{"type":"text","text":"Create a new "},{"code":"NIOWebSocketServerUpgrader","type":"codeVoice"},{"type":"text","text":"."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketServerUpgrader\/init(maxFrameSize:automaticErrorHandling:shouldUpgrade:upgradePipelineHandler:)"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketServerUpgrader"]]},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"url":"\/documentation\/niocore\/channel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","navigatorTitle":[{"kind":"identifier","text":"Channel"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"title":"Channel"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketServerUpgrader":{"navigatorTitle":[{"text":"NIOWebSocketServerUpgrader","kind":"identifier"}],"url":"\/documentation\/niowebsocket\/niowebsocketserverupgrader","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOWebSocketServerUpgrader","kind":"identifier"}],"title":"NIOWebSocketServerUpgrader","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketServerUpgrader","type":"topic","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"HTTPServerProtocolUpgrader"},{"type":"text","text":" that knows how to do the WebSocket upgrade dance."}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket":{"title":"NIOWebSocket","abstract":[],"type":"topic","role":"collection","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","url":"\/documentation\/niowebsocket"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketServerUpgrader/init(maxFrameSize:automaticErrorHandling:shouldUpgrade:upgradePipelineHandler:)":{"url":"\/documentation\/niowebsocket\/niowebsocketserverupgrader\/init(maxframesize:automaticerrorhandling:shouldupgrade:upgradepipelinehandler:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxFrameSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"automaticErrorHandling"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"shouldUpgrade"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"HTTPRequestHead","preciseIdentifier":"s:8NIOHTTP115HTTPRequestHeadV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"HTTPHeaders","preciseIdentifier":"s:8NIOHTTP111HTTPHeadersV"},{"kind":"text","text":"?>, "},{"kind":"externalParam","text":"upgradePipelineHandler"},{"text":": (","kind":"text"},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"HTTPRequestHead","preciseIdentifier":"s:8NIOHTTP115HTTPRequestHeadV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"title":"init(maxFrameSize:automaticErrorHandling:shouldUpgrade:upgradePipelineHandler:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketServerUpgrader\/init(maxFrameSize:automaticErrorHandling:shouldUpgrade:upgradePipelineHandler:)","type":"topic","abstract":[{"type":"text","text":"Create a new "},{"type":"codeVoice","code":"NIOWebSocketServerUpgrader"},{"type":"text","text":"."}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFuture","kind":"identifier"}],"navigatorTitle":[{"text":"EventLoopFuture","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopfuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"role":"symbol","title":"EventLoopFuture"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPHeaders":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPHeaders","kind":"identifier"}],"navigatorTitle":[{"text":"HTTPHeaders","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/niohttp1\/httpheaders","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPHeaders","abstract":[{"text":"A representation of a block of HTTP header fields.","type":"text"}],"role":"symbol","title":"HTTPHeaders"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPRequestHead":{"abstract":[{"type":"text","text":"A representation of the request line and header fields of a HTTP request."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPRequestHead","url":"\/documentation\/niohttp1\/httprequesthead","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPRequestHead","kind":"identifier"}],"navigatorTitle":[{"text":"HTTPRequestHead","kind":"identifier"}],"role":"symbol","title":"HTTPRequestHead","type":"topic","kind":"symbol"}}}