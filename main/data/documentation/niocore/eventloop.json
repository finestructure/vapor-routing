{"variants":[{"paths":["\/documentation\/niocore\/eventloop"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/inEventLoop"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/assertInEventLoop(file:line:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/assertNotInEventLoop(file:line:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/close()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/execute(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatScheduleTask(deadline:file:line:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatScheduleTask(in:file:line:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatSubmit(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatten(_:)-6gsl5","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatten(_:)-7tski","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeCompletedFuture(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeFailedFuture(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeFailedFuture(_:file:line:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makePromise(of:file:line:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeSucceededFuture(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeSucceededFuture(_:file:line:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeSucceededVoidFuture()-4okco","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/performWithTask(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/preconditionInEventLoop(file:line:)-7ukrq","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/preconditionNotInEventLoop(file:line:)-4nrf2","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/scheduleRepeatedAsyncTask(initialDelay:delay:notifying:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/scheduleRepeatedTask(initialDelay:delay:notifying:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/scheduleTask(deadline:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/scheduleTask(in:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/submit(_:)-44luu"],"title":"Instance Methods"}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop"},"kind":"symbol","relationshipsSections":[{"type":"inheritsFrom","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup"],"title":"Inherits From","kind":"relationships"},{"type":"conformingTypes","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedEventLoop"],"title":"Conforming Types","kind":"relationships"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"EventLoopGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14EventLoopGroupP"}]}],"kind":"declarations"},{"content":[{"anchor":"overview","text":"Overview","type":"heading","level":2},{"inlineContent":[{"text":"Usually multiple ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s share the same ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" for processing IO \/ tasks and so share the same processing ","type":"text"},{"code":"NIOThread","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"For a better understanding of how such an ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" works internally the following pseudo code may be helpful:","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["while eventLoop.isOpen {","    \/\/\/ Block until there is something to process for 1...n Channels","    let readyChannels = blockUntilIoOrTasksAreReady()","    \/\/\/ Loop through all the Channels","    for channel in readyChannels {","        \/\/\/ Process IO and \/ or tasks for the Channel.","        \/\/\/ This may include things like:","        \/\/\/    - accept new connection","        \/\/\/    - connect to a remote host","        \/\/\/    - read from socket","        \/\/\/    - write to socket","        \/\/\/    - tasks that were submitted via EventLoop methods","        \/\/\/ and others.","        processIoAndTasks(channel)","    }","}"],"type":"codeListing"},{"inlineContent":[{"text":"Because an ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" may be shared between multiple ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s it’s important to ","type":"text"},{"inlineContent":[{"text":"NOT","type":"text"}],"type":"emphasis"},{"text":" block while processing IO \/ tasks. This also includes long running computations which will have the same","type":"text"},{"text":" ","type":"text"},{"text":"effect as blocking in this case.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"EventLoop"}],"modules":[{"name":"NIOCore"}],"role":"symbol","symbolKind":"protocol","externalID":"s:7NIOCore9EventLoopP","title":"EventLoop","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoop"}],"roleHeading":"Protocol"},"abstract":[{"type":"text","text":"An EventLoop processes IO \/ tasks in an endless loop for "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s until it’s closed."}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/flatScheduleTask(in:file:line:_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatScheduleTask(in:file:line:_:)","url":"\/documentation\/niocore\/eventloop\/flatscheduletask(in:file:line:_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatScheduleTask"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"in"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10TimeAmountV","text":"TimeAmount"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":", () "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Scheduled","preciseIdentifier":"s:7NIOCore9ScheduledV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Schedule a "},{"type":"codeVoice","code":"task"},{"type":"text","text":" that is executed by this "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":" after the given amount of time."}],"type":"topic","title":"flatScheduleTask(in:file:line:_:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/makeSucceededFuture(_:)":{"type":"topic","role":"symbol","url":"\/documentation\/niocore\/eventloop\/makesucceededfuture(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeSucceededFuture","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Success","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeSucceededFuture(_:)","kind":"symbol","title":"makeSucceededFuture(_:)","abstract":[{"type":"text","text":"Creates and returns a new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that is already marked as success. Notifications will be done using this "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" as execution "},{"type":"codeVoice","code":"NIOThread"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/scheduleRepeatedAsyncTask(initialDelay:delay:notifying:_:)":{"title":"scheduleRepeatedAsyncTask(initialDelay:delay:notifying:_:)","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/scheduleRepeatedAsyncTask(initialDelay:delay:notifying:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scheduleRepeatedAsyncTask","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"initialDelay"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10TimeAmountV","text":"TimeAmount"},{"kind":"text","text":", "},{"kind":"externalParam","text":"delay"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10TimeAmountV","text":"TimeAmount"},{"kind":"text","text":", "},{"kind":"externalParam","text":"notifying"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">?, ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore12RepeatedTaskC","text":"RepeatedTask"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore12RepeatedTaskC","text":"RepeatedTask"}],"abstract":[{"text":"Schedule a repeated asynchronous task to be executed by the ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" with a fixed delay between the end and","type":"text"},{"text":" ","type":"text"},{"text":"start of each task.","type":"text"}],"url":"\/documentation\/niocore\/eventloop\/schedulerepeatedasynctask(initialdelay:delay:notifying:_:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/flatScheduleTask(deadline:file:line:_:)":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Schedule a "},{"type":"codeVoice","code":"task"},{"type":"text","text":" that is executed by this "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" at the given time."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"flatScheduleTask"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"deadline"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore11NIODeadlineV","text":"NIODeadline"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":", () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9ScheduledV","text":"Scheduled","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatScheduleTask(deadline:file:line:_:)","title":"flatScheduleTask(deadline:file:line:_:)","role":"symbol","url":"\/documentation\/niocore\/eventloop\/flatscheduletask(deadline:file:line:_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopGroup":{"abstract":[{"type":"text","text":"Provides an endless stream of "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":"s to use."}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopgroup","navigatorTitle":[{"kind":"identifier","text":"EventLoopGroup"}],"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup","title":"EventLoopGroup","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroup"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/makeFailedFuture(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeFailedFuture","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/niocore\/eventloop\/makefailedfuture(_:)","title":"makeFailedFuture(_:)","kind":"symbol","abstract":[{"type":"text","text":"Creates and returns a new "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" that is already marked as failed. Notifications will be done using this "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":" as execution "},{"code":"NIOThread","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeFailedFuture(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/scheduleTask(in:_:)":{"title":"scheduleTask(in:_:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"scheduleTask"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"in"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimeAmount","preciseIdentifier":"s:7NIOCore10TimeAmountV"},{"kind":"text","text":", () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Scheduled","preciseIdentifier":"s:7NIOCore9ScheduledV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"Schedule a ","type":"text"},{"code":"task","type":"codeVoice"},{"text":" that is executed by this ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" after the given amount of time.","type":"text"}],"type":"topic","required":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/scheduleTask(in:_:)","url":"\/documentation\/niocore\/eventloop\/scheduletask(in:_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/makePromise(of:file:line:)":{"url":"\/documentation\/niocore\/eventloop\/makepromise(of:file:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makePromise"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Creates and returns a new "},{"type":"codeVoice","code":"EventLoopPromise"},{"type":"text","text":" that will be notified using this "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" as execution "},{"code":"NIOThread","type":"codeVoice"},{"text":".","type":"text"}],"title":"makePromise(of:file:line:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makePromise(of:file:line:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/makeCompletedFuture(_:)":{"url":"\/documentation\/niocore\/eventloop\/makecompletedfuture(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeCompletedFuture(_:)","title":"makeCompletedFuture(_:)","kind":"symbol","type":"topic","abstract":[{"text":"Creates and returns a new ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" that is marked as succeeded or failed with the value held by ","type":"text"},{"code":"result","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeCompletedFuture","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Success","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Result","preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/scheduleRepeatedTask(initialDelay:delay:notifying:_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/scheduleRepeatedTask(initialDelay:delay:notifying:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scheduleRepeatedTask","kind":"identifier"},{"text":"(","kind":"text"},{"text":"initialDelay","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10TimeAmountV","text":"TimeAmount","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"delay","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TimeAmount","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10TimeAmountV"},{"text":", ","kind":"text"},{"text":"notifying","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">?, (","kind":"text"},{"text":"RepeatedTask","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore12RepeatedTaskC"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"RepeatedTask","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore12RepeatedTaskC"}],"role":"symbol","abstract":[{"text":"Schedule a repeated task to be executed by the ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" with a fixed delay between the end and start of each","type":"text"},{"text":" ","type":"text"},{"text":"task.","type":"text"}],"url":"\/documentation\/niocore\/eventloop\/schedulerepeatedtask(initialdelay:delay:notifying:_:)","kind":"symbol","title":"scheduleRepeatedTask(initialDelay:delay:notifying:_:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/inEventLoop":{"title":"inEventLoop","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"inEventLoop","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if the current ","type":"text"},{"code":"NIOThread","type":"codeVoice"},{"text":" is the same as the ","type":"text"},{"code":"NIOThread","type":"codeVoice"},{"text":" that is tied to this ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":". ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" otherwise.","type":"text"}],"url":"\/documentation\/niocore\/eventloop\/ineventloop","required":true,"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/inEventLoop","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/flatten(_:)-6gsl5":{"title":"flatten(_:)","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatten(_:)-6gsl5","abstract":[{"type":"text","text":"Returns a new "},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" that succeeds only when all the provided futures succeed.","type":"text"},{"text":" ","type":"text"},{"text":"The new ","type":"text"},{"type":"codeVoice","code":"EventLoopFuture"},{"text":" contains an array of results, maintaining same ordering as the futures.","type":"text"}],"url":"\/documentation\/niocore\/eventloop\/flatten(_:)-6gsl5","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatten","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">([","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">]) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<[","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"]>","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/flatSubmit(_:)":{"type":"topic","abstract":[{"type":"text","text":"Submit "},{"code":"task","type":"codeVoice"},{"text":" to be run on this ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatSubmit","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(() -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatSubmit(_:)","title":"flatSubmit(_:)","url":"\/documentation\/niocore\/eventloop\/flatsubmit(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/close()":{"title":"close()","type":"topic","abstract":[{"type":"text","text":"Close this "},{"type":"codeVoice","code":"EventLoop"},{"text":".","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"close","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/niocore\/eventloop\/close()","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/close()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/performWithTask(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/performWithTask(_:)","title":"performWithTask(_:)","url":"\/documentation\/niocore\/eventloop\/performwithtask(_:)","role":"symbol","abstract":[{"type":"text","text":"Run the "},{"type":"codeVoice","code":"async"},{"type":"text","text":" function "},{"type":"codeVoice","code":"body"},{"type":"text","text":" on this event loop and return its result as"},{"type":"text","text":" "},{"type":"text","text":"an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":"."}],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"performWithTask"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">(() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/makeSucceededVoidFuture()-4okco":{"url":"\/documentation\/niocore\/eventloop\/makesucceededvoidfuture()-4okco","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeSucceededVoidFuture()-4okco","kind":"symbol","defaultImplementations":1,"required":true,"role":"symbol","abstract":[{"text":"Return a succeeded ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":" future.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeSucceededVoidFuture","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"makeSucceededVoidFuture()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/assertNotInEventLoop(file:line:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"assertNotInEventLoop"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Asserts that the current thread is "},{"inlineContent":[{"text":"not","type":"text"}],"type":"emphasis"},{"type":"text","text":" the one tied to this "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Otherwise, if running in debug mode, the process will be abnormally terminated as per the semantics of"},{"type":"text","text":" "},{"code":"preconditionFailure(_:file:line:)","type":"codeVoice"},{"type":"text","text":". Never has any effect in release mode."}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/assertNotInEventLoop(file:line:)","title":"assertNotInEventLoop(file:line:)","type":"topic","url":"\/documentation\/niocore\/eventloop\/assertnotineventloop(file:line:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/makeSucceededFuture(_:file:line:)":{"title":"makeSucceededFuture(_:file:line:)","deprecated":true,"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeSucceededFuture(_:file:line:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeSucceededFuture","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Success","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","abstract":[],"url":"\/documentation\/niocore\/eventloop\/makesucceededfuture(_:file:line:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop":{"abstract":[{"text":"An EventLoop processes IO \/ tasks in an endless loop for ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":"s until it’s closed.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","url":"\/documentation\/niocore\/eventloop","title":"EventLoop"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/preconditionInEventLoop(file:line:)-7ukrq":{"kind":"symbol","url":"\/documentation\/niocore\/eventloop\/preconditionineventloop(file:line:)-7ukrq","defaultImplementations":1,"role":"symbol","type":"topic","required":true,"abstract":[{"text":"Asserts that the current thread is the one tied to this ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Otherwise, the process will be abnormally terminated as per the semantics of ","type":"text"},{"code":"preconditionFailure(_:file:line:)","type":"codeVoice"},{"text":".","type":"text"}],"title":"preconditionInEventLoop(file:line:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/preconditionInEventLoop(file:line:)-7ukrq","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"preconditionInEventLoop"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":")"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/scheduleTask(deadline:_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scheduleTask","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"deadline","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIODeadline","preciseIdentifier":"s:7NIOCore11NIODeadlineV","kind":"typeIdentifier"},{"text":", () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Scheduled","preciseIdentifier":"s:7NIOCore9ScheduledV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"Schedule a ","type":"text"},{"type":"codeVoice","code":"task"},{"text":" that is executed by this ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":" at the given time.","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/niocore\/eventloop\/scheduletask(deadline:_:)","title":"scheduleTask(deadline:_:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/scheduleTask(deadline:_:)","required":true},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/assertInEventLoop(file:line:)":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/niocore\/eventloop\/assertineventloop(file:line:)","title":"assertInEventLoop(file:line:)","abstract":[{"text":"Asserts that the current thread is the one tied to this ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Otherwise, if running in debug mode, the process will be abnormally terminated as per the semantics of","type":"text"},{"text":" ","type":"text"},{"code":"preconditionFailure(_:file:line:)","type":"codeVoice"},{"text":". Never has any effect in release mode.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/assertInEventLoop(file:line:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"assertInEventLoop","kind":"identifier"},{"text":"(","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":")","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedEventLoop":{"navigatorTitle":[{"text":"EmbeddedEventLoop","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/nioembedded\/embeddedeventloop","title":"EmbeddedEventLoop","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddedEventLoop","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedEventLoop","abstract":[{"text":"An ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" that is embedded in the current running context with no external","type":"text"},{"text":" ","type":"text"},{"text":"control.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/flatten(_:)-7tski":{"url":"\/documentation\/niocore\/eventloop\/flatten(_:)-7tski","type":"topic","role":"symbol","kind":"symbol","title":"flatten(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatten(_:)-7tski","abstract":[{"type":"text","text":"Returns a new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that succeeds only when all the provided futures succeed,"},{"type":"text","text":" "},{"type":"text","text":"ignoring the resolved values."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatten"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">]) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/submit(_:)-44luu":{"type":"topic","url":"\/documentation\/niocore\/eventloop\/submit(_:)-44luu","required":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/submit(_:)-44luu","title":"submit(_:)","role":"symbol","defaultImplementations":1,"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"submit","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"text":"Submit a given task to be executed by the ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":". Once the execution is complete the returned ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" is notified.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/makeFailedFuture(_:file:line:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeFailedFuture(_:file:line:)","title":"makeFailedFuture(_:file:line:)","deprecated":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeFailedFuture","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/niocore\/eventloop\/makefailedfuture(_:file:line:)","role":"symbol","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/preconditionNotInEventLoop(file:line:)-4nrf2":{"required":true,"abstract":[{"text":"Asserts that the current thread is ","type":"text"},{"inlineContent":[{"type":"text","text":"not"}],"type":"emphasis"},{"text":" the one tied to this ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Otherwise, the process will be abnormally terminated as per the semantics of ","type":"text"},{"code":"preconditionFailure(_:file:line:)","type":"codeVoice"},{"text":".","type":"text"}],"title":"preconditionNotInEventLoop(file:line:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"preconditionNotInEventLoop"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/preconditionNotInEventLoop(file:line:)-4nrf2","kind":"symbol","defaultImplementations":1,"type":"topic","url":"\/documentation\/niocore\/eventloop\/preconditionnotineventloop(file:line:)-4nrf2"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/execute(_:)":{"type":"topic","kind":"symbol","title":"execute(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"execute","kind":"identifier"},{"text":"(() -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/execute(_:)","role":"symbol","abstract":[{"type":"text","text":"Submit a given task to be executed by the "},{"type":"codeVoice","code":"EventLoop"}],"required":true,"url":"\/documentation\/niocore\/eventloop\/execute(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"kind":"symbol","url":"\/documentation\/niocore","title":"NIOCore","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[]}}}