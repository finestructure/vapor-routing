{"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/eventloop\/assertineventloop(file:line:)"]}],"metadata":{"symbolKind":"method","title":"assertInEventLoop(file:line:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"assertInEventLoop","kind":"identifier"},{"text":"(","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":")","kind":"text"}],"extendedModule":"NIOCore","modules":[{"name":"NIOCore"}],"roleHeading":"Instance Method","role":"symbol","externalID":"s:7NIOCore9EventLoopPAAE08assertInbC04file4lineys12StaticStringV_SutF"},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"assertInEventLoop"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#file"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#line"},{"kind":"text","text":")"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":"This is not a customization point so calls to this function can be fully optimized out in release mode."}],"type":"paragraph"}]}]}],"abstract":[{"text":"Asserts that the current thread is the one tied to this ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Otherwise, if running in debug mode, the process will be abnormally terminated as per the semantics of","type":"text"},{"text":" ","type":"text"},{"code":"preconditionFailure(_:file:line:)","type":"codeVoice"},{"text":". Never has any effect in release mode.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/assertInEventLoop(file:line:)"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"kind":"symbol","url":"\/documentation\/niocore","title":"NIOCore","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/assertInEventLoop(file:line:)":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/niocore\/eventloop\/assertineventloop(file:line:)","title":"assertInEventLoop(file:line:)","abstract":[{"text":"Asserts that the current thread is the one tied to this ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Otherwise, if running in debug mode, the process will be abnormally terminated as per the semantics of","type":"text"},{"text":" ","type":"text"},{"code":"preconditionFailure(_:file:line:)","type":"codeVoice"},{"text":". Never has any effect in release mode.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/assertInEventLoop(file:line:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"assertInEventLoop","kind":"identifier"},{"text":"(","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":")","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop":{"abstract":[{"text":"An EventLoop processes IO \/ tasks in an endless loop for ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":"s until itâ€™s closed.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","url":"\/documentation\/niocore\/eventloop","title":"EventLoop"}}}