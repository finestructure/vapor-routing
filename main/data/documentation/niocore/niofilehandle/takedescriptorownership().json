{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"takeDescriptorOwnership"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4CInta","text":"CInt"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"text":"The underlying file descriptor, now owned by the caller.","type":"text"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"After calling this, the "},{"type":"codeVoice","code":"NIOFileHandle"},{"type":"text","text":" cannot be used for anything else and all the operations will throw."}]}]}],"metadata":{"role":"symbol","title":"takeDescriptorOwnership()","externalID":"s:7NIOCore13NIOFileHandleC23takeDescriptorOwnerships5Int32VyKF","modules":[{"name":"NIOCore"}],"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"takeDescriptorOwnership","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"CInt","kind":"typeIdentifier","preciseIdentifier":"s:s4CInta"}],"roleHeading":"Instance Method"},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"abstract":[{"type":"text","text":"Take the ownership of the underlying file descriptor. This is similar to "},{"type":"codeVoice","code":"close()"},{"type":"text","text":" but the underlying file"},{"type":"text","text":" "},{"type":"text","text":"descriptor remains open. The caller is responsible for closing the file descriptor by some other means."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/niofilehandle\/takedescriptorownership()"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/takeDescriptorOwnership()"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"kind":"symbol","url":"\/documentation\/niocore","title":"NIOCore","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/takeDescriptorOwnership()":{"kind":"symbol","title":"takeDescriptorOwnership()","url":"\/documentation\/niocore\/niofilehandle\/takedescriptorownership()","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/takeDescriptorOwnership()","abstract":[{"type":"text","text":"Take the ownership of the underlying file descriptor. This is similar to "},{"type":"codeVoice","code":"close()"},{"type":"text","text":" but the underlying file"},{"type":"text","text":" "},{"type":"text","text":"descriptor remains open. The caller is responsible for closing the file descriptor by some other means."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"takeDescriptorOwnership","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"CInt","preciseIdentifier":"s:s4CInta","kind":"typeIdentifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle":{"type":"topic","role":"symbol","url":"\/documentation\/niocore\/niofilehandle","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"NIOFileHandle","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle","abstract":[{"text":"A ","type":"text"},{"code":"NIOFileHandle","type":"codeVoice"},{"text":" is a handle to an open file.","type":"text"}],"title":"NIOFileHandle","navigatorTitle":[{"text":"NIOFileHandle","kind":"identifier"}]}}}