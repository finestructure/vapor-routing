{"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"symbolKind":"protocol","roleHeading":"Protocol","externalID":"s:7NIOCore7ChannelP","role":"symbol","title":"Channel","navigatorTitle":[{"kind":"identifier","text":"Channel"}],"modules":[{"name":"NIOCore"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}]},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore"]]},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/allocator","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/closeFuture","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/isActive","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/isWritable","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/localAddress","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/parent","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/pipeline","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/remoteAddress","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/syncOptions-17fda"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:targetWindowSize:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2Pipeline(mode:initialLocalSettings:position:inboundStreamStateInitializer:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2Pipeline(mode:initialLocalSettings:position:targetWindowSize:inboundStreamInitializer:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2Pipeline(mode:initialLocalSettings:position:targetWindowSize:inboundStreamStateInitializer:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2SecureUpgrade(h2ChannelConfigurator:http1ChannelConfigurator:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/getOption(_:)-5gug6","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/nioSSL_tlsVersion()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/registerAlreadyConfigured0(promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/setOption(_:value:)-2fzo9","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/write(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/writeAndFlush(_:)-6zx58","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/writeAndFlush(_:)-9jslm"],"title":"Instance Methods"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker"],"type":"inheritsFrom","kind":"relationships","title":"Inherits From"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MulticastChannel"],"type":"inheritedBy","kind":"relationships","title":"Inherited By"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel"],"type":"conformingTypes","kind":"relationships","title":"Conforming Types"}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"},{"kind":"text","text":" : AnyObject, "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker","kind":"typeIdentifier","text":"ChannelOutboundInvoker","preciseIdentifier":"s:7NIOCore22ChannelOutboundInvokerP"}],"platforms":["Linux"]}]},{"content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"All operations on "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" are thread-safe."}]}],"style":"note","type":"aside"},{"inlineContent":[{"type":"text","text":"In SwiftNIO, all I\/O operations are asynchronous and hence all operations on "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" are asynchronous too. This means"},{"type":"text","text":" "},{"type":"text","text":"that all I\/O operations will return immediately, usually before the work has been completed. The "},{"type":"codeVoice","code":"EventLoopPromise"},{"type":"text","text":"s"},{"type":"text","text":" "},{"type":"text","text":"passed to or returned by the operations are used to retrieve the result of an operation after it has completed."}],"type":"paragraph"},{"inlineContent":[{"text":"A ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" owns its ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" which handles all I\/O events and requests associated with the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/niocore\/channel"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/configureHTTP2Pipeline(mode:initialLocalSettings:position:targetWindowSize:inboundStreamInitializer:)":{"url":"\/documentation\/niocore\/channel\/configurehttp2pipeline(mode:initiallocalsettings:position:targetwindowsize:inboundstreaminitializer:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2Pipeline(mode:initialLocalSettings:position:targetWindowSize:inboundStreamInitializer:)","abstract":[{"type":"text","text":"Configures a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" to speak HTTP\/2."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configureHTTP2Pipeline"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOHTTP2Handler","preciseIdentifier":"s:8NIOHTTP20A7HandlerC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ParserMode","preciseIdentifier":"s:8NIOHTTP20A7HandlerC10ParserModeO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"initialLocalSettings"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"HTTP2Setting","preciseIdentifier":"s:8NIOHTTP212HTTP2SettingV"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"position"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Position","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"targetWindowSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"inboundStreamInitializer"},{"kind":"text","text":": (("},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">)?) -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"HTTP2StreamMultiplexer","preciseIdentifier":"s:8NIOHTTP222HTTP2StreamMultiplexerC","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","kind":"symbol","role":"symbol","title":"configureHTTP2Pipeline(mode:initialLocalSettings:position:targetWindowSize:inboundStreamInitializer:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"kind":"symbol","url":"\/documentation\/niocore","title":"NIOCore","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/MulticastChannel":{"role":"symbol","abstract":[{"text":"A ","type":"text"},{"code":"MulticastChannel","type":"codeVoice"},{"text":" is a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" that supports IP multicast operations: that is, a channel that can join multicast","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"groups."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MulticastChannel","title":"MulticastChannel","url":"\/documentation\/niocore\/multicastchannel","navigatorTitle":[{"kind":"identifier","text":"MulticastChannel"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MulticastChannel"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/writeAndFlush(_:)-6zx58":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/writeAndFlush(_:)-6zx58","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeAndFlush"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"url":"\/documentation\/niocore\/channel\/writeandflush(_:)-6zx58","abstract":[{"type":"text","text":"Write and flush data into the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":", automatically wrapping with "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"title":"writeAndFlush(_:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/isWritable":{"kind":"symbol","role":"symbol","url":"\/documentation\/niocore\/channel\/iswritable","required":true,"title":"isWritable","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isWritable","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/isWritable","abstract":[{"text":"Returns if this ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" is currently writable.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/pipeline":{"required":true,"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" which handles all I\/O events and requests associated with this "},{"type":"codeVoice","code":"Channel"},{"text":".","type":"text"}],"role":"symbol","url":"\/documentation\/niocore\/channel\/pipeline","title":"pipeline","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"pipeline"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore15ChannelPipelineC","kind":"typeIdentifier","text":"ChannelPipeline"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/pipeline","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/closeFuture":{"title":"closeFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/closeFuture","url":"\/documentation\/niocore\/channel\/closefuture","abstract":[{"type":"text","text":"The "},{"code":"closeFuture","type":"codeVoice"},{"type":"text","text":" will fire when the "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" has been closed."}],"kind":"symbol","role":"symbol","type":"topic","required":true,"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"closeFuture"},{"kind":"text","text":": "},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"url":"\/documentation\/niocore\/channel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","navigatorTitle":[{"kind":"identifier","text":"Channel"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"title":"Channel"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker":{"abstract":[{"text":"Allows users to invoke an “outbound” operation related to a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" that will flow through the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" until","type":"text"},{"text":" ","type":"text"},{"text":"it will finally be executed by the the ","type":"text"},{"code":"ChannelCore","type":"codeVoice"},{"type":"text","text":" implementation."}],"navigatorTitle":[{"text":"ChannelOutboundInvoker","kind":"identifier"}],"url":"\/documentation\/niocore\/channeloutboundinvoker","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker","title":"ChannelOutboundInvoker","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ChannelOutboundInvoker","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/configureHTTP2Pipeline(mode:initialLocalSettings:position:targetWindowSize:inboundStreamStateInitializer:)":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2Pipeline(mode:initialLocalSettings:position:targetWindowSize:inboundStreamStateInitializer:)","deprecated":true,"abstract":[{"text":"Configures a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" to speak HTTP\/2.","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"configureHTTP2Pipeline","kind":"identifier"},{"text":"(","kind":"text"},{"text":"mode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOHTTP2Handler","preciseIdentifier":"s:8NIOHTTP20A7HandlerC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"ParserMode","preciseIdentifier":"s:8NIOHTTP20A7HandlerC10ParserModeO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"initialLocalSettings","kind":"externalParam"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:8NIOHTTP212HTTP2SettingV","kind":"typeIdentifier","text":"HTTP2Setting"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"position"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore15ChannelPipelineC","kind":"typeIdentifier","text":"ChannelPipeline"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO","kind":"typeIdentifier","text":"Position"},{"kind":"text","text":", "},{"kind":"externalParam","text":"targetWindowSize"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"inboundStreamStateInitializer"},{"kind":"text","text":": (("},{"preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","text":"Channel"},{"kind":"text","text":", "},{"preciseIdentifier":"s:8NIOHTTP213HTTP2StreamIDV","kind":"typeIdentifier","text":"HTTP2StreamID"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">)?) -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:8NIOHTTP222HTTP2StreamMultiplexerC","kind":"typeIdentifier","text":"HTTP2StreamMultiplexer"},{"kind":"text","text":">"}],"url":"\/documentation\/niocore\/channel\/configurehttp2pipeline(mode:initiallocalsettings:position:targetwindowsize:inboundstreamstateinitializer:)","title":"configureHTTP2Pipeline(mode:initialLocalSettings:position:targetWindowSize:inboundStreamStateInitializer:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/isActive":{"title":"isActive","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns if this "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is currently active. Active is defined as the period of time after the"},{"type":"text","text":" "},{"type":"codeVoice","code":"channelActive"},{"type":"text","text":" and before "},{"type":"codeVoice","code":"channelInactive"},{"type":"text","text":" has fired. The main use for this is to know if "},{"type":"codeVoice","code":"channelActive"},{"type":"text","text":" "},{"type":"text","text":"or "},{"type":"codeVoice","code":"channelInactive"},{"type":"text","text":" can be expected next when "},{"type":"codeVoice","code":"handlerAdded"},{"type":"text","text":" was received."}],"required":true,"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isActive"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/niocore\/channel\/isactive","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/isActive"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/localAddress":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/localAddress","abstract":[{"text":"The local ","type":"text"},{"code":"SocketAddress","type":"codeVoice"},{"text":".","type":"text"}],"required":true,"role":"symbol","url":"\/documentation\/niocore\/channel\/localaddress","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"localAddress","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SocketAddress","preciseIdentifier":"s:7NIOCore13SocketAddressO","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","kind":"symbol","title":"localAddress"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/registerAlreadyConfigured0(promise:)":{"url":"\/documentation\/niocore\/channel\/registeralreadyconfigured0(promise:)","kind":"symbol","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"registerAlreadyConfigured0"},{"kind":"text","text":"("},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">?)"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/registerAlreadyConfigured0(promise:)","title":"registerAlreadyConfigured0(promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:targetWindowSize:_:)":{"role":"symbol","kind":"symbol","abstract":[{"text":"Configures a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" to speak either HTTP or HTTP\/2 according to what can be negotiated with the client.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configureCommonHTTPServerPipeline"},{"kind":"text","text":"("},{"kind":"externalParam","text":"h2ConnectionChannelConfigurator"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">)?, "},{"kind":"externalParam","text":"targetWindowSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:targetWindowSize:_:)","title":"configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:targetWindowSize:_:)","url":"\/documentation\/niocore\/channel\/configurecommonhttpserverpipeline(h2connectionchannelconfigurator:targetwindowsize:_:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"type":"topic","kind":"symbol","abstract":[{"type":"codeVoice","code":"EmbeddedChannel"},{"text":" is a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" implementation that does neither any","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"actual IO nor has a proper eventing mechanism. The prime use-case for"},{"type":"text","text":" "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is in unit tests when you want to feed the inbound events"},{"type":"text","text":" "},{"type":"text","text":"and check the outbound events manually."}],"navigatorTitle":[{"kind":"identifier","text":"EmbeddedChannel"}],"url":"\/documentation\/nioembedded\/embeddedchannel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","title":"EmbeddedChannel","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedChannel"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/syncOptions-17fda":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/syncOptions-17fda","abstract":[{"text":"Returns a view of the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" exposing synchronous versions of ","type":"text"},{"code":"setOption","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"getOption","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"The default implementation returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" implementations must opt in to","type":"text"},{"text":" ","type":"text"},{"text":"support this behavior.","type":"text"}],"required":true,"role":"symbol","url":"\/documentation\/niocore\/channel\/syncoptions-17fda","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"syncOptions","kind":"identifier"},{"text":": ","kind":"text"},{"text":"NIOSynchronousChannelOptions","preciseIdentifier":"s:7NIOCore28NIOSynchronousChannelOptionsP","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","kind":"symbol","defaultImplementations":1,"title":"syncOptions"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/configureHTTP2Pipeline(mode:initialLocalSettings:position:inboundStreamStateInitializer:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2Pipeline(mode:initialLocalSettings:position:inboundStreamStateInitializer:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configureHTTP2Pipeline"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOHTTP2Handler","preciseIdentifier":"s:8NIOHTTP20A7HandlerC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ParserMode","preciseIdentifier":"s:8NIOHTTP20A7HandlerC10ParserModeO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"initialLocalSettings"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"HTTP2Setting","preciseIdentifier":"s:8NIOHTTP212HTTP2SettingV"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"position"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15ChannelPipelineC","text":"ChannelPipeline"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO","text":"Position"},{"kind":"text","text":", "},{"kind":"externalParam","text":"inboundStreamStateInitializer"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP213HTTP2StreamIDV","text":"HTTP2StreamID"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">)?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP222HTTP2StreamMultiplexerC","text":"HTTP2StreamMultiplexer"},{"kind":"text","text":">"}],"kind":"symbol","title":"configureHTTP2Pipeline(mode:initialLocalSettings:position:inboundStreamStateInitializer:)","url":"\/documentation\/niocore\/channel\/configurehttp2pipeline(mode:initiallocalsettings:position:inboundstreamstateinitializer:)","deprecated":true,"abstract":[{"type":"text","text":"Configures a "},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" to speak HTTP\/2.","type":"text"}],"type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/remoteAddress":{"required":true,"kind":"symbol","url":"\/documentation\/niocore\/channel\/remoteaddress","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/remoteAddress","title":"remoteAddress","abstract":[{"type":"text","text":"The remote peer’s "},{"type":"codeVoice","code":"SocketAddress"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"remoteAddress"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore13SocketAddressO","kind":"typeIdentifier","text":"SocketAddress"},{"kind":"text","text":"?"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/getOption(_:)-5gug6":{"defaultImplementations":1,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/getOption(_:)-5gug6","title":"getOption(_:)","abstract":[{"type":"text","text":"Get the value of "},{"code":"option","type":"codeVoice"},{"type":"text","text":" for this "},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","url":"\/documentation\/niocore\/channel\/getoption(_:)-5gug6","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getOption","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Option","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","required":true},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/configureHTTP2SecureUpgrade(h2ChannelConfigurator:http1ChannelConfigurator:)":{"title":"configureHTTP2SecureUpgrade(h2ChannelConfigurator:http1ChannelConfigurator:)","abstract":[{"type":"text","text":"Configures a channel to perform a HTTP\/2 secure upgrade."}],"url":"\/documentation\/niocore\/channel\/configurehttp2secureupgrade(h2channelconfigurator:http1channelconfigurator:)","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configureHTTP2SecureUpgrade"},{"kind":"text","text":"("},{"kind":"externalParam","text":"h2ChannelConfigurator"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"http1ChannelConfigurator"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2SecureUpgrade(h2ChannelConfigurator:http1ChannelConfigurator:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/write(_:)":{"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/write(_:)","role":"symbol","title":"write(_:)","url":"\/documentation\/niocore\/channel\/write(_:)","abstract":[{"text":"Write data into the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":", automatically wrapping with ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/setOption(_:value:)-2fzo9":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/setOption(_:value:)-2fzo9","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setOption"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Option"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Option"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Option"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","defaultImplementations":1,"url":"\/documentation\/niocore\/channel\/setoption(_:value:)-2fzo9","title":"setOption(_:value:)","required":true,"abstract":[{"type":"text","text":"Set "},{"type":"codeVoice","code":"option"},{"type":"text","text":" to "},{"type":"codeVoice","code":"value"},{"type":"text","text":" on this "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/allocator":{"type":"topic","title":"allocator","kind":"symbol","url":"\/documentation\/niocore\/channel\/allocator","required":true,"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"allocator","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ByteBufferAllocator","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/allocator","abstract":[{"type":"text","text":"The "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"’s "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" allocator. This is "},{"type":"emphasis","inlineContent":[{"text":"the only","type":"text"}]},{"type":"text","text":" supported way of allocating "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":"s to be used with this "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/writeAndFlush(_:)-9jslm":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"writeAndFlush","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol","url":"\/documentation\/niocore\/channel\/writeandflush(_:)-9jslm","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/writeAndFlush(_:)-9jslm","abstract":[{"text":"Shortcut for calling ","type":"text"},{"code":"write","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"flush","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","title":"writeAndFlush(_:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/parent":{"required":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parent","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s are hierarchical and might have a parent "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":". "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" hierarchies are in use for certain"},{"type":"text","text":" "},{"text":"protocols such as HTTP\/2.","type":"text"}],"url":"\/documentation\/niocore\/channel\/parent","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/parent","title":"parent","role":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:_:)":{"title":"configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configureCommonHTTPServerPipeline"},{"kind":"text","text":"("},{"kind":"externalParam","text":"h2ConnectionChannelConfigurator"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">)?, ("},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"url":"\/documentation\/niocore\/channel\/configurecommonhttpserverpipeline(h2connectionchannelconfigurator:_:)","kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"Configures a ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":" to speak either HTTP or HTTP\/2 according to what can be negotiated with the client.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/nioSSL_tlsVersion()":{"url":"\/documentation\/niocore\/channel\/niossl_tlsversion()","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"nioSSL_tlsVersion"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"TLSVersion","preciseIdentifier":"s:6NIOSSL10TLSVersionO"},{"kind":"text","text":"?>"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/nioSSL_tlsVersion()","role":"symbol","abstract":[{"type":"text","text":"API to extract the "},{"type":"codeVoice","code":"TLSVersion"},{"type":"text","text":" from an EventLoopFuture."}],"title":"nioSSL_tlsVersion()"}}}