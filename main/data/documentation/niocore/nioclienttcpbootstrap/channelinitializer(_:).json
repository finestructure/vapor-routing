{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/nioclienttcpbootstrap\/channelinitializer(_:)"]}],"metadata":{"externalID":"s:7NIOCore21NIOClientTCPBootstrapV18channelInitializeryAcA15EventLoopFutureCyytGAA7Channel_pcF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelInitializer","kind":"identifier"},{"text":"((","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21NIOClientTCPBootstrapV","text":"NIOClientTCPBootstrap"}],"title":"channelInitializer(_:)","role":"symbol","symbolKind":"method","modules":[{"name":"NIOCore"}],"roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrap"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelInitializer","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"handler","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"NIOClientTCPBootstrap","preciseIdentifier":"s:7NIOCore21NIOClientTCPBootstrapV","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrap"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A closure that initializes the provided "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"handler"}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"The connected ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" will operate on ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" as inbound and ","type":"text"},{"code":"IOData","type":"codeVoice"},{"text":" as outbound messages.","type":"text"}],"type":"paragraph"},{"type":"aside","style":"warning","content":[{"inlineContent":[{"type":"text","text":"The "},{"code":"handler","type":"codeVoice"},{"type":"text","text":" closure may be invoked "},{"inlineContent":[{"type":"text","text":"multiple times"}],"type":"emphasis"},{"text":" so it’s usually the right choice to instantiate","type":"text"},{"text":" ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s within ","type":"text"},{"code":"handler","type":"codeVoice"},{"text":". The reason ","type":"text"},{"code":"handler","type":"codeVoice"},{"text":" may be invoked multiple times is that to","type":"text"},{"text":" ","type":"text"},{"text":"successfully set up a connection multiple connections might be setup in the process. Assuming a","type":"text"},{"text":" ","type":"text"},{"text":"hostname that resolves to both IPv4 and IPv6 addresses, NIO will follow","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"https:\/\/en.wikipedia.org\/wiki\/Happy_Eyeballs","type":"reference"},{"text":" and race both an IPv4 and an IPv6","type":"text"},{"text":" ","type":"text"},{"text":"connection. It is possible that both connections get fully established before the IPv4 connection","type":"text"},{"text":" ","type":"text"},{"text":"will be closed again because the IPv6 connection ‘won the race’. Therefore the ","type":"text"},{"code":"channelInitializer","type":"codeVoice"},{"text":" ","type":"text"},{"text":"might be called multiple times and it’s important not to share stateful ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s in more","type":"text"},{"text":" ","type":"text"},{"text":"than one ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrap\/channelInitializer(_:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Initialize the connected "},{"type":"codeVoice","code":"SocketChannel"},{"type":"text","text":" with "},{"type":"codeVoice","code":"initializer"},{"type":"text","text":". The most common task in initializer is to add"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s to the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"kind":"symbol","url":"\/documentation\/niocore","title":"NIOCore","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFuture","kind":"identifier"}],"navigatorTitle":[{"text":"EventLoopFuture","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopfuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"role":"symbol","title":"EventLoopFuture"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOClientTCPBootstrap/channelInitializer(_:)":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrap\/channelInitializer(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelInitializer"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21NIOClientTCPBootstrapV","text":"NIOClientTCPBootstrap"}],"title":"channelInitializer(_:)","url":"\/documentation\/niocore\/nioclienttcpbootstrap\/channelinitializer(_:)","role":"symbol","abstract":[{"text":"Initialize the connected ","type":"text"},{"type":"codeVoice","code":"SocketChannel"},{"text":" with ","type":"text"},{"code":"initializer","type":"codeVoice"},{"type":"text","text":". The most common task in initializer is to add"},{"type":"text","text":" "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s to the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOClientTCPBootstrap":{"url":"\/documentation\/niocore\/nioclienttcpbootstrap","title":"NIOClientTCPBootstrap","navigatorTitle":[{"kind":"identifier","text":"NIOClientTCPBootstrap"}],"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrap","abstract":[{"code":"NIOClientTCPBootstrap","type":"codeVoice"},{"text":" is a bootstrap that allows you to bootstrap client TCP connections using NIO on BSD Sockets,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"NIO Transport Services, or other ways."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOClientTCPBootstrap"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"url":"\/documentation\/niocore\/channel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","navigatorTitle":[{"kind":"identifier","text":"Channel"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"title":"Channel"},"https://en.wikipedia.org/wiki/Happy_Eyeballs":{"url":"https:\/\/en.wikipedia.org\/wiki\/Happy_Eyeballs","title":"Happy Eyeballs","type":"link","identifier":"https:\/\/en.wikipedia.org\/wiki\/Happy_Eyeballs","titleInlineContent":[{"inlineContent":[{"text":"Happy Eyeballs","type":"text"}],"type":"emphasis"}]}}}