{"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions"]]},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Types","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/channeloptions\/types"]}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/AllocatorOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/AllowRemoteHalfClosureOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/AutoReadOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/BacklogOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/ConnectTimeoutOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/DatagramVectorReadMessageCountOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/ExplicitCongestionNotificationsOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/MaxMessagesPerReadOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/ReceivePacketInfo","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/RecvAllocatorOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/SocketOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/WriteBufferWaterMark","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/WriteBufferWaterMarkOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/WriteSpinOption"],"title":"Structures"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/ConvenienceOptionValue"],"title":"Enumerations"}],"metadata":{"role":"symbol","modules":[{"name":"NIOCore"}],"navigatorTitle":[{"kind":"identifier","text":"Types"}],"symbolKind":"enum","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Types"}],"title":"ChannelOptions.Types","externalID":"s:7NIOCore14ChannelOptionsV5TypesO","roleHeading":"Enumeration","extendedModule":"NIOCore"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/AllocatorOption":{"navigatorTitle":[{"kind":"identifier","text":"AllocatorOption"}],"url":"\/documentation\/niocore\/channeloptions\/types\/allocatoroption","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/AllocatorOption","abstract":[{"type":"codeVoice","code":"AllocatorOption"},{"type":"text","text":" allows to specify the "},{"type":"codeVoice","code":"ByteBufferAllocator"},{"type":"text","text":" to use."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AllocatorOption"}],"type":"topic","title":"ChannelOptions.Types.AllocatorOption"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/ConvenienceOptionValue":{"title":"ChannelOptions.Types.ConvenienceOptionValue","url":"\/documentation\/niocore\/channeloptions\/types\/convenienceoptionvalue","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Has an option been set?"},{"type":"text","text":" "},{"type":"text","text":"Option has a value of generic type ValueType."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/ConvenienceOptionValue","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConvenienceOptionValue"}],"navigatorTitle":[{"kind":"identifier","text":"ConvenienceOptionValue"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/AllowRemoteHalfClosureOption":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/AllowRemoteHalfClosureOption","title":"ChannelOptions.Types.AllowRemoteHalfClosureOption","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AllowRemoteHalfClosureOption","kind":"identifier"}],"navigatorTitle":[{"text":"AllowRemoteHalfClosureOption","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/niocore\/channeloptions\/types\/allowremotehalfclosureoption","abstract":[{"type":"codeVoice","code":"AllowRemoteHalfClosureOption"},{"text":" allows users to configure whether the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" will close itself when its remote"},{"type":"text","text":" "},{"type":"text","text":"peer shuts down its send stream, or whether it will remain open. If set to "},{"code":"false","type":"codeVoice"},{"type":"text","text":" (the default), the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" "},{"type":"text","text":"will be closed automatically if the remote peer shuts down its send stream. If set to true, the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" will"},{"type":"text","text":" "},{"type":"text","text":"not be closed: instead, a "},{"type":"codeVoice","code":"ChannelEvent.inboundClosed"},{"type":"text","text":" user event will be sent on the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"and no more data will be received."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/AutoReadOption":{"navigatorTitle":[{"text":"AutoReadOption","kind":"identifier"}],"title":"ChannelOptions.Types.AutoReadOption","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/AutoReadOption","kind":"symbol","url":"\/documentation\/niocore\/channeloptions\/types\/autoreadoption","role":"symbol","abstract":[{"type":"codeVoice","code":"AutoReadOption"},{"text":" allows users to configure if a ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" should automatically call ","type":"text"},{"type":"codeVoice","code":"Channel.read"},{"text":" again once all data was read from the transport or","type":"text"},{"text":" ","type":"text"},{"text":"if the user is responsible to call ","type":"text"},{"type":"codeVoice","code":"Channel.read"},{"text":" manually.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AutoReadOption","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/ConnectTimeoutOption":{"url":"\/documentation\/niocore\/channeloptions\/types\/connecttimeoutoption","kind":"symbol","title":"ChannelOptions.Types.ConnectTimeoutOption","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/ConnectTimeoutOption","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConnectTimeoutOption"}],"abstract":[{"type":"codeVoice","code":"ConnectTimeoutOption"},{"type":"text","text":" allows users to configure the "},{"code":"TimeAmount","type":"codeVoice"},{"type":"text","text":" after which a connect will fail if it was not established in the meantime. May be"},{"type":"text","text":" "},{"code":"nil","type":"codeVoice"},{"type":"text","text":", in which case the connection attempt will never time out."}],"navigatorTitle":[{"kind":"identifier","text":"ConnectTimeoutOption"}],"type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/BacklogOption":{"kind":"symbol","navigatorTitle":[{"text":"BacklogOption","kind":"identifier"}],"type":"topic","title":"ChannelOptions.Types.BacklogOption","abstract":[{"type":"codeVoice","code":"BacklogOption"},{"type":"text","text":" allows users to configure the "},{"type":"codeVoice","code":"backlog"},{"type":"text","text":" value as specified in "},{"type":"codeVoice","code":"man 2 listen"},{"type":"text","text":". This is only useful for "},{"type":"codeVoice","code":"ServerSocketChannel"},{"type":"text","text":"s."}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BacklogOption","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/BacklogOption","url":"\/documentation\/niocore\/channeloptions\/types\/backlogoption"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/WriteBufferWaterMark":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WriteBufferWaterMark"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/WriteBufferWaterMark","type":"topic","title":"ChannelOptions.Types.WriteBufferWaterMark","navigatorTitle":[{"kind":"identifier","text":"WriteBufferWaterMark"}],"kind":"symbol","url":"\/documentation\/niocore\/channeloptions\/types\/writebufferwatermark","abstract":[{"text":"The watermark used to detect when ","type":"text"},{"type":"codeVoice","code":"Channel.isWritable"},{"text":" returns ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" or "},{"type":"codeVoice","code":"false"},{"type":"text","text":"."}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/MaxMessagesPerReadOption":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/MaxMessagesPerReadOption","abstract":[{"code":"MaxMessagesPerReadOption","type":"codeVoice"},{"type":"text","text":" allows users to configure the maximum number of read calls to the underlying transport are performed before wait again until"},{"type":"text","text":" "},{"type":"text","text":"there is more to read and be notified."}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MaxMessagesPerReadOption","kind":"identifier"}],"navigatorTitle":[{"text":"MaxMessagesPerReadOption","kind":"identifier"}],"title":"ChannelOptions.Types.MaxMessagesPerReadOption","type":"topic","url":"\/documentation\/niocore\/channeloptions\/types\/maxmessagesperreadoption","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types":{"title":"ChannelOptions.Types","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types","role":"symbol","abstract":[],"url":"\/documentation\/niocore\/channeloptions\/types","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Types","kind":"identifier"}],"navigatorTitle":[{"text":"Types","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/RecvAllocatorOption":{"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/niocore\/channeloptions\/types\/recvallocatoroption","abstract":[{"type":"codeVoice","code":"RecvAllocatorOption"},{"type":"text","text":" allows users to specify the "},{"type":"codeVoice","code":"RecvByteBufferAllocator"},{"type":"text","text":" to use."}],"navigatorTitle":[{"kind":"identifier","text":"RecvAllocatorOption"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RecvAllocatorOption"}],"title":"ChannelOptions.Types.RecvAllocatorOption","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/RecvAllocatorOption"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions":{"title":"ChannelOptions","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions","role":"symbol","abstract":[{"text":"Provides ","type":"text"},{"type":"codeVoice","code":"ChannelOption"},{"type":"text","text":"s to be used with a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":", "},{"type":"codeVoice","code":"Bootstrap"},{"type":"text","text":" or "},{"type":"codeVoice","code":"ServerBootstrap"},{"type":"text","text":"."}],"url":"\/documentation\/niocore\/channeloptions","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelOptions","kind":"identifier"}],"navigatorTitle":[{"text":"ChannelOptions","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/WriteBufferWaterMarkOption":{"role":"symbol","abstract":[{"type":"codeVoice","code":"WriteBufferWaterMarkOption"},{"type":"text","text":" allows users to configure when a "},{"code":"Channel","type":"codeVoice"},{"text":" should be marked as writable or not. Once the amount of bytes queued in a","type":"text"},{"text":" ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s outbound buffer is larger than ","type":"text"},{"code":"WriteBufferWaterMark.high","type":"codeVoice"},{"text":" the channel will be marked as non-writable and so","type":"text"},{"text":" ","type":"text"},{"code":"Channel.isWritable","type":"codeVoice"},{"text":" will return ","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":". Once we were able to write some data out of the outbound buffer and the amount of bytes queued"},{"type":"text","text":" "},{"type":"text","text":"falls below "},{"type":"codeVoice","code":"WriteBufferWaterMark.low"},{"type":"text","text":" the "},{"code":"Channel","type":"codeVoice"},{"text":" will become writable again. Once this happens ","type":"text"},{"code":"Channel.writable","type":"codeVoice"},{"text":" will return","type":"text"},{"text":" ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" again. These writability changes are also propagated through the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" and so can be intercepted via ","type":"text"},{"type":"codeVoice","code":"ChannelInboundHandler.channelWritabilityChanged"},{"type":"text","text":"."}],"title":"ChannelOptions.Types.WriteBufferWaterMarkOption","navigatorTitle":[{"kind":"identifier","text":"WriteBufferWaterMarkOption"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WriteBufferWaterMarkOption"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/WriteBufferWaterMarkOption","kind":"symbol","url":"\/documentation\/niocore\/channeloptions\/types\/writebufferwatermarkoption"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/SocketOption":{"title":"ChannelOptions.Types.SocketOption","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/SocketOption","role":"symbol","abstract":[{"code":"SocketOption","type":"codeVoice"},{"type":"text","text":" allows users to specify configuration settings that are directly applied to the underlying socket file descriptor."}],"url":"\/documentation\/niocore\/channeloptions\/types\/socketoption","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SocketOption"}],"navigatorTitle":[{"kind":"identifier","text":"SocketOption"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/DatagramVectorReadMessageCountOption":{"abstract":[{"type":"codeVoice","code":"DatagramVectorReadMessageCountOption"},{"text":" allows users to configure the number of messages to attempt to read in a single syscall on a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"datagram "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"role":"symbol","title":"ChannelOptions.Types.DatagramVectorReadMessageCountOption","url":"\/documentation\/niocore\/channeloptions\/types\/datagramvectorreadmessagecountoption","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DatagramVectorReadMessageCountOption"}],"navigatorTitle":[{"kind":"identifier","text":"DatagramVectorReadMessageCountOption"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/DatagramVectorReadMessageCountOption","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/WriteSpinOption":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WriteSpinOption","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/WriteSpinOption","title":"ChannelOptions.Types.WriteSpinOption","url":"\/documentation\/niocore\/channeloptions\/types\/writespinoption","role":"symbol","abstract":[{"type":"codeVoice","code":"WriteSpinOption"},{"type":"text","text":" allows users to configure the number of repetitions of a only partially successful write call before considering the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" not writable."},{"type":"text","text":" "},{"type":"text","text":"Setting this option to "},{"type":"codeVoice","code":"0"},{"type":"text","text":" means that we only issue one write call and if that call does not write all the bytes,"},{"type":"text","text":" "},{"type":"text","text":"we consider the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" not writable."}],"navigatorTitle":[{"text":"WriteSpinOption","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"kind":"symbol","url":"\/documentation\/niocore","title":"NIOCore","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/ExplicitCongestionNotificationsOption":{"navigatorTitle":[{"kind":"identifier","text":"ExplicitCongestionNotificationsOption"}],"role":"symbol","abstract":[{"type":"text","text":"When set to true IP level ECN information will be reported through "},{"type":"codeVoice","code":"AddressedEnvelope.Metadata"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExplicitCongestionNotificationsOption"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/ExplicitCongestionNotificationsOption","type":"topic","url":"\/documentation\/niocore\/channeloptions\/types\/explicitcongestionnotificationsoption","title":"ChannelOptions.Types.ExplicitCongestionNotificationsOption","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/ReceivePacketInfo":{"title":"ChannelOptions.Types.ReceivePacketInfo","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReceivePacketInfo"}],"kind":"symbol","url":"\/documentation\/niocore\/channeloptions\/types\/receivepacketinfo","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReceivePacketInfo"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/ReceivePacketInfo","abstract":[{"type":"text","text":"When set to true IP level Packet Info information will be reported through "},{"type":"codeVoice","code":"AddressedEnvelope.Metadata"},{"type":"text","text":" for UDP packets."}]}}}