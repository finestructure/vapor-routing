{"metadata":{"symbolKind":"class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOFileHandle"}],"modules":[{"name":"NIOCore"}],"externalID":"s:7NIOCore13NIOFileHandleC","roleHeading":"Class","role":"symbol","title":"NIOFileHandle","navigatorTitle":[{"kind":"identifier","text":"NIOFileHandle"}]},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore"]]},"variants":[{"paths":["\/documentation\/niocore\/niofilehandle"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOFileHandle"}]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"text":"When creating a ","type":"text"},{"code":"NIOFileHandle","type":"codeVoice"},{"text":" it takes ownership of the underlying file descriptor. When a ","type":"text"},{"code":"NIOFileHandle","type":"codeVoice"},{"text":" is no longer","type":"text"},{"text":" ","type":"text"},{"text":"needed you must ","type":"text"},{"code":"close","type":"codeVoice"},{"text":" it or take back ownership of the file descriptor using ","type":"text"},{"code":"takeDescriptorOwnership","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"One underlying file descriptor should usually be managed by one "},{"code":"NIOFileHandle","type":"codeVoice"},{"type":"text","text":" only."}]}],"style":"note","type":"aside"},{"content":[{"inlineContent":[{"text":"Failing to manage the lifetime of a ","type":"text"},{"code":"NIOFileHandle","type":"codeVoice"},{"text":" correctly will result in undefined behaviour.","type":"text"}],"type":"paragraph"}],"style":"warning","type":"aside"},{"content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"NIOFileHandle"},{"type":"text","text":" objects are not thread-safe and are mutable. They also cannot be fully thread-safe as they refer to a global underlying file descriptor."}],"type":"paragraph"}],"style":"warning","type":"aside"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle"},"sections":[],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"NIOFileHandle"},{"type":"text","text":" is a handle to an open file."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"title":"Structures","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/Flags","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/Mode"]},{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/init(descriptor:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/init(path:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/init(path:mode:flags:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/isOpen"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/close()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/duplicate()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/takeDescriptorOwnership()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/withUnsafeFileDescriptor(_:)"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/CustomStringConvertible-Implementations"]}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/FileDescriptor","doc:\/\/co.pointfree.VaporRouting\/s23CustomStringConvertibleP"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/init(path:)":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/init(path:)","abstract":[{"type":"text","text":"Open a new "},{"type":"codeVoice","code":"NIOFileHandle"},{"type":"text","text":". This operation is blocking."}],"url":"\/documentation\/niocore\/niofilehandle\/init(path:)","kind":"symbol","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol","title":"init(path:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/init(path:mode:flags:)":{"kind":"symbol","title":"init(path:mode:flags:)","url":"\/documentation\/niocore\/niofilehandle\/init(path:mode:flags:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/init(path:mode:flags:)","abstract":[{"type":"text","text":"Open a new "},{"type":"codeVoice","code":"NIOFileHandle"},{"type":"text","text":". This operation is blocking."}],"role":"symbol","fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"mode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOFileHandle","preciseIdentifier":"s:7NIOCore13NIOFileHandleC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Mode","preciseIdentifier":"s:7NIOCore13NIOFileHandleC4ModeV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"flags","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOFileHandle","preciseIdentifier":"s:7NIOCore13NIOFileHandleC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Flags","preciseIdentifier":"s:7NIOCore13NIOFileHandleC5FlagsV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/init(descriptor:)":{"kind":"symbol","title":"init(descriptor:)","url":"\/documentation\/niocore\/niofilehandle\/init(descriptor:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/init(descriptor:)","abstract":[{"type":"text","text":"Create a "},{"type":"codeVoice","code":"NIOFileHandle"},{"type":"text","text":" taking ownership of "},{"type":"codeVoice","code":"descriptor"},{"type":"text","text":". You must call "},{"type":"codeVoice","code":"NIOFileHandle.close"},{"type":"text","text":" or "},{"type":"codeVoice","code":"NIOFileHandle.takeDescriptorOwnership"},{"type":"text","text":" before"},{"type":"text","text":" "},{"type":"text","text":"this object can be safely released."}],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"descriptor","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CInt","preciseIdentifier":"s:s4CInta","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/Flags":{"url":"\/documentation\/niocore\/niofilehandle\/flags","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Flags"}],"navigatorTitle":[{"kind":"identifier","text":"Flags"}],"type":"topic","abstract":[{"type":"codeVoice","code":"Flags"},{"type":"text","text":" allows to specify additional flags to "},{"type":"codeVoice","code":"Mode"},{"type":"text","text":", such as permission for file creation."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/Flags","kind":"symbol","title":"NIOFileHandle.Flags","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle":{"type":"topic","role":"symbol","url":"\/documentation\/niocore\/niofilehandle","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"NIOFileHandle","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle","abstract":[{"text":"A ","type":"text"},{"code":"NIOFileHandle","type":"codeVoice"},{"text":" is a handle to an open file.","type":"text"}],"title":"NIOFileHandle","navigatorTitle":[{"text":"NIOFileHandle","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/close()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/close()","url":"\/documentation\/niocore\/niofilehandle\/close()","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"close","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol","abstract":[{"type":"text","text":"Close this "},{"code":"FileDescriptor","type":"codeVoice"},{"type":"text","text":"."}],"title":"close()","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"kind":"symbol","url":"\/documentation\/niocore","title":"NIOCore","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/CustomStringConvertible-Implementations":{"abstract":[],"url":"\/documentation\/niocore\/niofilehandle\/customstringconvertible-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/CustomStringConvertible-Implementations","role":"collectionGroup","title":"CustomStringConvertible Implementations","type":"topic","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/duplicate()":{"kind":"symbol","title":"duplicate()","url":"\/documentation\/niocore\/niofilehandle\/duplicate()","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/duplicate()","abstract":[{"type":"text","text":"Duplicates this "},{"type":"codeVoice","code":"NIOFileHandle"},{"type":"text","text":". This means that a new "},{"type":"codeVoice","code":"NIOFileHandle"},{"type":"text","text":" object with a new underlying file descriptor"},{"type":"text","text":" "},{"type":"text","text":"is returned. The caller takes ownership of the returned "},{"type":"codeVoice","code":"NIOFileHandle"},{"type":"text","text":" and is responsible for closing it."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"duplicate","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"NIOFileHandle","preciseIdentifier":"s:7NIOCore13NIOFileHandleC","kind":"typeIdentifier"}]},"doc://co.pointfree.VaporRouting/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","type":"unresolvable","identifier":"doc:\/\/co.pointfree.VaporRouting\/s23CustomStringConvertibleP"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/withUnsafeFileDescriptor(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/withUnsafeFileDescriptor(_:)","role":"symbol","title":"withUnsafeFileDescriptor(_:)","abstract":[{"text":"Will be called with the file descriptor if still open, if not it will","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"throw an "},{"type":"codeVoice","code":"IOError"},{"type":"text","text":"."}],"type":"topic","url":"\/documentation\/niocore\/niofilehandle\/withunsafefiledescriptor(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withUnsafeFileDescriptor","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">((","kind":"text"},{"preciseIdentifier":"s:s4CInta","text":"CInt","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/FileDescriptor":{"navigatorTitle":[{"kind":"identifier","text":"FileDescriptor"}],"role":"symbol","url":"\/documentation\/niocore\/filedescriptor","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/FileDescriptor","type":"topic","title":"FileDescriptor","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileDescriptor"}],"abstract":[],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/takeDescriptorOwnership()":{"kind":"symbol","title":"takeDescriptorOwnership()","url":"\/documentation\/niocore\/niofilehandle\/takedescriptorownership()","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/takeDescriptorOwnership()","abstract":[{"type":"text","text":"Take the ownership of the underlying file descriptor. This is similar to "},{"type":"codeVoice","code":"close()"},{"type":"text","text":" but the underlying file"},{"type":"text","text":" "},{"type":"text","text":"descriptor remains open. The caller is responsible for closing the file descriptor by some other means."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"takeDescriptorOwnership","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"CInt","preciseIdentifier":"s:s4CInta","kind":"typeIdentifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/isOpen":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/isOpen","title":"isOpen","role":"symbol","url":"\/documentation\/niocore\/niofilehandle\/isopen","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isOpen"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"kind":"symbol","abstract":[{"code":"true","type":"codeVoice"},{"text":" if this ","type":"text"},{"code":"FileDescriptor","type":"codeVoice"},{"text":" is open (which means it was not closed yet).","type":"text"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/Mode":{"type":"topic","role":"symbol","url":"\/documentation\/niocore\/niofilehandle\/mode","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Mode","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/Mode","abstract":[{"code":"Mode","type":"codeVoice"},{"text":" represents file access modes.","type":"text"}],"title":"NIOFileHandle.Mode","navigatorTitle":[{"text":"Mode","kind":"identifier"}]}}}