{"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/channelinboundinvoker"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelInboundInvoker","kind":"identifier"}]}]}],"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireChannelActive()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireChannelInactive()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireChannelRead(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireChannelReadComplete()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireChannelRegistered()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireChannelUnregistered()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireChannelWritabilityChanged()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireErrorCaught(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireUserInboundEventTriggered(_:)"]}],"sections":[],"relationshipsSections":[{"type":"inheritedBy","title":"Inherited By","kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInvoker"]},{"title":"Conforming Types","type":"conformingTypes","kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline"]}],"abstract":[{"type":"text","text":"Fire inbound events related to a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" through the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" until its end is reached or it’s consumed by a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"."}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"modules":[{"name":"NIOCore"}],"navigatorTitle":[{"kind":"identifier","text":"ChannelInboundInvoker"}],"symbolKind":"protocol","roleHeading":"Protocol","title":"ChannelInboundInvoker","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ChannelInboundInvoker"}],"role":"symbol","externalID":"s:7NIOCore21ChannelInboundInvokerP"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundInvoker":{"title":"ChannelInboundInvoker","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundInvoker"}],"type":"topic","url":"\/documentation\/niocore\/channelinboundinvoker","role":"symbol","abstract":[{"type":"text","text":"Fire inbound events related to a "},{"type":"codeVoice","code":"Channel"},{"text":" through the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":" until its end is reached or it’s consumed by a ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"ChannelInboundInvoker"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundInvoker/fireChannelWritabilityChanged()":{"title":"fireChannelWritabilityChanged()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelWritabilityChanged","kind":"identifier"},{"kind":"text","text":"()"}],"type":"topic","url":"\/documentation\/niocore\/channelinboundinvoker\/firechannelwritabilitychanged()","role":"symbol","required":true,"abstract":[{"type":"text","text":"Called when a "},{"type":"codeVoice","code":"Channel"},{"text":"’s writable state changes.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireChannelWritabilityChanged()","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandlerContext":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","role":"symbol","url":"\/documentation\/niocore\/channelhandlercontext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandlerContext"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelHandlerContext"}],"title":"ChannelHandlerContext","abstract":[{"text":"Every ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" has – when added to a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" – a corresponding "},{"type":"codeVoice","code":"ChannelHandlerContext"},{"type":"text","text":" which is"},{"type":"text","text":" "},{"type":"text","text":"the way "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s can interact with other "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s in the pipeline."}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundInvoker/fireChannelInactive()":{"title":"fireChannelInactive()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelInactive","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","url":"\/documentation\/niocore\/channelinboundinvoker\/firechannelinactive()","role":"symbol","required":true,"abstract":[{"type":"text","text":"Called once a "},{"type":"codeVoice","code":"Channel"},{"text":" becomes inactive.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireChannelInactive()","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundInvoker/fireChannelRead(_:)":{"title":"fireChannelRead(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelRead","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NIOAny","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"text":")","kind":"text"}],"type":"topic","url":"\/documentation\/niocore\/channelinboundinvoker\/firechannelread(_:)","role":"symbol","required":true,"abstract":[{"type":"text","text":"Called once there is some data read for a "},{"type":"codeVoice","code":"Channel"},{"text":" that needs processing.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireChannelRead(_:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundInvoker/fireChannelUnregistered()":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelUnregistered"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireChannelUnregistered()","kind":"symbol","required":true,"url":"\/documentation\/niocore\/channelinboundinvoker\/firechannelunregistered()","type":"topic","role":"symbol","title":"fireChannelUnregistered()","abstract":[{"type":"text","text":"Called once a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" was unregistered from its "},{"type":"codeVoice","code":"EventLoop"},{"text":" which means no IO will be handled for a ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" anymore.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundInvoker/fireErrorCaught(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireErrorCaught","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireErrorCaught(_:)","kind":"symbol","required":true,"url":"\/documentation\/niocore\/channelinboundinvoker\/fireerrorcaught(_:)","type":"topic","role":"symbol","title":"fireErrorCaught(_:)","abstract":[{"type":"text","text":"Called when an inbound operation "},{"type":"codeVoice","code":"Error"},{"type":"text","text":" was caught."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","url":"\/documentation\/niocore\/channelpipeline","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelPipeline"}],"title":"ChannelPipeline","abstract":[{"text":"A list of ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":"s that handle or intercept inbound events and outbound operations of a","type":"text"},{"text":" ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":". ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" implements an advanced form of the Intercepting Filter pattern","type":"text"},{"text":" ","type":"text"},{"text":"to give a user full control over how an event is handled and how the ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":"s in a pipeline","type":"text"},{"text":" ","type":"text"},{"text":"interact with each other.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelPipeline"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundInvoker/fireChannelActive()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelActive","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireChannelActive()","kind":"symbol","required":true,"url":"\/documentation\/niocore\/channelinboundinvoker\/firechannelactive()","type":"topic","role":"symbol","title":"fireChannelActive()","abstract":[{"type":"text","text":"Called once a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" becomes active."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundInvoker/fireUserInboundEventTriggered(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireUserInboundEventTriggered","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Any","kind":"keyword"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireUserInboundEventTriggered(_:)","kind":"symbol","required":true,"url":"\/documentation\/niocore\/channelinboundinvoker\/fireuserinboundeventtriggered(_:)","type":"topic","role":"symbol","title":"fireUserInboundEventTriggered(_:)","abstract":[{"type":"text","text":"Trigger a custom user inbound event which will flow through the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"kind":"symbol","url":"\/documentation\/niocore","title":"NIOCore","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInvoker":{"title":"ChannelInvoker","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInvoker"}],"type":"topic","url":"\/documentation\/niocore\/channelinvoker","role":"symbol","abstract":[{"type":"text","text":"A protocol that signals that outbound and inbound events are triggered by this invoker."}],"navigatorTitle":[{"kind":"identifier","text":"ChannelInvoker"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInvoker","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundInvoker/fireChannelReadComplete()":{"title":"fireChannelReadComplete()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelReadComplete","kind":"identifier"},{"kind":"text","text":"()"}],"type":"topic","url":"\/documentation\/niocore\/channelinboundinvoker\/firechannelreadcomplete()","role":"symbol","required":true,"abstract":[{"type":"text","text":"Called once there is no more data to read immediately on a "},{"type":"codeVoice","code":"Channel"},{"text":". Any new data received will be handled later.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireChannelReadComplete()","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundInvoker/fireChannelRegistered()":{"title":"fireChannelRegistered()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelRegistered"},{"kind":"text","text":"()"}],"type":"topic","url":"\/documentation\/niocore\/channelinboundinvoker\/firechannelregistered()","role":"symbol","required":true,"abstract":[{"type":"text","text":"Called once a "},{"type":"codeVoice","code":"Channel"},{"text":" was registered to its ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":" and so IO will be processed.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireChannelRegistered()","kind":"symbol"}}}