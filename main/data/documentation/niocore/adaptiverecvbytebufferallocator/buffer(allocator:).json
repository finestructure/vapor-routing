{"kind":"symbol","sections":[],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/AdaptiveRecvByteBufferAllocator\/buffer(allocator:)","interfaceLanguage":"swift"},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"buffer"},{"kind":"text","text":"("},{"kind":"externalParam","text":"allocator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","text":"ByteBufferAllocator"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"}],"role":"symbol","modules":[{"name":"NIOCore"}],"title":"buffer(allocator:)","roleHeading":"Instance Method","symbolKind":"method","externalID":"s:7NIOCore31AdaptiveRecvByteBufferAllocatorV6buffer9allocatorAA0dE0VAA0deF0V_tF"},"abstract":[{"type":"text","text":"Allocates a new "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" that will be used to read bytes from a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/AdaptiveRecvByteBufferAllocator"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/adaptiverecvbytebufferallocator\/buffer(allocator:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buffer"},{"kind":"text","text":"("},{"kind":"externalParam","text":"allocator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBufferAllocator","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","text":"ByteBufferAllocator"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"}]}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"kind":"symbol","url":"\/documentation\/niocore","title":"NIOCore","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBufferAllocator":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ByteBufferAllocator"}],"url":"\/documentation\/niocore\/bytebufferallocator","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBufferAllocator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBufferAllocator"}],"role":"symbol","type":"topic","title":"ByteBufferAllocator","abstract":[{"text":"The preferred allocator for ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" values. The allocation strategy is opaque but is currently libcâ€™s","type":"text"},{"text":" ","type":"text"},{"code":"malloc","type":"codeVoice"},{"type":"text","text":", "},{"code":"realloc","type":"codeVoice"},{"type":"text","text":" and "},{"code":"free","type":"codeVoice"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","url":"\/documentation\/niocore\/bytebuffer","title":"ByteBuffer"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/AdaptiveRecvByteBufferAllocator":{"role":"symbol","abstract":[{"type":"codeVoice","code":"RecvByteBufferAllocator"},{"type":"text","text":" which will gracefully increment or decrement the buffer size on the feedback that was recorded."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AdaptiveRecvByteBufferAllocator"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AdaptiveRecvByteBufferAllocator"}],"title":"AdaptiveRecvByteBufferAllocator","url":"\/documentation\/niocore\/adaptiverecvbytebufferallocator","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/AdaptiveRecvByteBufferAllocator"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/AdaptiveRecvByteBufferAllocator/buffer(allocator:)":{"abstract":[{"type":"text","text":"Allocates a new "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" that will be used to read bytes from a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buffer"},{"kind":"text","text":"("},{"kind":"externalParam","text":"allocator"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","kind":"typeIdentifier","text":"ByteBufferAllocator"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier","text":"ByteBuffer"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/AdaptiveRecvByteBufferAllocator\/buffer(allocator:)","url":"\/documentation\/niocore\/adaptiverecvbytebufferallocator\/buffer(allocator:)","kind":"symbol","type":"topic","title":"buffer(allocator:)","role":"symbol"}}}