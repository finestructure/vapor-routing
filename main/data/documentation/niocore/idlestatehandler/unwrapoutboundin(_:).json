{"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/ChannelOutboundHandler-Implementations"]]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/unwrapOutboundIn(_:)","interfaceLanguage":"swift"},"metadata":{"externalID":"s:7NIOCore22ChannelOutboundHandlerPAAE06unwrapC2Iny0cF0QzAA6NIOAnyVF::SYNTHESIZED::s:7NIOCore16IdleStateHandlerC","modules":[{"name":"NIOCore"}],"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unwrapOutboundIn"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OutboundIn"}],"role":"symbol","title":"unwrapOutboundIn(_:)","extendedModule":"NIOCore","symbolKind":"method"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unwrapOutboundIn"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny","kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OutboundIn"}],"platforms":["Linux"]}],"kind":"declarations"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/idlestatehandler\/unwrapoutboundin(_:)"]}],"abstract":[{"type":"text","text":"Unwrap the provided "},{"code":"NIOAny","type":"codeVoice"},{"type":"text","text":" that was passed to "},{"type":"codeVoice","code":"write"},{"type":"text","text":"."}],"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/ChannelOutboundHandler-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/ChannelOutboundHandler-Implementations","abstract":[],"kind":"article","role":"collectionGroup","type":"topic","url":"\/documentation\/niocore\/idlestatehandler\/channeloutboundhandler-implementations","title":"ChannelOutboundHandler Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"kind":"symbol","url":"\/documentation\/niocore","title":"NIOCore","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/unwrapOutboundIn(_:)":{"abstract":[{"text":"Unwrap the provided ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":" that was passed to ","type":"text"},{"code":"write","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/unwrapOutboundIn(_:)","title":"unwrapOutboundIn(_:)","url":"\/documentation\/niocore\/idlestatehandler\/unwrapoutboundin(_:)","role":"symbol","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unwrapOutboundIn"},{"kind":"text","text":"("},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier","text":"NIOAny"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OutboundIn"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOAny":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOAny"}],"type":"topic","url":"\/documentation\/niocore\/nioany","navigatorTitle":[{"kind":"identifier","text":"NIOAny"}],"abstract":[{"code":"NIOAny","type":"codeVoice"},{"type":"text","text":" is an opaque container for values of "},{"inlineContent":[{"text":"any","type":"text"}],"type":"emphasis"},{"type":"text","text":" type, similar to Swiftâ€™s builtin "},{"code":"Any","type":"codeVoice"},{"type":"text","text":" type. Contrary to"},{"type":"text","text":" "},{"type":"codeVoice","code":"Any"},{"type":"text","text":" the overhead of "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":" depends on the the type of the wrapped value. Certain types that are important"},{"type":"text","text":" "},{"type":"text","text":"for the performance of a SwiftNIO application like "},{"code":"ByteBuffer","type":"codeVoice"},{"text":", ","type":"text"},{"code":"FileRegion","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"AddressEnvelope<ByteBuffer>","type":"codeVoice"},{"text":" can be expected","type":"text"},{"text":" ","type":"text"},{"text":"to be wrapped almost without overhead. All others will have similar performance as if they were passed as an ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" as","type":"text"},{"text":" ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":" just like ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" will contain them within an existential container.","type":"text"}],"title":"NIOAny","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"IdleStateHandler"}],"type":"topic","abstract":[{"type":"text","text":"Triggers an IdleStateEvent when a Channel has not performed read, write, or both operation for a while."}],"url":"\/documentation\/niocore\/idlestatehandler","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler","title":"IdleStateHandler","navigatorTitle":[{"kind":"identifier","text":"IdleStateHandler"}],"role":"symbol"}}}