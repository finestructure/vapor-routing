{"kind":"article","topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MessageToByteHandler\/write(context:data:promise:)"],"title":"Instance Methods","generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/messagetobytehandler\/_channeloutboundhandler-implementations"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MessageToByteHandler\/_ChannelOutboundHandler-Implementations"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MessageToByteHandler"]]},"metadata":{"title":"_ChannelOutboundHandler Implementations","role":"collectionGroup","modules":[{"name":"NIOCore"}]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/MessageToByteHandler":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MessageToByteHandler","abstract":[{"text":"A handler which turns a given ","type":"text"},{"type":"codeVoice","code":"MessageToByteEncoder"},{"text":" into a ","type":"text"},{"type":"codeVoice","code":"ChannelOutboundHandler"},{"text":" that can then be added to a","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":".","type":"text"}],"type":"topic","title":"MessageToByteHandler","kind":"symbol","url":"\/documentation\/niocore\/messagetobytehandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MessageToByteHandler","kind":"identifier"}],"navigatorTitle":[{"text":"MessageToByteHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"kind":"symbol","url":"\/documentation\/niocore","title":"NIOCore","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/MessageToByteHandler/write(context:data:promise:)":{"abstract":[{"type":"text","text":"Called to request a write operation. The write operation will write the messages through the"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":". Those are then ready to be flushed to the actual "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" when"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel.flush"},{"type":"text","text":" or "},{"type":"codeVoice","code":"ChannelHandlerContext.flush"},{"type":"text","text":" is called."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MessageToByteHandler\/write(context:data:promise:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">?)"}],"url":"\/documentation\/niocore\/messagetobytehandler\/write(context:data:promise:)","kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Encoder"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"MessageToByteEncoder"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","title":"write(context:data:promise:)"}}}