{"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny\/init(_:)","interfaceLanguage":"swift"},"sections":[],"metadata":{"roleHeading":"Initializer","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"modules":[{"name":"NIOCore"}],"role":"symbol","externalID":"s:7NIOCore6NIOAnyVyACxclufc","symbolKind":"init","title":"init(_:)"},"abstract":[{"text":"Wrap a value in a ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":". In most cases you should not create a ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":" directly using this constructor.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The abstraction that accepts values of type "},{"code":"NIOAny","type":"codeVoice"},{"type":"text","text":" must also provide a mechanism to do the wrapping. An"},{"type":"text","text":" "},{"type":"text","text":"example is a "},{"code":"ChannelInboundHandler","type":"codeVoice"},{"type":"text","text":" which provides "},{"code":"self.wrapInboundOut(aValueOfTypeInboundOut)","type":"codeVoice"},{"type":"text","text":"."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"platforms":["Linux"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/niocore\/nioany\/init(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny"]]},"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"kind":"symbol","url":"\/documentation\/niocore","title":"NIOCore","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOAny":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOAny"}],"type":"topic","url":"\/documentation\/niocore\/nioany","navigatorTitle":[{"kind":"identifier","text":"NIOAny"}],"abstract":[{"code":"NIOAny","type":"codeVoice"},{"type":"text","text":" is an opaque container for values of "},{"inlineContent":[{"text":"any","type":"text"}],"type":"emphasis"},{"type":"text","text":" type, similar to Swiftâ€™s builtin "},{"code":"Any","type":"codeVoice"},{"type":"text","text":" type. Contrary to"},{"type":"text","text":" "},{"type":"codeVoice","code":"Any"},{"type":"text","text":" the overhead of "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":" depends on the the type of the wrapped value. Certain types that are important"},{"type":"text","text":" "},{"type":"text","text":"for the performance of a SwiftNIO application like "},{"code":"ByteBuffer","type":"codeVoice"},{"text":", ","type":"text"},{"code":"FileRegion","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"AddressEnvelope<ByteBuffer>","type":"codeVoice"},{"text":" can be expected","type":"text"},{"text":" ","type":"text"},{"text":"to be wrapped almost without overhead. All others will have similar performance as if they were passed as an ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" as","type":"text"},{"text":" ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":" just like ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" will contain them within an existential container.","type":"text"}],"title":"NIOAny","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOAny/init(_:)":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny\/init(_:)","url":"\/documentation\/niocore\/nioany\/init(_:)","abstract":[{"type":"text","text":"Wrap a value in a "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":". In most cases you should not create a "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":" directly using this constructor."},{"type":"text","text":" "},{"type":"text","text":"The abstraction that accepts values of type "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":" must also provide a mechanism to do the wrapping. An"},{"text":" ","type":"text"},{"text":"example is a ","type":"text"},{"code":"ChannelInboundHandler","type":"codeVoice"},{"text":" which provides ","type":"text"},{"code":"self.wrapInboundOut(aValueOfTypeInboundOut)","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","kind":"symbol","title":"init(_:)"}}}