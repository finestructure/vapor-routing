{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeAll","kind":"identifier"},{"text":"(","kind":"text"},{"text":"keepingCapacity","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":" = false)","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/removeAll(keepingCapacity:)-3kxvf"},"variants":[{"paths":["\/documentation\/niocore\/circularbuffer\/removeall(keepingcapacity:)-3kxvf"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","metadata":{"modules":[{"name":"NIOCore"}],"symbolKind":"method","title":"removeAll(keepingCapacity:)","extendedModule":"NIOCore","role":"symbol","externalID":"s:7NIOCore14CircularBufferV9removeAll15keepingCapacityySb_tF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeAll"},{"kind":"text","text":"("},{"kind":"externalParam","text":"keepingCapacity"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")","kind":"text"}],"roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/RangeReplaceableCollection-Implementations"]]},"sections":[],"abstract":[{"type":"text","text":"Removes all members from the circular buffer whist keeping the capacity."}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer/removeAll(keepingCapacity:)-3kxvf":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/removeAll(keepingCapacity:)-3kxvf","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeAll"},{"kind":"text","text":"("},{"kind":"externalParam","text":"keepingCapacity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"kind":"symbol","url":"\/documentation\/niocore\/circularbuffer\/removeall(keepingcapacity:)-3kxvf","title":"removeAll(keepingCapacity:)","role":"symbol","abstract":[{"type":"text","text":"Removes all members from the circular buffer whist keeping the capacity."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"kind":"symbol","url":"\/documentation\/niocore","title":"NIOCore","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer/RangeReplaceableCollection-Implementations":{"abstract":[],"role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/RangeReplaceableCollection-Implementations","kind":"article","type":"topic","url":"\/documentation\/niocore\/circularbuffer\/rangereplaceablecollection-implementations","title":"RangeReplaceableCollection Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CircularBuffer"}],"type":"topic","abstract":[{"type":"text","text":"An automatically expanding ring buffer implementation backed by a "},{"code":"ContiguousArray","type":"codeVoice"},{"type":"text","text":". Even though this implementation"},{"type":"text","text":" "},{"type":"text","text":"will automatically expand if more elements than "},{"code":"initialCapacity","type":"codeVoice"},{"type":"text","text":" are stored, itâ€™s advantageous to prevent"},{"type":"text","text":" "},{"type":"text","text":"expansions from happening frequently. Expansions will always force an allocation and a copy to happen."}],"url":"\/documentation\/niocore\/circularbuffer","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer","title":"CircularBuffer","navigatorTitle":[{"kind":"identifier","text":"CircularBuffer"}],"role":"symbol"}}}