{"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Triggers an IdleStateEvent when a Channel has not performed read, write, or both operation for a while."}],"metadata":{"symbolKind":"class","roleHeading":"Class","title":"IdleStateHandler","modules":[{"name":"NIOCore"}],"externalID":"s:7NIOCore16IdleStateHandlerC","navigatorTitle":[{"kind":"identifier","text":"IdleStateHandler"}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"IdleStateHandler"}]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/init(readTimeout:writeTimeout:allTimeout:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/allTimeout","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/readTimeout","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/writeTimeout"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/channelActive(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/channelRead(context:data:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/channelReadComplete(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/handlerAdded(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/handlerRemoved(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/write(context:data:promise:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/InboundOut","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/OutboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/OutboundOut"]},{"title":"Enumerations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/IdleStateEvent"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/ChannelOutboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/RemovableChannelHandler-Implementations"]}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler"],"kind":"relationships","type":"conformsTo"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IdleStateHandler","kind":"identifier"}],"languages":["swift"]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler"},"variants":[{"paths":["\/documentation\/niocore\/idlestatehandler"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore"]]},"kind":"symbol","sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"IdleStateHandler"}],"type":"topic","abstract":[{"type":"text","text":"Triggers an IdleStateEvent when a Channel has not performed read, write, or both operation for a while."}],"url":"\/documentation\/niocore\/idlestatehandler","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler","title":"IdleStateHandler","navigatorTitle":[{"kind":"identifier","text":"IdleStateHandler"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/allTimeout":{"kind":"symbol","role":"symbol","type":"topic","abstract":[],"title":"allTimeout","url":"\/documentation\/niocore\/idlestatehandler\/alltimeout","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/allTimeout","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"allTimeout","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10TimeAmountV","text":"TimeAmount","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/handlerAdded(context:)":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/handlerAdded(context:)","abstract":[{"text":"Called when this ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" is added to the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handlerAdded","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":")","kind":"text"}],"type":"topic","title":"handlerAdded(context:)","role":"symbol","url":"\/documentation\/niocore\/idlestatehandler\/handleradded(context:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/InboundOut":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/InboundOut","abstract":[{"type":"text","text":"The type of the inbound data which will be forwarded to the next "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"InboundOut"}],"role":"symbol","type":"topic","url":"\/documentation\/niocore\/idlestatehandler\/inboundout","title":"IdleStateHandler.InboundOut","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundOut"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"navigatorTitle":[{"text":"ChannelOutboundHandler","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ChannelOutboundHandler","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","type":"topic","title":"ChannelOutboundHandler","role":"symbol","kind":"symbol","abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"url":"\/documentation\/niocore\/channeloutboundhandler"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/readTimeout":{"role":"symbol","abstract":[],"kind":"symbol","title":"readTimeout","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/readTimeout","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"readTimeout","kind":"identifier"},{"text":": ","kind":"text"},{"text":"TimeAmount","preciseIdentifier":"s:7NIOCore10TimeAmountV","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/niocore\/idlestatehandler\/readtimeout","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/channelRead(context:data:)":{"abstract":[{"text":"Called when some data has been read from the remote peer.","type":"text"}],"title":"channelRead(context:data:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/channelRead(context:data:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelRead","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny","kind":"typeIdentifier"},{"kind":"text","text":")"}],"role":"symbol","kind":"symbol","url":"\/documentation\/niocore\/idlestatehandler\/channelread(context:data:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"kind":"symbol","url":"\/documentation\/niocore","title":"NIOCore","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/InboundIn":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/InboundIn","abstract":[{"type":"text","text":"The type of the inbound data which is wrapped in "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"InboundIn"}],"role":"symbol","type":"topic","url":"\/documentation\/niocore\/idlestatehandler\/inboundin","title":"IdleStateHandler.InboundIn","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundIn"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/channelActive(context:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/channelActive(context:)","abstract":[{"type":"text","text":"Called when the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" has become active, and is able to send and receive data."}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/niocore\/idlestatehandler\/channelactive(context:)","title":"channelActive(context:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelActive"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":")"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/RemovableChannelHandler-Implementations":{"url":"\/documentation\/niocore\/idlestatehandler\/removablechannelhandler-implementations","title":"RemovableChannelHandler Implementations","abstract":[],"type":"topic","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/RemovableChannelHandler-Implementations","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelHandler","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","role":"symbol","abstract":[{"text":"You should ","type":"text"},{"inlineContent":[{"text":"never","type":"text"}],"type":"emphasis"},{"text":" implement this protocol directly. Please implement one of its sub-protocols.","type":"text"}],"title":"ChannelHandler","navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"url":"\/documentation\/niocore\/channelhandler"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/handlerRemoved(context:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handlerRemoved","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Called when this "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" is removed from the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/handlerRemoved(context:)","url":"\/documentation\/niocore\/idlestatehandler\/handlerremoved(context:)","type":"topic","title":"handlerRemoved(context:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/ChannelInboundHandler-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/ChannelInboundHandler-Implementations","abstract":[],"kind":"article","role":"collectionGroup","type":"topic","url":"\/documentation\/niocore\/idlestatehandler\/channelinboundhandler-implementations","title":"ChannelInboundHandler Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/RemovableChannelHandler":{"title":"RemovableChannelHandler","navigatorTitle":[{"kind":"identifier","text":"RemovableChannelHandler"}],"role":"symbol","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" that can be dynamically removed from a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" whilst"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is operating normally."},{"type":"text","text":" "},{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is required to remove itself from the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" (using"},{"type":"text","text":" "},{"code":"ChannelHandlerContext.removeHandler","type":"codeVoice"},{"type":"text","text":") as soon as possible."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemovableChannelHandler"}],"url":"\/documentation\/niocore\/removablechannelhandler"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/init(readTimeout:writeTimeout:allTimeout:)":{"url":"\/documentation\/niocore\/idlestatehandler\/init(readtimeout:writetimeout:alltimeout:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/init(readTimeout:writeTimeout:allTimeout:)","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"readTimeout"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore10TimeAmountV","kind":"typeIdentifier","text":"TimeAmount"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"writeTimeout"},{"text":": ","kind":"text"},{"text":"TimeAmount","preciseIdentifier":"s:7NIOCore10TimeAmountV","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"allTimeout","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TimeAmount","preciseIdentifier":"s:7NIOCore10TimeAmountV","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"role":"symbol","abstract":[],"title":"init(readTimeout:writeTimeout:allTimeout:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/ChannelOutboundHandler-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/ChannelOutboundHandler-Implementations","abstract":[],"kind":"article","role":"collectionGroup","type":"topic","url":"\/documentation\/niocore\/idlestatehandler\/channeloutboundhandler-implementations","title":"ChannelOutboundHandler Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/OutboundOut":{"role":"symbol","url":"\/documentation\/niocore\/idlestatehandler\/outboundout","abstract":[{"text":"The type of the outbound data which will be forwarded to the next ","type":"text"},{"code":"ChannelOutboundHandler","type":"codeVoice"},{"type":"text","text":" in the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","type":"topic","title":"IdleStateHandler.OutboundOut","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/OutboundOut","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutboundOut"}],"navigatorTitle":[{"kind":"identifier","text":"OutboundOut"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/channelReadComplete(context:)":{"role":"symbol","url":"\/documentation\/niocore\/idlestatehandler\/channelreadcomplete(context:)","abstract":[{"text":"Called when the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" has completed its current read loop, either because no more data is available to read from the transport at this time, or because the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" needs to yield to the event loop to process other I\/O events for other "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"s."},{"type":"text","text":" "},{"type":"text","text":"If "},{"code":"ChannelOptions.autoRead","type":"codeVoice"},{"type":"text","text":" is "},{"code":"false","type":"codeVoice"},{"type":"text","text":" no further read attempt will be made until "},{"code":"ChannelHandlerContext.read","type":"codeVoice"},{"type":"text","text":" or "},{"code":"Channel.read","type":"codeVoice"},{"type":"text","text":" is explicitly called."}],"kind":"symbol","type":"topic","title":"channelReadComplete(context:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/channelReadComplete(context:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelReadComplete"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":")"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/IdleStateEvent":{"abstract":[{"text":"A user event triggered by IdleStateHandler when a Channel is idle.","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IdleStateEvent","kind":"identifier"}],"title":"IdleStateHandler.IdleStateEvent","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/IdleStateEvent","navigatorTitle":[{"text":"IdleStateEvent","kind":"identifier"}],"url":"\/documentation\/niocore\/idlestatehandler\/idlestateevent","type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/OutboundIn":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/OutboundIn","type":"topic","role":"symbol","abstract":[{"type":"text","text":"The type of the outbound data which is wrapped in "},{"code":"NIOAny","type":"codeVoice"},{"text":".","type":"text"}],"title":"IdleStateHandler.OutboundIn","url":"\/documentation\/niocore\/idlestatehandler\/outboundin","navigatorTitle":[{"kind":"identifier","text":"OutboundIn"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutboundIn"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/write(context:data:promise:)":{"abstract":[{"text":"Called to request a write operation. The write operation will write the messages through the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":". Those are then ready to be flushed to the actual "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" when"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel.flush"},{"type":"text","text":" or "},{"type":"codeVoice","code":"ChannelHandlerContext.flush"},{"type":"text","text":" is called."}],"role":"symbol","type":"topic","title":"write(context:data:promise:)","kind":"symbol","url":"\/documentation\/niocore\/idlestatehandler\/write(context:data:promise:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/write(context:data:promise:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelInboundHandler","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","role":"symbol","abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"text":" which handles inbound I\/O events for a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}],"title":"ChannelInboundHandler","navigatorTitle":[{"text":"ChannelInboundHandler","kind":"identifier"}],"url":"\/documentation\/niocore\/channelinboundhandler"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/writeTimeout":{"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeTimeout"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore10TimeAmountV","kind":"typeIdentifier","text":"TimeAmount"},{"kind":"text","text":"?"}],"type":"topic","abstract":[],"url":"\/documentation\/niocore\/idlestatehandler\/writetimeout","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/writeTimeout","title":"writeTimeout","role":"symbol"}}}