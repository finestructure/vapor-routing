{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore"]]},"metadata":{"symbolKind":"class","roleHeading":"Class","modules":[{"name":"NIOCore"}],"role":"symbol","navigatorTitle":[{"text":"ByteToMessageHandler","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteToMessageHandler","kind":"identifier"}],"title":"ByteToMessageHandler","externalID":"s:7NIOCore20ByteToMessageHandlerC"},"relationshipsSections":[{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler"],"title":"Conforms To"}],"sections":[],"kind":"symbol","abstract":[{"text":"A handler which turns a given ","type":"text"},{"type":"codeVoice","code":"ByteToMessageDecoder"},{"text":" into a ","type":"text"},{"type":"codeVoice","code":"ChannelInboundHandler"},{"text":" that can then be added to a","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":".","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler"},"variants":[{"paths":["\/documentation\/niocore\/bytetomessagehandler"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteToMessageHandler","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Decoder","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Decoder","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"ByteToMessageDecoder","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageDecoder","preciseIdentifier":"s:7NIOCore20ByteToMessageDecoderP","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Most importantly, ","type":"text"},{"code":"ByteToMessageHandler","type":"codeVoice"},{"text":" handles the tricky buffer management for you and flattens out all","type":"text"},{"text":" ","type":"text"},{"text":"re-entrancy on ","type":"text"},{"code":"channelRead","type":"codeVoice"},{"text":" that may happen in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}]}]}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/init(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/init(_:maximumBufferSize:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/InboundOut"],"title":"Type Aliases"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/ChannelOutboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/RemovableChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/_ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/_ChannelOutboundHandler-Implementations"],"title":"Default Implementations","generated":true}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageHandler/RemovableChannelHandler-Implementations":{"role":"collectionGroup","abstract":[],"url":"\/documentation\/niocore\/bytetomessagehandler\/removablechannelhandler-implementations","type":"topic","title":"RemovableChannelHandler Implementations","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/RemovableChannelHandler-Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelOutboundHandler","kind":"identifier"}],"navigatorTitle":[{"text":"ChannelOutboundHandler","kind":"identifier"}],"title":"ChannelOutboundHandler","type":"topic","kind":"symbol","abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Decoder"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"WriteObservingByteToMessageDecoder"},{"text":".","type":"text"}]},"url":"\/documentation\/niocore\/channeloutboundhandler","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelInboundHandler","kind":"identifier"}],"navigatorTitle":[{"text":"ChannelInboundHandler","kind":"identifier"}],"title":"ChannelInboundHandler","type":"topic","kind":"symbol","abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"text":" which handles inbound I\/O events for a ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Decoder"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ByteToMessageDecoder"},{"text":".","type":"text"}]},"url":"\/documentation\/niocore\/channelinboundhandler","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageHandler/init(_:maximumBufferSize:)":{"title":"init(_:maximumBufferSize:)","url":"\/documentation\/niocore\/bytetomessagehandler\/init(_:maximumbuffersize:)","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Decoder","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"maximumBufferSize","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/init(_:maximumBufferSize:)","abstract":[{"text":"Initialize a ","type":"text"},{"code":"ByteToMessageHandler","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageDecoder":{"navigatorTitle":[{"text":"ByteToMessageDecoder","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageDecoder","title":"ByteToMessageDecoder","abstract":[{"type":"codeVoice","code":"ByteToMessageDecoder"},{"type":"text","text":"s decode bytes in a stream-like fashion from "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" to another message type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ByteToMessageDecoder","kind":"identifier"}],"url":"\/documentation\/niocore\/bytetomessagedecoder"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageHandler/_ChannelOutboundHandler-Implementations":{"url":"\/documentation\/niocore\/bytetomessagehandler\/_channeloutboundhandler-implementations","title":"_ChannelOutboundHandler Implementations","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/_ChannelOutboundHandler-Implementations","abstract":[],"kind":"article","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/RemovableChannelHandler":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemovableChannelHandler"}],"navigatorTitle":[{"kind":"identifier","text":"RemovableChannelHandler"}],"title":"RemovableChannelHandler","type":"topic","kind":"symbol","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"RemovableChannelHandler"},{"text":" is a ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":" that can be dynamically removed from a ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" whilst"},{"type":"text","text":" "},{"type":"text","text":"the "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" is operating normally."},{"type":"text","text":" "},{"type":"text","text":"A "},{"code":"RemovableChannelHandler","type":"codeVoice"},{"type":"text","text":" is required to remove itself from the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" (using"},{"type":"text","text":" "},{"code":"ChannelHandlerContext.removeHandler","type":"codeVoice"},{"type":"text","text":") as soon as possible."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Decoder","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ByteToMessageDecoder","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/niocore\/removablechannelhandler","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageHandler/_ChannelInboundHandler-Implementations":{"role":"collectionGroup","type":"topic","kind":"article","url":"\/documentation\/niocore\/bytetomessagehandler\/_channelinboundhandler-implementations","title":"_ChannelInboundHandler Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/_ChannelInboundHandler-Implementations","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageHandler/InboundOut":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"InboundOut"}],"title":"ByteToMessageHandler.InboundOut","kind":"symbol","url":"\/documentation\/niocore\/bytetomessagehandler\/inboundout","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundOut"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/InboundOut","type":"topic","abstract":[{"text":"The type of the inbound data which will be forwarded to the next ","type":"text"},{"code":"ChannelInboundHandler","type":"codeVoice"},{"text":" in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"title":"ChannelHandler","type":"topic","kind":"symbol","abstract":[{"text":"You should ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"never","type":"text"}]},{"text":" implement this protocol directly. Please implement one of its sub-protocols.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Decoder","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"ByteToMessageDecoder","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/niocore\/channelhandler","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageHandler/ChannelOutboundHandler-Implementations":{"type":"topic","title":"ChannelOutboundHandler Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/ChannelOutboundHandler-Implementations","role":"collectionGroup","kind":"article","url":"\/documentation\/niocore\/bytetomessagehandler\/channeloutboundhandler-implementations","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageHandler/ChannelInboundHandler-Implementations":{"type":"topic","url":"\/documentation\/niocore\/bytetomessagehandler\/channelinboundhandler-implementations","abstract":[],"title":"ChannelInboundHandler Implementations","kind":"article","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/ChannelInboundHandler-Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageHandler":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteToMessageHandler","kind":"identifier"}],"type":"topic","url":"\/documentation\/niocore\/bytetomessagehandler","navigatorTitle":[{"text":"ByteToMessageHandler","kind":"identifier"}],"abstract":[{"type":"text","text":"A handler which turns a given "},{"code":"ByteToMessageDecoder","type":"codeVoice"},{"type":"text","text":" into a "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"text":" that can then be added to a","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":".","type":"text"}],"title":"ByteToMessageHandler","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"kind":"symbol","url":"\/documentation\/niocore","title":"NIOCore","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageHandler/ChannelHandler-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/ChannelHandler-Implementations","kind":"article","role":"collectionGroup","url":"\/documentation\/niocore\/bytetomessagehandler\/channelhandler-implementations","abstract":[],"type":"topic","title":"ChannelHandler Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageHandler/init(_:)":{"fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Decoder","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/init(_:)","title":"init(_:)","abstract":[],"kind":"symbol","url":"\/documentation\/niocore\/bytetomessagehandler\/init(_:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageHandler/InboundIn":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/InboundIn","role":"symbol","kind":"symbol","url":"\/documentation\/niocore\/bytetomessagehandler\/inboundin","navigatorTitle":[{"kind":"identifier","text":"InboundIn"}],"abstract":[{"type":"text","text":"The type of the inbound data which is wrapped in "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"title":"ByteToMessageHandler.InboundIn","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundIn"}]}}}