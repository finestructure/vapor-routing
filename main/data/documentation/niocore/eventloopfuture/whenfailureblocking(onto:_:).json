{"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"whenFailureBlocking","kind":"identifier"},{"text":"(","kind":"text"},{"text":"onto","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"queue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A5QueueC","text":"DispatchQueue"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"callbackMayBlock"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"the ","type":"text"},{"type":"codeVoice","code":"DispatchQueue"},{"text":" on which the blocking IO \/ task specified by ","type":"text"},{"type":"codeVoice","code":"callbackMayBlock"},{"text":" is scheduled.","type":"text"}],"type":"paragraph"}],"name":"onto"},{"content":[{"inlineContent":[{"type":"text","text":"The callback that is called with the failed result of the "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"callbackMayBlock"}],"kind":"parameters"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"An observer callback cannot return a value, meaning that this function cannot be chained"},{"type":"text","text":" "},{"type":"text","text":"from. If you are attempting to create a computation pipeline, consider "},{"code":"recover","type":"codeVoice"},{"type":"text","text":" or "},{"code":"flatMapError","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"If you find yourself passing the results from this "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" to a new "},{"code":"EventLoopPromise","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"in the body of this function, consider using "},{"code":"cascade","type":"codeVoice"},{"type":"text","text":" instead."}],"type":"paragraph"}],"kind":"content"}],"metadata":{"extendedModule":"NIOCore","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"whenFailureBlocking","kind":"identifier"},{"text":"(","kind":"text"},{"text":"onto","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"DispatchQueue","kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A5QueueC"},{"text":", (","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"symbolKind":"method","title":"whenFailureBlocking(onto:_:)","role":"symbol","modules":[{"name":"NIOCore"}],"roleHeading":"Instance Method","externalID":"s:7NIOCore15EventLoopFutureC19whenFailureBlocking4onto_y8Dispatch0I5QueueC_ys5Error_pctF"},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/niocore\/eventloopfuture\/whenfailureblocking(onto:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Adds an observer callback to this ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" that is called when the","type":"text"},{"text":" ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" has a failure result. The observer callback is permitted to block.","type":"text"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/whenFailureBlocking(onto:_:)","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"kind":"symbol","url":"\/documentation\/niocore","title":"NIOCore","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture/whenFailureBlocking(onto:_:)":{"type":"topic","kind":"symbol","url":"\/documentation\/niocore\/eventloopfuture\/whenfailureblocking(onto:_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/whenFailureBlocking(onto:_:)","role":"symbol","title":"whenFailureBlocking(onto:_:)","abstract":[{"type":"text","text":"Adds an observer callback to this "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that is called when the"},{"type":"text","text":" "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" has a failure result. The observer callback is permitted to block."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"whenFailureBlocking"},{"kind":"text","text":"("},{"kind":"externalParam","text":"onto"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A5QueueC","text":"DispatchQueue"},{"text":", (","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":")","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFuture","kind":"identifier"}],"navigatorTitle":[{"text":"EventLoopFuture","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopfuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"role":"symbol","title":"EventLoopFuture"}}}