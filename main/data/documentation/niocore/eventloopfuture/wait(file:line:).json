{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wait","kind":"identifier"},{"text":"(","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#file"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#line"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value"}],"platforms":["Linux"],"languages":["swift"]}]},{"content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"text":"The value of the ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" when it completes.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"If the "},{"type":"codeVoice","code":"EventLoopFuture"},{"text":" resolves with a value, that value is returned from ","type":"text"},{"type":"codeVoice","code":"wait()"},{"text":". If","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"type":"codeVoice","code":"EventLoopFuture"},{"text":" resolves with an error, that error will be thrown instead.","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"wait()"},{"text":" will block whatever thread it is called on, so it must not be called on event loop","type":"text"},{"text":" ","type":"text"},{"text":"threads: it is primarily useful for testing, or for building interfaces between blocking","type":"text"},{"text":" ","type":"text"},{"text":"and non-blocking code.","type":"text"}],"type":"paragraph"},{"content":[{"inlineContent":[{"text":"The error value of the ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" if it errors.","type":"text"}],"type":"paragraph"}],"name":"Throws","type":"aside","style":"note"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"]]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/wait(file:line:)","interfaceLanguage":"swift"},"abstract":[{"text":"Wait for the resolution of this ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" by blocking the current thread until it","type":"text"},{"text":" ","type":"text"},{"text":"resolves.","type":"text"}],"metadata":{"modules":[{"name":"NIOCore"}],"roleHeading":"Instance Method","role":"symbol","symbolKind":"method","title":"wait(file:line:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wait","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"extendedModule":"NIOCore","externalID":"s:7NIOCore15EventLoopFutureC4wait4file4linexs12StaticStringV_SutKF"},"sections":[],"variants":[{"paths":["\/documentation\/niocore\/eventloopfuture\/wait(file:line:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture/wait(file:line:)":{"kind":"symbol","title":"wait(file:line:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"wait"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/wait(file:line:)","type":"topic","abstract":[{"text":"Wait for the resolution of this ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" by blocking the current thread until it","type":"text"},{"text":" ","type":"text"},{"text":"resolves.","type":"text"}],"url":"\/documentation\/niocore\/eventloopfuture\/wait(file:line:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFuture","kind":"identifier"}],"navigatorTitle":[{"text":"EventLoopFuture","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopfuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"role":"symbol","title":"EventLoopFuture"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"kind":"symbol","url":"\/documentation\/niocore","title":"NIOCore","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[]}}}