{"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"roleHeading":"Instance Method","title":"any()","externalID":"s:7NIOCore14EventLoopGroupP3anyAA0bC0_pyF","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"any","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EventLoop","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP"}],"required":true,"modules":[{"name":"NIOCore"}],"symbolKind":"method"},"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup\/any()-2lpuq","interfaceLanguage":"swift"},"abstract":[{"text":"Returns any ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" from the ","type":"text"},{"code":"EventLoopGroup","type":"codeVoice"},{"text":", a common choice is the current ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"any","kind":"identifier"},{"text":"() -> ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"style":"warning","type":"aside","content":[{"inlineContent":[{"text":"You cannot rely on the returned ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":" being the current one, not all ","type":"text"},{"type":"codeVoice","code":"EventLoopGroup"},{"text":"s support","type":"text"},{"text":" ","type":"text"},{"text":"choosing the current one. Use this method only if you are truly happy with ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"any"}]},{"text":" ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":" of this","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"EventLoopGroup"},{"text":" instance.","type":"text"}],"type":"paragraph"}]},{"style":"note","type":"aside","content":[{"inlineContent":[{"text":"You will only receive the current ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":" here iff the current ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":" belongs to the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"EventLoopGroup"},{"text":" you call ","type":"text"},{"type":"codeVoice","code":"any()"},{"text":" on.","type":"text"}],"type":"paragraph"}]},{"type":"paragraph","inlineContent":[{"text":"This method is useful having access to an ","type":"text"},{"code":"EventLoopGroup","type":"codeVoice"},{"text":" without the knowledge of which ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" would be","type":"text"},{"text":" ","type":"text"},{"text":"the best one to select to create a new ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":". This commonly happens in libraries where the user","type":"text"},{"text":" ","type":"text"},{"text":"cannot indicate what ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":" they would like their futures on."}]},{"type":"paragraph","inlineContent":[{"text":"Typically, it is faster to kick off a new operation on the ","type":"text"},{"inlineContent":[{"text":"current","type":"text"}],"type":"emphasis"},{"text":" ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" because that minimised thread","type":"text"},{"text":" ","type":"text"},{"text":"switches. Hence, if situations where you don’t need precise knowledge of what ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" some code is running","type":"text"},{"text":" ","type":"text"},{"text":"on, use ","type":"text"},{"code":"any()","type":"codeVoice"},{"text":" to indicate this.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The rule of thumb is: If you are trying to do "},{"inlineContent":[{"type":"text","text":"load balancing"}],"type":"emphasis"},{"type":"text","text":", use "},{"type":"codeVoice","code":"next()"},{"type":"text","text":". If you just want to create a new"},{"type":"text","text":" "},{"type":"text","text":"future or kick off some operation, use "},{"type":"codeVoice","code":"any()"},{"type":"text","text":"."}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/niocore\/eventloopgroup\/any()-2lpuq"],"traits":[{"interfaceLanguage":"swift"}]}],"defaultImplementationsSections":[{"title":"EventLoop Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/any()"]},{"title":"EventLoopGroup Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup\/any()-7m1zy"]}],"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/any()":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"any","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier"}],"type":"topic","role":"symbol","title":"any()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/any()","abstract":[{"text":"An ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" forms a singular ","type":"text"},{"code":"EventLoopGroup","type":"codeVoice"},{"text":", returning itself as ‘any’ ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/niocore\/eventloop\/any()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopGroup/any()-7m1zy":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"any","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier"}],"type":"topic","role":"symbol","title":"any()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup\/any()-7m1zy","abstract":[{"text":"The default implementation of ","type":"text"},{"code":"any()","type":"codeVoice"},{"text":" just returns the ","type":"text"},{"code":"next()","type":"codeVoice"},{"text":" EventLoop but it’s highly recommended to","type":"text"},{"text":" ","type":"text"},{"text":"override this and return the current ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" if possible.","type":"text"}],"url":"\/documentation\/niocore\/eventloopgroup\/any()-7m1zy"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopGroup":{"abstract":[{"type":"text","text":"Provides an endless stream of "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":"s to use."}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopgroup","navigatorTitle":[{"kind":"identifier","text":"EventLoopGroup"}],"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup","title":"EventLoopGroup","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroup"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopGroup/any()-2lpuq":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup\/any()-2lpuq","defaultImplementations":2,"required":true,"type":"topic","abstract":[{"text":"Returns any ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":" from the ","type":"text"},{"type":"codeVoice","code":"EventLoopGroup"},{"text":", a common choice is the current ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":".","type":"text"}],"url":"\/documentation\/niocore\/eventloopgroup\/any()-2lpuq","kind":"symbol","role":"symbol","title":"any()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"any","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"kind":"symbol","url":"\/documentation\/niocore","title":"NIOCore","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop":{"abstract":[{"text":"An EventLoop processes IO \/ tasks in an endless loop for ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":"s until it’s closed.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","url":"\/documentation\/niocore\/eventloop","title":"EventLoop"}}}