{"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup"]]},"abstract":[{"type":"text","text":"Returns the next "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" to use, this is useful for load balancing."}],"metadata":{"externalID":"s:7NIOCore14EventLoopGroupP4nextAA0bC0_pyF","title":"next()","modules":[{"name":"NIOCore"}],"role":"symbol","required":true,"symbolKind":"method","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"next","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop","kind":"typeIdentifier"}]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"next","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","kind":"typeIdentifier"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"The algorithm that is used to select the next ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" is specific to each ","type":"text"},{"code":"EventLoopGroup","type":"codeVoice"},{"text":". A common choice","type":"text"},{"text":" ","type":"text"},{"text":"is ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"round robin","type":"text"}]},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Please note that you should only be using ","type":"text"},{"type":"codeVoice","code":"next()"},{"text":" if you want to load balance over all ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":"s of the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"EventLoopGroup"},{"text":". If the actual ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":" does not matter much, ","type":"text"},{"type":"codeVoice","code":"any()"},{"text":" should be preferred because it can","type":"text"},{"text":" ","type":"text"},{"text":"try to return you the ","type":"text"},{"inlineContent":[{"text":"current","type":"text"}],"type":"emphasis"},{"text":" ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":" which usually is faster because the number of thread switches can","type":"text"},{"text":" ","type":"text"},{"text":"be reduced.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The rule of thumb is: If you are trying to do ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"load balancing"}]},{"text":", use ","type":"text"},{"type":"codeVoice","code":"next()"},{"text":". If you just want to create a new","type":"text"},{"text":" ","type":"text"},{"text":"future or kick off some operation, use ","type":"text"},{"type":"codeVoice","code":"any()"},{"text":".","type":"text"}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup\/next()"},"defaultImplementationsSections":[{"title":"EventLoop Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/next()"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/eventloopgroup\/next()"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"kind":"symbol","url":"\/documentation\/niocore","title":"NIOCore","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopGroup/next()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup\/next()","defaultImplementations":1,"required":true,"type":"topic","abstract":[{"text":"Returns the next ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":" to use, this is useful for load balancing.","type":"text"}],"url":"\/documentation\/niocore\/eventloopgroup\/next()","kind":"symbol","role":"symbol","title":"next()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"next","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/next()":{"abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" forms a singular "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":", returning itself as the ‘next’ "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"."}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/next()","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"next","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EventLoop","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP"}],"title":"next()","url":"\/documentation\/niocore\/eventloop\/next()","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopGroup":{"abstract":[{"type":"text","text":"Provides an endless stream of "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":"s to use."}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopgroup","navigatorTitle":[{"kind":"identifier","text":"EventLoopGroup"}],"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup","title":"EventLoopGroup","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroup"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop":{"abstract":[{"text":"An EventLoop processes IO \/ tasks in an endless loop for ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":"s until it’s closed.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","url":"\/documentation\/niocore\/eventloop","title":"EventLoop"}}}