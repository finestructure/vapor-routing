{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup"]]},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"tryFuture","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"externalID":"s:7NIOCore14EventLoopGroupP8AsyncKitE9tryFutureyAA0bcH0Cyqd__Gqd__yKclF","symbolKind":"method","modules":[{"name":"NIOCore"}],"roleHeading":"Instance Method","title":"tryFuture(_:)","extendedModule":"NIOCore","role":"symbol"},"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/eventloopgroup\/tryfuture(_:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"tryFuture","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"work","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The potentially throwing closure to execute as a"},{"type":"text","text":" "},{"type":"text","text":"future. If the closure throws, a failed future is returned."}],"type":"paragraph"}],"name":"work"}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This method replaces this code:"}],"type":"paragraph"},{"type":"codeListing","code":["return something.eventLoop.future().flatMapThrowing {"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"With this code:"}],"type":"paragraph"},{"type":"codeListing","code":["return something.eventLoop.tryFuture {"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"That’s pretty much it. It’s sugar."}],"type":"paragraph"}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup\/tryFuture(_:)"},"abstract":[{"text":"An alternate name for this would be ","type":"text"},{"type":"codeVoice","code":"future(catching:)"},{"text":", but with that","type":"text"},{"text":" ","type":"text"},{"text":"name, trailing closure syntax just looks like ","type":"text"},{"type":"codeVoice","code":"el.future { ... }"},{"text":", which","type":"text"},{"text":" ","type":"text"},{"text":"does not indicate to readers of the code that it is the error-capturing","type":"text"},{"text":" ","type":"text"},{"text":"version. Since such an indication is highly desirable, a slightly less","type":"text"},{"text":" ","type":"text"},{"text":"idiomatic name is used instead.","type":"text"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopGroup/tryFuture(_:)":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"tryFuture"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"url":"\/documentation\/niocore\/eventloopgroup\/tryfuture(_:)","title":"tryFuture(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup\/tryFuture(_:)","abstract":[{"text":"An alternate name for this would be ","type":"text"},{"code":"future(catching:)","type":"codeVoice"},{"text":", but with that","type":"text"},{"text":" ","type":"text"},{"text":"name, trailing closure syntax just looks like ","type":"text"},{"code":"el.future { ... }","type":"codeVoice"},{"text":", which","type":"text"},{"text":" ","type":"text"},{"text":"does not indicate to readers of the code that it is the error-capturing","type":"text"},{"text":" ","type":"text"},{"text":"version. Since such an indication is highly desirable, a slightly less","type":"text"},{"text":" ","type":"text"},{"text":"idiomatic name is used instead.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"kind":"symbol","url":"\/documentation\/niocore","title":"NIOCore","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopGroup":{"abstract":[{"type":"text","text":"Provides an endless stream of "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":"s to use."}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopgroup","navigatorTitle":[{"kind":"identifier","text":"EventLoopGroup"}],"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup","title":"EventLoopGroup","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroup"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFuture","kind":"identifier"}],"navigatorTitle":[{"text":"EventLoopFuture","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopfuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"role":"symbol","title":"EventLoopFuture"}}}