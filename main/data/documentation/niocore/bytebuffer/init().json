{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/bytebuffer\/init()"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"extendedModule":"NIOCore","role":"symbol","symbolKind":"init","title":"init()","modules":[{"name":"NIOCore"}],"externalID":"s:7NIOCore10ByteBufferVACycfc","roleHeading":"Initializer","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"()"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"Calling this constructor will not allocate because it will return a "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" that wraps a shared storage"},{"type":"text","text":" "},{"type":"text","text":"object. As soon as you write to the constructed buffer however, you will incur an allocation because a"},{"type":"text","text":" "},{"type":"text","text":"copy-on-write will happen."}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"info: If you have access to a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":", ","type":"text"},{"code":"ChannelHandlerContext","type":"codeVoice"},{"text":", or ","type":"text"},{"code":"ByteBufferAllocator","type":"codeVoice"},{"text":" it is","type":"text"},{"text":" ","type":"text"},{"text":"recommended using ","type":"text"},{"code":"channel.allocator.buffer(capacity: 0)","type":"codeVoice"},{"text":". This allows SwiftNIO to do","type":"text"},{"text":" ","type":"text"},{"text":"accounting and optimisations of resources acquired for operations on a given ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" in the future.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/init()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Return an empty "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" allocated with "},{"type":"codeVoice","code":"ByteBufferAllocator()"},{"text":".","type":"text"}],"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"kind":"symbol","url":"\/documentation\/niocore","title":"NIOCore","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","url":"\/documentation\/niocore\/bytebuffer","title":"ByteBuffer"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer/init()":{"kind":"symbol","url":"\/documentation\/niocore\/bytebuffer\/init()","type":"topic","role":"symbol","title":"init()","abstract":[{"text":"Return an empty ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" allocated with ","type":"text"},{"code":"ByteBufferAllocator()","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}]}}}