{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/init(staticString:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"]]},"abstract":[{"text":"Create a fresh ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" containing the bytes of the ","type":"text"},{"type":"codeVoice","code":"string"},{"text":" encoded as UTF-8.","type":"text"}],"variants":[{"paths":["\/documentation\/niocore\/bytebuffer\/init(staticstring:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"extendedModule":"NIOCore","role":"symbol","externalID":"s:7NIOCore10ByteBufferV12staticStringACs06StaticE0V_tcfc","modules":[{"name":"NIOCore"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"staticString"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":")"}],"symbolKind":"init","title":"init(staticString:)","roleHeading":"Initializer"},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"staticString"},{"kind":"text","text":" "},{"kind":"internalParam","text":"string"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":")"}]}],"kind":"declarations"},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"This will allocate a new ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" with enough space to fit ","type":"text"},{"type":"codeVoice","code":"string"},{"text":" and potentially some extra space using","type":"text"},{"text":" ","type":"text"},{"text":"the default allocator.","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"info: If you have access to a ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":", ","type":"text"},{"type":"codeVoice","code":"ChannelHandlerContext"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"ByteBufferAllocator"},{"text":" we","type":"text"},{"text":" ","type":"text"},{"text":"recommend using ","type":"text"},{"type":"codeVoice","code":"channel.allocator.buffer(staticString:)"},{"text":". Or if you want to write multiple items into","type":"text"},{"text":" ","type":"text"},{"text":"the buffer use ","type":"text"},{"type":"codeVoice","code":"channel.allocator.buffer(capacity: ...)"},{"text":" to allocate a ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" of the right","type":"text"},{"text":" ","type":"text"},{"text":"size followed by a ","type":"text"},{"type":"codeVoice","code":"writeStaticString"},{"text":" instead of using this method. This allows SwiftNIO to do","type":"text"},{"text":" ","type":"text"},{"text":"accounting and optimisations of resources acquired for operations on a given ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" in the future.","type":"text"}]}]}]}],"kind":"content"}],"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer/init(staticString:)":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"staticString","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/init(staticString:)","title":"init(staticString:)","type":"topic","kind":"symbol","abstract":[{"text":"Create a fresh ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" containing the bytes of the ","type":"text"},{"code":"string","type":"codeVoice"},{"text":" encoded as UTF-8.","type":"text"}],"url":"\/documentation\/niocore\/bytebuffer\/init(staticstring:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","url":"\/documentation\/niocore\/bytebuffer","title":"ByteBuffer"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"kind":"symbol","url":"\/documentation\/niocore","title":"NIOCore","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[]}}}