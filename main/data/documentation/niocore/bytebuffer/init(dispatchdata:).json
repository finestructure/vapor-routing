{"kind":"symbol","abstract":[{"type":"text","text":"Create a fresh "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" containing the bytes contained in the given "},{"code":"DispatchData","type":"codeVoice"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/init(dispatchData:)"},"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"dispatchData","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"DispatchData","kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A4DataV"},{"text":")","kind":"text"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"inlineContent":[{"type":"text","text":"This will allocate a new "},{"type":"codeVoice","code":"ByteBuffer"},{"text":" with enough space to fit the bytes of the ","type":"text"},{"type":"codeVoice","code":"DispatchData"},{"text":" and potentially","type":"text"},{"text":" ","type":"text"},{"text":"some extra space using the default allocator.","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"info: If you have access to a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":", ","type":"text"},{"code":"ChannelHandlerContext","type":"codeVoice"},{"text":", or ","type":"text"},{"code":"ByteBufferAllocator","type":"codeVoice"},{"text":" we","type":"text"},{"text":" ","type":"text"},{"text":"recommend using ","type":"text"},{"code":"channel.allocator.buffer(dispatchData:)","type":"codeVoice"},{"text":". Or if you want to write multiple items into","type":"text"},{"text":" ","type":"text"},{"text":"the buffer use ","type":"text"},{"code":"channel.allocator.buffer(capacity: ...)","type":"codeVoice"},{"text":" to allocate a ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" of the right","type":"text"},{"text":" ","type":"text"},{"text":"size followed by a ","type":"text"},{"code":"writeDispatchData","type":"codeVoice"},{"text":" instead of using this method. This allows SwiftNIO to do","type":"text"},{"text":" ","type":"text"},{"text":"accounting and optimisations of resources acquired for operations on a given ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" in the future.","type":"text"}],"type":"paragraph"}]}]}],"kind":"content"}],"metadata":{"role":"symbol","title":"init(dispatchData:)","externalID":"s:7NIOCore10ByteBufferV12dispatchDataAC8Dispatch0fE0V_tcfc","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"dispatchData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchData","preciseIdentifier":"s:8Dispatch0A4DataV"},{"kind":"text","text":")"}],"modules":[{"name":"NIOCore"}],"extendedModule":"NIOCore","roleHeading":"Initializer","symbolKind":"init"},"variants":[{"paths":["\/documentation\/niocore\/bytebuffer\/init(dispatchdata:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer/init(dispatchData:)":{"title":"init(dispatchData:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"dispatchData","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"DispatchData","preciseIdentifier":"s:8Dispatch0A4DataV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/init(dispatchData:)","abstract":[{"text":"Create a fresh ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" containing the bytes contained in the given ","type":"text"},{"type":"codeVoice","code":"DispatchData"},{"text":".","type":"text"}],"url":"\/documentation\/niocore\/bytebuffer\/init(dispatchdata:)","type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","url":"\/documentation\/niocore\/bytebuffer","title":"ByteBuffer"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"kind":"symbol","url":"\/documentation\/niocore","title":"NIOCore","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[]}}}