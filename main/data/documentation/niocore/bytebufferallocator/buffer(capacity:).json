{"abstract":[{"text":"Request a freshly allocated ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" of size ","type":"text"},{"code":"capacity","type":"codeVoice"},{"text":" or larger.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBufferAllocator"]]},"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBufferAllocator\/buffer(capacity:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buffer"},{"kind":"text","text":"("},{"kind":"externalParam","text":"capacity"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"text":"ByteBuffer","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV"}],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The initial capacity of the returned "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"capacity"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The passed "},{"type":"codeVoice","code":"capacity"},{"type":"text","text":" is the "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":"’s initial capacity, it will grow automatically if necessary."}]}],"type":"aside","style":"note"},{"content":[{"inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"capacity"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"0"},{"text":", this function will not allocate. If you want to trigger an allocation immediately,","type":"text"},{"text":" ","type":"text"},{"text":"also call ","type":"text"},{"type":"codeVoice","code":".clear()"},{"text":".","type":"text"}],"type":"paragraph"}],"type":"aside","style":"note"}]}],"metadata":{"externalID":"s:7NIOCore19ByteBufferAllocatorV6buffer8capacityAA0bC0VSi_tF","roleHeading":"Instance Method","role":"symbol","title":"buffer(capacity:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buffer"},{"kind":"text","text":"("},{"kind":"externalParam","text":"capacity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV"}],"modules":[{"name":"NIOCore"}],"symbolKind":"method"},"variants":[{"paths":["\/documentation\/niocore\/bytebufferallocator\/buffer(capacity:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBufferAllocator":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ByteBufferAllocator"}],"url":"\/documentation\/niocore\/bytebufferallocator","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBufferAllocator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBufferAllocator"}],"role":"symbol","type":"topic","title":"ByteBufferAllocator","abstract":[{"text":"The preferred allocator for ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" values. The allocation strategy is opaque but is currently libc’s","type":"text"},{"text":" ","type":"text"},{"code":"malloc","type":"codeVoice"},{"type":"text","text":", "},{"code":"realloc","type":"codeVoice"},{"type":"text","text":" and "},{"code":"free","type":"codeVoice"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"kind":"symbol","url":"\/documentation\/niocore","title":"NIOCore","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBufferAllocator/buffer(capacity:)":{"url":"\/documentation\/niocore\/bytebufferallocator\/buffer(capacity:)","title":"buffer(capacity:)","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBufferAllocator\/buffer(capacity:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buffer"},{"kind":"text","text":"("},{"kind":"externalParam","text":"capacity"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"}],"role":"symbol","abstract":[{"text":"Request a freshly allocated ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" of size ","type":"text"},{"code":"capacity","type":"codeVoice"},{"text":" or larger.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","url":"\/documentation\/niocore\/bytebuffer","title":"ByteBuffer"}}}