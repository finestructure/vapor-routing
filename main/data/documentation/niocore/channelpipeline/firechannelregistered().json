{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelRegistered()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Called once a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" was registered to its "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" and so IO will be processed."}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"externalID":"s:7NIOCore15ChannelPipelineC04fireB10RegisteredyyF","roleHeading":"Instance Method","modules":[{"name":"NIOCore"}],"role":"symbol","title":"fireChannelRegistered()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelRegistered","kind":"identifier"},{"text":"()","kind":"text"}],"symbolKind":"method"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelRegistered"},{"kind":"text","text":"()"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/channelpipeline\/firechannelregistered()"]}],"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","url":"\/documentation\/niocore\/channelpipeline","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelPipeline"}],"title":"ChannelPipeline","abstract":[{"text":"A list of ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":"s that handle or intercept inbound events and outbound operations of a","type":"text"},{"text":" ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":". ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" implements an advanced form of the Intercepting Filter pattern","type":"text"},{"text":" ","type":"text"},{"text":"to give a user full control over how an event is handled and how the ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":"s in a pipeline","type":"text"},{"text":" ","type":"text"},{"text":"interact with each other.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelPipeline"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"kind":"symbol","url":"\/documentation\/niocore","title":"NIOCore","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/fireChannelRegistered()":{"type":"topic","title":"fireChannelRegistered()","abstract":[{"type":"text","text":"Called once a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" was registered to its "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" and so IO will be processed."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelRegistered"},{"kind":"text","text":"()"}],"kind":"symbol","url":"\/documentation\/niocore\/channelpipeline\/firechannelregistered()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelRegistered()","role":"symbol"}}}