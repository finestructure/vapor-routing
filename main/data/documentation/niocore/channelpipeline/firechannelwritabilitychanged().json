{"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/channelpipeline\/firechannelwritabilitychanged()"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelWritabilityChanged()"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelWritabilityChanged"},{"kind":"text","text":"()"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"The writability state of a Channel depends on watermarks that can be set via ","type":"text"},{"code":"Channel.setOption","type":"codeVoice"},{"text":" and how much data","type":"text"},{"text":" ","type":"text"},{"text":"is still waiting to be transferred to the remote peer.","type":"text"},{"text":" ","type":"text"},{"text":"You should take care to enforce some kind of backpressure if the channel becomes unwritable which means ","type":"text"},{"code":"Channel.isWritable","type":"codeVoice"},{"text":" ","type":"text"},{"text":"will return ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" to ensure you do not consume too much memory due to queued writes. What exactly you should do here depends on the","type":"text"},{"text":" ","type":"text"},{"text":"protocol and other semantics. But for example you may want to stop writing to the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" until ","type":"text"},{"code":"Channel.writable","type":"codeVoice"},{"text":" becomes","type":"text"},{"text":" ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" again or stop reading at all.","type":"text"}]}],"kind":"content"}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"symbolKind":"method","title":"fireChannelWritabilityChanged()","role":"symbol","externalID":"s:7NIOCore15ChannelPipelineC04fireB18WritabilityChangedyyF","modules":[{"name":"NIOCore"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelWritabilityChanged"},{"kind":"text","text":"()"}],"roleHeading":"Instance Method"},"abstract":[{"text":"Called when a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"’s writable state changes.","type":"text"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","url":"\/documentation\/niocore\/channelpipeline","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelPipeline"}],"title":"ChannelPipeline","abstract":[{"text":"A list of ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":"s that handle or intercept inbound events and outbound operations of a","type":"text"},{"text":" ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":". ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" implements an advanced form of the Intercepting Filter pattern","type":"text"},{"text":" ","type":"text"},{"text":"to give a user full control over how an event is handled and how the ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":"s in a pipeline","type":"text"},{"text":" ","type":"text"},{"text":"interact with each other.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelPipeline"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/fireChannelWritabilityChanged()":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelWritabilityChanged","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelWritabilityChanged()","url":"\/documentation\/niocore\/channelpipeline\/firechannelwritabilitychanged()","title":"fireChannelWritabilityChanged()","kind":"symbol","role":"symbol","abstract":[{"text":"Called when a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"’s writable state changes.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"kind":"symbol","url":"\/documentation\/niocore","title":"NIOCore","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[]}}}