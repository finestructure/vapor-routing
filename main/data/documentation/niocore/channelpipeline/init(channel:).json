{"metadata":{"role":"symbol","symbolKind":"init","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"channel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP"},{"kind":"text","text":")"}],"externalID":"s:7NIOCore15ChannelPipelineC7channelAcA0B0_p_tcfc","title":"init(channel:)","roleHeading":"Initializer","modules":[{"name":"NIOCore"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline"]]},"abstract":[{"type":"text","text":"Create "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" for a given "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":". This method should never be called by the end-user"},{"type":"text","text":" "},{"type":"text","text":"directly: it is only intended for use with custom "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" implementations. Users should always use"},{"type":"text","text":" "},{"code":"channel.pipeline","type":"codeVoice"},{"type":"text","text":" to access the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" for a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","variants":[{"paths":["\/documentation\/niocore\/channelpipeline\/init(channel:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/init(channel:)","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"channel"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","text":"Channel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel"},{"kind":"text","text":")"}],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" this "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" is created for."}]}],"name":"channel"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","url":"\/documentation\/niocore\/channelpipeline","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelPipeline"}],"title":"ChannelPipeline","abstract":[{"text":"A list of ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":"s that handle or intercept inbound events and outbound operations of a","type":"text"},{"text":" ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":". ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" implements an advanced form of the Intercepting Filter pattern","type":"text"},{"text":" ","type":"text"},{"text":"to give a user full control over how an event is handled and how the ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":"s in a pipeline","type":"text"},{"text":" ","type":"text"},{"text":"interact with each other.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelPipeline"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"kind":"symbol","url":"\/documentation\/niocore","title":"NIOCore","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"url":"\/documentation\/niocore\/channel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","navigatorTitle":[{"kind":"identifier","text":"Channel"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"title":"Channel"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/init(channel:)":{"role":"symbol","abstract":[{"type":"text","text":"Create "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" for a given "},{"type":"codeVoice","code":"Channel"},{"text":". This method should never be called by the end-user","type":"text"},{"text":" ","type":"text"},{"text":"directly: it is only intended for use with custom ","type":"text"},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" implementations. Users should always use"},{"type":"text","text":" "},{"type":"codeVoice","code":"channel.pipeline"},{"type":"text","text":" to access the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" for a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"channel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP"},{"kind":"text","text":")"}],"url":"\/documentation\/niocore\/channelpipeline\/init(channel:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/init(channel:)","title":"init(channel:)"}}}