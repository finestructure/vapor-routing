{"metadata":{"role":"symbol","modules":[{"name":"AsyncHTTPClient"}],"roleHeading":"Instance Method","required":true,"title":"didReceiveBodyPart(task:_:)","symbolKind":"method","externalID":"s:15AsyncHTTPClient0B16ResponseDelegateP18didReceiveBodyPart4task_7NIOCore15EventLoopFutureCyytGAA0B0C4TaskCy_0C0QzG_AF10ByteBufferVtF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"didReceiveBodyPart","kind":"identifier"},{"text":"(","kind":"text"},{"text":"task","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPClient","kind":"typeIdentifier","preciseIdentifier":"s:15AsyncHTTPClient0B0C"},{"text":".","kind":"text"},{"text":"Task","kind":"typeIdentifier","preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Response","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">","kind":"text"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate"]]},"variants":[{"paths":["\/documentation\/asynchttpclient\/httpclientresponsedelegate\/didreceivebodypart(task:_:)-4fd4v"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveBodyPart(task:_:)-4fd4v","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Called when part of a response body is received. Could be called zero or more times."},{"type":"text","text":" "},{"type":"text","text":"You must return an "},{"code":"EventLoopFuture<Void>","type":"codeVoice"},{"type":"text","text":" that you complete when you have finished processing the body part."},{"type":"text","text":" "},{"type":"text","text":"You can create an already succeeded future by calling "},{"code":"task.eventLoop.makeSucceededFuture(())","type":"codeVoice"},{"type":"text","text":"."}],"sections":[],"defaultImplementationsSections":[{"title":"HTTPClientResponseDelegate Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveBodyPart(task:_:)-1fvyq"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"didReceiveBodyPart"},{"kind":"text","text":"("},{"kind":"externalParam","text":"task"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClient","preciseIdentifier":"s:15AsyncHTTPClient0B0C","text":"HTTPClient"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClient\/Task","preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC","text":"Task"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Response"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"buffer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"EventLoopFuture"},{"text":" that will be used for backpressure.","type":"text"}]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"Current request context."}],"type":"paragraph"}],"name":"task"},{"content":[{"inlineContent":[{"text":"Received body ","type":"text"},{"code":"Part","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"name":"buffer"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"This function will not be called until the future returned by ","type":"text"},{"code":"didReceiveHead","type":"codeVoice"},{"text":" has completed.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"This function will not be called for subsequent body parts until the previous future returned by a","type":"text"},{"text":" ","type":"text"},{"text":"call to this function completes.","type":"text"}],"type":"paragraph"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClient/Task":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Task"}],"kind":"symbol","title":"HTTPClient.Task","url":"\/documentation\/asynchttpclient\/httpclient\/task","navigatorTitle":[{"kind":"identifier","text":"Task"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClient\/Task","abstract":[{"text":"Response execution context. Will be created by the library and could be used for obtaining","type":"text"},{"text":" ","type":"text"},{"code":"EventLoopFuture<Response>","type":"codeVoice"},{"text":" of the execution or cancellation of the execution.","type":"text"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClientResponseDelegate/didReceiveBodyPart(task:_:)-1fvyq":{"role":"symbol","title":"didReceiveBodyPart(task:_:)","url":"\/documentation\/asynchttpclient\/httpclientresponsedelegate\/didreceivebodypart(task:_:)-1fvyq","abstract":[{"text":"Called when part of a response body is received. Could be called zero or more times.","type":"text"},{"text":" ","type":"text"},{"text":"You must return an ","type":"text"},{"code":"EventLoopFuture<Void>","type":"codeVoice"},{"text":" that you complete when you have finished processing the body part.","type":"text"},{"text":" ","type":"text"},{"text":"You can create an already succeeded future by calling ","type":"text"},{"code":"task.eventLoop.makeSucceededFuture(())","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveBodyPart(task:_:)-1fvyq","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"didReceiveBodyPart"},{"kind":"text","text":"("},{"kind":"externalParam","text":"task"},{"kind":"text","text":": "},{"preciseIdentifier":"s:15AsyncHTTPClient0B0C","kind":"typeIdentifier","text":"HTTPClient"},{"kind":"text","text":"."},{"preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC","kind":"typeIdentifier","text":"Task"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Response"},{"kind":"text","text":">, "},{"text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","url":"\/documentation\/niocore\/bytebuffer","title":"ByteBuffer"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClientResponseDelegate":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate","url":"\/documentation\/asynchttpclient\/httpclientresponsedelegate","abstract":[{"code":"HTTPClientResponseDelegate","type":"codeVoice"},{"text":" allows an implementation to receive notifications about request processing and to control how response parts are processed.","type":"text"},{"text":" ","type":"text"},{"text":"You can implement this protocol if you need fine-grained control over an HTTP request\/response, for example, if you want to inspect the response","type":"text"},{"text":" ","type":"text"},{"text":"headers before deciding whether to accept a response body, or if you want to stream your request body. Pass an instance of your conforming","type":"text"},{"text":" ","type":"text"},{"text":"class to the ","type":"text"},{"type":"codeVoice","code":"HTTPClient.execute()"},{"text":" method and this package will call each delegate method appropriately as the request takes place.\/","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","title":"HTTPClientResponseDelegate","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPClientResponseDelegate"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPClientResponseDelegate"}]},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient":{"abstract":[],"role":"collection","title":"AsyncHTTPClient","url":"\/documentation\/asynchttpclient","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFuture","kind":"identifier"}],"navigatorTitle":[{"text":"EventLoopFuture","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopfuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"role":"symbol","title":"EventLoopFuture"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClient":{"abstract":[{"type":"text","text":"HTTPClient class provides API for request execution."}],"role":"symbol","title":"HTTPClient","url":"\/documentation\/asynchttpclient\/httpclient","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTPClient"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClient","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPClient"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClientResponseDelegate/didReceiveBodyPart(task:_:)-4fd4v":{"kind":"symbol","title":"didReceiveBodyPart(task:_:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"didReceiveBodyPart","kind":"identifier"},{"text":"(","kind":"text"},{"text":"task","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPClient","preciseIdentifier":"s:15AsyncHTTPClient0B0C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Task","preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Response","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveBodyPart(task:_:)-4fd4v","abstract":[{"text":"Called when part of a response body is received. Could be called zero or more times.","type":"text"},{"text":" ","type":"text"},{"text":"You must return an ","type":"text"},{"code":"EventLoopFuture<Void>","type":"codeVoice"},{"type":"text","text":" that you complete when you have finished processing the body part."},{"type":"text","text":" "},{"type":"text","text":"You can create an already succeeded future by calling "},{"type":"codeVoice","code":"task.eventLoop.makeSucceededFuture(())"},{"text":".","type":"text"}],"required":true,"defaultImplementations":1,"url":"\/documentation\/asynchttpclient\/httpclientresponsedelegate\/didreceivebodypart(task:_:)-4fd4v"}}}