{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveError(task:_:)-fhsg"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"didReceiveError","kind":"identifier"},{"text":"(","kind":"text"},{"text":"task","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClient","preciseIdentifier":"s:15AsyncHTTPClient0B0C","text":"HTTPClient","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClient\/Task","preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC","text":"Task","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Response","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"error","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":")","kind":"text"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"task","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Current request context."}]}]},{"name":"error","content":[{"type":"paragraph","inlineContent":[{"text":"Error that occured during response processing.","type":"text"}]}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function may be called at any time: it does not respect the backpressure exerted by "},{"code":"didReceiveHead","type":"codeVoice"},{"type":"text","text":" and "},{"code":"didReceiveBodyPart","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"All outstanding work may be cancelled when this is received. Once called, no further calls will be made to "},{"code":"didReceiveHead","type":"codeVoice"},{"type":"text","text":", "},{"code":"didReceiveBodyPart","type":"codeVoice"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"or "},{"code":"didFinishRequest","type":"codeVoice"},{"type":"text","text":"."}]}]}],"kind":"symbol","variants":[{"paths":["\/documentation\/asynchttpclient\/httpclientresponsedelegate\/didreceiveerror(task:_:)-fhsg"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate"]]},"defaultImplementationsSections":[{"title":"HTTPClientResponseDelegate Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveError(task:_:)-98xyq"]}],"abstract":[{"type":"text","text":"Called when error was thrown during request execution. Will be called zero or one time only. Request processing will be stopped after that."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"modules":[{"name":"AsyncHTTPClient"}],"title":"didReceiveError(task:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"didReceiveError"},{"kind":"text","text":"("},{"kind":"externalParam","text":"task"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPClient","preciseIdentifier":"s:15AsyncHTTPClient0B0C"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Task","preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Response"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":")"}],"required":true,"role":"symbol","externalID":"s:15AsyncHTTPClient0B16ResponseDelegateP15didReceiveError4task_yAA0B0C4TaskCy_0C0QzG_s0G0_ptF","roleHeading":"Instance Method","symbolKind":"method"},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClientResponseDelegate/didReceiveError(task:_:)-98xyq":{"abstract":[{"text":"Called when error was thrown during request execution. Will be called zero or one time only. Request processing will be stopped after that.","type":"text"}],"url":"\/documentation\/asynchttpclient\/httpclientresponsedelegate\/didreceiveerror(task:_:)-98xyq","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"didReceiveError","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"task"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPClient","preciseIdentifier":"s:15AsyncHTTPClient0B0C"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Task","preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Response"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveError(task:_:)-98xyq","role":"symbol","title":"didReceiveError(task:_:)"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClient":{"abstract":[{"type":"text","text":"HTTPClient class provides API for request execution."}],"role":"symbol","title":"HTTPClient","url":"\/documentation\/asynchttpclient\/httpclient","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTPClient"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClient","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPClient"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient":{"abstract":[],"role":"collection","title":"AsyncHTTPClient","url":"\/documentation\/asynchttpclient","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClientResponseDelegate/didReceiveError(task:_:)-fhsg":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveError(task:_:)-fhsg","required":true,"defaultImplementations":1,"title":"didReceiveError(task:_:)","abstract":[{"text":"Called when error was thrown during request execution. Will be called zero or one time only. Request processing will be stopped after that.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"didReceiveError"},{"kind":"text","text":"("},{"text":"task","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPClient","kind":"typeIdentifier","preciseIdentifier":"s:15AsyncHTTPClient0B0C"},{"text":".","kind":"text"},{"text":"Task","preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Response","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/asynchttpclient\/httpclientresponsedelegate\/didreceiveerror(task:_:)-fhsg","role":"symbol","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClientResponseDelegate":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate","url":"\/documentation\/asynchttpclient\/httpclientresponsedelegate","abstract":[{"code":"HTTPClientResponseDelegate","type":"codeVoice"},{"text":" allows an implementation to receive notifications about request processing and to control how response parts are processed.","type":"text"},{"text":" ","type":"text"},{"text":"You can implement this protocol if you need fine-grained control over an HTTP request\/response, for example, if you want to inspect the response","type":"text"},{"text":" ","type":"text"},{"text":"headers before deciding whether to accept a response body, or if you want to stream your request body. Pass an instance of your conforming","type":"text"},{"text":" ","type":"text"},{"text":"class to the ","type":"text"},{"type":"codeVoice","code":"HTTPClient.execute()"},{"text":" method and this package will call each delegate method appropriately as the request takes place.\/","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","title":"HTTPClientResponseDelegate","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPClientResponseDelegate"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPClientResponseDelegate"}]},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClient/Task":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Task"}],"kind":"symbol","title":"HTTPClient.Task","url":"\/documentation\/asynchttpclient\/httpclient\/task","navigatorTitle":[{"kind":"identifier","text":"Task"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClient\/Task","abstract":[{"text":"Response execution context. Will be created by the library and could be used for obtaining","type":"text"},{"text":" ","type":"text"},{"code":"EventLoopFuture<Response>","type":"codeVoice"},{"text":" of the execution or cancellation of the execution.","type":"text"}],"role":"symbol"}}}