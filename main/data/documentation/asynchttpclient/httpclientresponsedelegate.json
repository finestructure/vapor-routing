{"sections":[],"metadata":{"modules":[{"name":"AsyncHTTPClient"}],"navigatorTitle":[{"text":"HTTPClientResponseDelegate","kind":"identifier"}],"title":"HTTPClientResponseDelegate","roleHeading":"Protocol","externalID":"s:15AsyncHTTPClient0B16ResponseDelegateP","role":"symbol","symbolKind":"protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPClientResponseDelegate","kind":"identifier"}]},"kind":"symbol","topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/Response"]},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didFinishRequest(task:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveBodyPart(task:_:)-4fd4v","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveError(task:_:)-fhsg","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveHead(task:_:)-9r4xd","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didSendRequest(task:)-9od5p","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didSendRequestHead(task:_:)-6khai","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didSendRequestPart(task:_:)-4qxap"],"title":"Instance Methods"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPClientResponseDelegate","kind":"identifier"},{"text":" : AnyObject","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":3,"anchor":"Backpressure","type":"heading","text":"Backpressure"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"code":"HTTPClientResponseDelegate","type":"codeVoice"},{"type":"text","text":" can be used to exert backpressure on the server response. This is achieved by way of the futures returned from"},{"type":"text","text":" "},{"code":"didReceiveHead","type":"codeVoice"},{"type":"text","text":" and "},{"code":"didReceiveBodyPart","type":"codeVoice"},{"type":"text","text":". The following functions are part of the “backpressure system” in the delegate:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"didReceiveHead"}]}]},{"content":[{"inlineContent":[{"code":"didReceiveBodyPart","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"didFinishRequest"}]}]},{"content":[{"inlineContent":[{"code":"didReceiveError","type":"codeVoice"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The first three methods are strictly "},{"type":"emphasis","inlineContent":[{"type":"text","text":"exclusive"}]},{"type":"text","text":", with that exclusivity managed by the futures returned by "},{"type":"codeVoice","code":"didReceiveHead"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"codeVoice","code":"didReceiveBodyPart"},{"type":"text","text":". What this means is that until the returned future is completed, none of these three methods will be called"},{"type":"text","text":" "},{"type":"text","text":"again. This allows delegates to rate limit the server to a capacity it can manage. "},{"type":"codeVoice","code":"didFinishRequest"},{"type":"text","text":" does not return a future,"},{"type":"text","text":" "},{"type":"text","text":"as we are expecting no more data from the server at this time."}]},{"type":"paragraph","inlineContent":[{"code":"didReceiveError","type":"codeVoice"},{"text":" is somewhat special: it signals the end of this regime. ","type":"text"},{"code":"didRecieveError","type":"codeVoice"},{"text":" is not exclusive: it may be called at","type":"text"},{"text":" ","type":"text"},{"text":"any time, even if a returned future is not yet completed. ","type":"text"},{"code":"didReceiveError","type":"codeVoice"},{"text":" is terminal, meaning that once it has been called none","type":"text"},{"text":" ","type":"text"},{"text":"of these four methods will be called again. This can be used as a signal to abandon all outstanding work.","type":"text"}]},{"style":"note","content":[{"inlineContent":[{"type":"text","text":"This delegate is strongly held by the "},{"type":"codeVoice","code":"HTTPTaskHandler"},{"type":"text","text":" "},{"type":"text","text":"for the duration of the "},{"type":"codeVoice","code":"Request"},{"type":"text","text":" processing and will be"},{"type":"text","text":" "},{"type":"text","text":"released together with the "},{"type":"codeVoice","code":"HTTPTaskHandler"},{"type":"text","text":" when channel is closed."},{"type":"text","text":" "},{"type":"text","text":"Users of the library are not required to keep a reference to the"},{"type":"text","text":" "},{"type":"text","text":"object that implements this protocol, but may do so if needed."}],"type":"paragraph"}],"type":"aside"}],"kind":"content"}],"abstract":[{"type":"codeVoice","code":"HTTPClientResponseDelegate"},{"text":" allows an implementation to receive notifications about request processing and to control how response parts are processed.","type":"text"},{"text":" ","type":"text"},{"text":"You can implement this protocol if you need fine-grained control over an HTTP request\/response, for example, if you want to inspect the response","type":"text"},{"text":" ","type":"text"},{"text":"headers before deciding whether to accept a response body, or if you want to stream your request body. Pass an instance of your conforming","type":"text"},{"text":" ","type":"text"},{"text":"class to the ","type":"text"},{"type":"codeVoice","code":"HTTPClient.execute()"},{"text":" method and this package will call each delegate method appropriately as the request takes place.\/","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asynchttpclient\/httpclientresponsedelegate"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient"]]},"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/FileDownloadDelegate","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientCopyingDelegate","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/ResponseAccumulator"],"title":"Conforming Types","kind":"relationships","type":"conformingTypes"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate"},"references":{"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClientResponseDelegate/didReceiveBodyPart(task:_:)-4fd4v":{"kind":"symbol","title":"didReceiveBodyPart(task:_:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"didReceiveBodyPart","kind":"identifier"},{"text":"(","kind":"text"},{"text":"task","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPClient","preciseIdentifier":"s:15AsyncHTTPClient0B0C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Task","preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Response","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveBodyPart(task:_:)-4fd4v","abstract":[{"text":"Called when part of a response body is received. Could be called zero or more times.","type":"text"},{"text":" ","type":"text"},{"text":"You must return an ","type":"text"},{"code":"EventLoopFuture<Void>","type":"codeVoice"},{"type":"text","text":" that you complete when you have finished processing the body part."},{"type":"text","text":" "},{"type":"text","text":"You can create an already succeeded future by calling "},{"type":"codeVoice","code":"task.eventLoop.makeSucceededFuture(())"},{"text":".","type":"text"}],"required":true,"defaultImplementations":1,"url":"\/documentation\/asynchttpclient\/httpclientresponsedelegate\/didreceivebodypart(task:_:)-4fd4v"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/ResponseAccumulator":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/ResponseAccumulator","title":"ResponseAccumulator","abstract":[],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ResponseAccumulator"}],"url":"\/documentation\/asynchttpclient\/responseaccumulator","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ResponseAccumulator"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClientResponseDelegate/didReceiveError(task:_:)-fhsg":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveError(task:_:)-fhsg","required":true,"defaultImplementations":1,"title":"didReceiveError(task:_:)","abstract":[{"text":"Called when error was thrown during request execution. Will be called zero or one time only. Request processing will be stopped after that.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"didReceiveError"},{"kind":"text","text":"("},{"text":"task","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPClient","kind":"typeIdentifier","preciseIdentifier":"s:15AsyncHTTPClient0B0C"},{"text":".","kind":"text"},{"text":"Task","preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Response","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/asynchttpclient\/httpclientresponsedelegate\/didreceiveerror(task:_:)-fhsg","role":"symbol","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/FileDownloadDelegate":{"type":"topic","title":"FileDownloadDelegate","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FileDownloadDelegate","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/FileDownloadDelegate","navigatorTitle":[{"kind":"identifier","text":"FileDownloadDelegate"}],"url":"\/documentation\/asynchttpclient\/filedownloaddelegate","abstract":[{"text":"Handles a streaming download to a given file path, allowing headers and progress to be reported.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClientResponseDelegate":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate","url":"\/documentation\/asynchttpclient\/httpclientresponsedelegate","abstract":[{"code":"HTTPClientResponseDelegate","type":"codeVoice"},{"text":" allows an implementation to receive notifications about request processing and to control how response parts are processed.","type":"text"},{"text":" ","type":"text"},{"text":"You can implement this protocol if you need fine-grained control over an HTTP request\/response, for example, if you want to inspect the response","type":"text"},{"text":" ","type":"text"},{"text":"headers before deciding whether to accept a response body, or if you want to stream your request body. Pass an instance of your conforming","type":"text"},{"text":" ","type":"text"},{"text":"class to the ","type":"text"},{"type":"codeVoice","code":"HTTPClient.execute()"},{"text":" method and this package will call each delegate method appropriately as the request takes place.\/","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","title":"HTTPClientResponseDelegate","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPClientResponseDelegate"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPClientResponseDelegate"}]},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient":{"abstract":[],"role":"collection","title":"AsyncHTTPClient","url":"\/documentation\/asynchttpclient","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClientResponseDelegate/didFinishRequest(task:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didFinishRequest(task:)","url":"\/documentation\/asynchttpclient\/httpclientresponsedelegate\/didfinishrequest(task:)","abstract":[{"text":"Called when the complete HTTP request is finished. You must return an instance of your ","type":"text"},{"code":"Response","type":"codeVoice"},{"text":" associated type. Will be called once, except if an error occurred.","type":"text"}],"required":true,"kind":"symbol","role":"symbol","type":"topic","title":"didFinishRequest(task:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"didFinishRequest"},{"kind":"text","text":"("},{"kind":"externalParam","text":"task"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:15AsyncHTTPClient0B0C","text":"HTTPClient"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Task","preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Response"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Response"}]},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClientResponseDelegate/didReceiveHead(task:_:)-9r4xd":{"required":true,"type":"topic","defaultImplementations":1,"title":"didReceiveHead(task:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"didReceiveHead","kind":"identifier"},{"text":"(","kind":"text"},{"text":"task","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPClient","preciseIdentifier":"s:15AsyncHTTPClient0B0C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Task","preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Response","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"HTTPResponseHead","preciseIdentifier":"s:8NIOHTTP116HTTPResponseHeadV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveHead(task:_:)-9r4xd","url":"\/documentation\/asynchttpclient\/httpclientresponsedelegate\/didreceivehead(task:_:)-9r4xd","abstract":[{"type":"text","text":"Called when response head is received. Will be called once."},{"type":"text","text":" "},{"type":"text","text":"You must return an "},{"code":"EventLoopFuture<Void>","type":"codeVoice"},{"text":" that you complete when you have finished processing the body part.","type":"text"},{"text":" ","type":"text"},{"text":"You can create an already succeeded future by calling ","type":"text"},{"type":"codeVoice","code":"task.eventLoop.makeSucceededFuture(())"},{"text":".","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClientCopyingDelegate":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientCopyingDelegate","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HTTPClientCopyingDelegate"}],"role":"symbol","title":"HTTPClientCopyingDelegate","abstract":[],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPClientCopyingDelegate"}],"url":"\/documentation\/asynchttpclient\/httpclientcopyingdelegate"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClientResponseDelegate/Response":{"kind":"symbol","title":"Response","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Response"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/Response","abstract":[],"required":true,"url":"\/documentation\/asynchttpclient\/httpclientresponsedelegate\/response"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClientResponseDelegate/didSendRequestHead(task:_:)-6khai":{"kind":"symbol","title":"didSendRequestHead(task:_:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"didSendRequestHead"},{"kind":"text","text":"("},{"kind":"externalParam","text":"task"},{"kind":"text","text":": "},{"text":"HTTPClient","preciseIdentifier":"s:15AsyncHTTPClient0B0C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Task","preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Response","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"HTTPRequestHead","preciseIdentifier":"s:8NIOHTTP115HTTPRequestHeadV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didSendRequestHead(task:_:)-6khai","abstract":[{"text":"Called when the request head is sent. Will be called once.","type":"text"}],"required":true,"defaultImplementations":1,"url":"\/documentation\/asynchttpclient\/httpclientresponsedelegate\/didsendrequesthead(task:_:)-6khai"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClientResponseDelegate/didSendRequestPart(task:_:)-4qxap":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"didSendRequestPart"},{"kind":"text","text":"("},{"kind":"externalParam","text":"task"},{"text":": ","kind":"text"},{"text":"HTTPClient","preciseIdentifier":"s:15AsyncHTTPClient0B0C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Task","preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Response","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"IOData","preciseIdentifier":"s:7NIOCore6IODataO","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didSendRequestPart(task:_:)-4qxap","title":"didSendRequestPart(task:_:)","url":"\/documentation\/asynchttpclient\/httpclientresponsedelegate\/didsendrequestpart(task:_:)-4qxap","required":true,"defaultImplementations":1,"abstract":[{"type":"text","text":"Called when a part of the request body is sent. Could be called zero or more times."}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClientResponseDelegate/didSendRequest(task:)-9od5p":{"type":"topic","url":"\/documentation\/asynchttpclient\/httpclientresponsedelegate\/didsendrequest(task:)-9od5p","abstract":[{"type":"text","text":"Called when the request is fully sent. Will be called once."}],"role":"symbol","defaultImplementations":1,"required":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didSendRequest(task:)-9od5p","title":"didSendRequest(task:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"didSendRequest"},{"kind":"text","text":"("},{"text":"task","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPClient","preciseIdentifier":"s:15AsyncHTTPClient0B0C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Task","preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Response","kind":"typeIdentifier"},{"text":">)","kind":"text"}]}}}