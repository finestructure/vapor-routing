{"abstract":[{"type":"text","text":"A pseudo-"},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":" that can be used to send messages to multiple other "},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":"s."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging"]]},"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/LogHandler"],"kind":"relationships","title":"Conforms To"}],"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultiplexLogHandler","kind":"identifier"}],"languages":["swift"]}]},{"kind":"content","content":[{"level":3,"text":"Effective Logger.Level","anchor":"Effective-Logger.Level","type":"heading"},{"inlineContent":[{"text":"When first initialized the multiplex log handlers’ log level is automatically set to the minimum of all the","type":"text"},{"text":" ","type":"text"},{"text":"passed in log handlers. This ensures that each of the handlers will be able to log at their appropriate level","type":"text"},{"text":" ","type":"text"},{"text":"any log events they might be interested in.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Example:"},{"type":"text","text":" "},{"type":"text","text":"If log handler "},{"type":"codeVoice","code":"A"},{"type":"text","text":" is logging at "},{"type":"codeVoice","code":".debug"},{"type":"text","text":" level, and log handler "},{"type":"codeVoice","code":"B"},{"type":"text","text":" is logging at "},{"type":"codeVoice","code":".info"},{"type":"text","text":" level, the constructed"},{"type":"text","text":" "},{"type":"codeVoice","code":"MultiplexLogHandler([A, B])"},{"type":"text","text":"’s effective log level will be set to "},{"type":"codeVoice","code":".debug"},{"type":"text","text":", meaning that debug messages will be"},{"type":"text","text":" "},{"type":"text","text":"handled by this handler, while only logged by the underlying "},{"type":"codeVoice","code":"A"},{"type":"text","text":" log handler (since "},{"type":"codeVoice","code":"B"},{"type":"text","text":"’s log level is "},{"type":"codeVoice","code":".info"},{"type":"text","text":" "},{"type":"text","text":"and thus it would not actually log that log message)."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If the log level is "},{"type":"emphasis","inlineContent":[{"type":"text","text":"set"}]},{"type":"text","text":" on a "},{"type":"codeVoice","code":"Logger"},{"type":"text","text":" backed by an "},{"type":"codeVoice","code":"MultiplexLogHandler"},{"type":"text","text":" the log level will apply to "},{"type":"emphasis","inlineContent":[{"text":"all","type":"text"}]},{"type":"text","text":" "},{"type":"text","text":"underlying log handlers, allowing a logger to still select at what level it wants to log regardless of if the underlying"},{"type":"text","text":" "},{"type":"text","text":"handler is a multiplex or a normal one. If for some reason one might want to not allow changing a log level of a specific"},{"type":"text","text":" "},{"type":"text","text":"handler passed into the multiplex log handler, this is possible by wrapping it in a handler which ignores any log level changes."}],"type":"paragraph"},{"level":3,"text":"Effective Logger.Metadata","anchor":"Effective-Logger.Metadata","type":"heading"},{"inlineContent":[{"text":"Since a ","type":"text"},{"code":"MultiplexLogHandler","type":"codeVoice"},{"text":" is a combination of multiple log handlers, the handling of metadata can be non-obvious.","type":"text"},{"text":" ","type":"text"},{"text":"For example, the underlying log handlers may have metadata of their own set before they are used to initialize the multiplex log handler.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The multiplex log handler acts purely as proxy and does not make any changes to underlying handler metadata other than"},{"type":"text","text":" "},{"type":"text","text":"proxying writes that users made on a "},{"code":"Logger","type":"codeVoice"},{"type":"text","text":" instance backed by this handler."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Setting metadata is always proxied through to "},{"type":"emphasis","inlineContent":[{"text":"all","type":"text"}]},{"type":"text","text":" underlying handlers, meaning that if a modification like"},{"type":"text","text":" "},{"type":"codeVoice","code":"logger[metadataKey: \"x\"] = \"y\""},{"type":"text","text":" is made, all underlying log handlers that this multiplex handler was initiated with"},{"type":"text","text":" "},{"type":"text","text":"will observe this change."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Reading metadata from the multiplex log handler MAY need to pick one of conflicting values if the underlying log handlers"},{"type":"text","text":" "},{"type":"text","text":"were already initiated with some metadata before passing them into the multiplex handler. The multiplex handler uses"},{"type":"text","text":" "},{"type":"text","text":"the order in which the handlers were passed in during its initialization as a priority indicator - the first handler’s"},{"type":"text","text":" "},{"type":"text","text":"values are more important than the next handlers values, etc."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Example:"},{"type":"text","text":" "},{"type":"text","text":"If the multiplex log handler was initiated with two handlers like this: "},{"type":"codeVoice","code":"MultiplexLogHandler([handler1, handler2])"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The handlers each have some already set metadata: "},{"type":"codeVoice","code":"handler1"},{"type":"text","text":" has metadata values for keys "},{"type":"codeVoice","code":"one"},{"type":"text","text":" and "},{"type":"codeVoice","code":"all"},{"type":"text","text":", and "},{"type":"codeVoice","code":"handler2"},{"type":"text","text":" "},{"type":"text","text":"has values for keys "},{"type":"codeVoice","code":"two"},{"type":"text","text":" and "},{"type":"codeVoice","code":"all"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"A query through the multiplex log handler the key ","type":"text"},{"code":"one","type":"codeVoice"},{"text":" naturally returns ","type":"text"},{"code":"handler1","type":"codeVoice"},{"text":"’s value, and a query for ","type":"text"},{"code":"two","type":"codeVoice"},{"text":" ","type":"text"},{"text":"naturally returns ","type":"text"},{"code":"handler2","type":"codeVoice"},{"text":"’s value. Querying for the key ","type":"text"},{"code":"all","type":"codeVoice"},{"text":" will return ","type":"text"},{"code":"handler1","type":"codeVoice"},{"text":"’s value, as that handler was indicated","type":"text"},{"text":" ","type":"text"},{"text":"“more important” than the second handler. The same rule applies when querying for the ","type":"text"},{"code":"metadata","type":"codeVoice"},{"text":" property of the","type":"text"},{"text":" ","type":"text"},{"text":"multiplex log handler - it constructs ","type":"text"},{"code":"Metadata","type":"codeVoice"},{"text":" uniquing values.","type":"text"}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/logging\/multiplexloghandler"]}],"metadata":{"navigatorTitle":[{"text":"MultiplexLogHandler","kind":"identifier"}],"roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultiplexLogHandler","kind":"identifier"}],"symbolKind":"struct","role":"symbol","modules":[{"name":"Logging"}],"title":"MultiplexLogHandler","externalID":"s:7Logging19MultiplexLogHandlerV"},"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/init(_:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/logLevel","doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/metadata"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/log(level:message:metadata:source:file:function:line:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/subscript(metadataKey:)"],"title":"Subscripts"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/LogHandler-Implementations"],"title":"Default Implementations","generated":true}],"references":{"doc://co.pointfree.VaporRouting/documentation/Logging":{"role":"collection","abstract":[],"kind":"symbol","title":"Logging","type":"topic","url":"\/documentation\/logging","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging"},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/logLevel":{"abstract":[{"type":"text","text":"Get or set the configured log level."}],"role":"symbol","kind":"symbol","title":"logLevel","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"logLevel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Level","preciseIdentifier":"s:7Logging6LoggerV5LevelO"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/logLevel","type":"topic","url":"\/documentation\/logging\/multiplexloghandler\/loglevel"},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler":{"abstract":[{"type":"text","text":"A pseudo-"},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":" that can be used to send messages to multiple other "},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":"s."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler","title":"MultiplexLogHandler","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultiplexLogHandler","kind":"identifier"}],"navigatorTitle":[{"text":"MultiplexLogHandler","kind":"identifier"}],"type":"topic","kind":"symbol","url":"\/documentation\/logging\/multiplexloghandler","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/LogHandler-Implementations":{"role":"collectionGroup","type":"topic","abstract":[],"url":"\/documentation\/logging\/multiplexloghandler\/loghandler-implementations","title":"LogHandler Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/LogHandler-Implementations","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/init(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/init(_:)","role":"symbol","title":"init(_:)","url":"\/documentation\/logging\/multiplexloghandler\/init(_:)","kind":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(["},{"preciseIdentifier":"s:7Logging10LogHandlerP","kind":"typeIdentifier","text":"LogHandler"},{"kind":"text","text":"])"}],"abstract":[{"text":"Create a ","type":"text"},{"code":"MultiplexLogHandler","type":"codeVoice"},{"text":".","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/subscript(metadataKey:)":{"abstract":[{"type":"text","text":"Add, remove, or change the logging metadata."}],"role":"symbol","kind":"symbol","title":"subscript(metadataKey:)","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"("},{"kind":"externalParam","text":"metadataKey"},{"kind":"text","text":" _: "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Metadata","preciseIdentifier":"s:7Logging6LoggerV8Metadataa"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Key","preciseIdentifier":"s:SD3Keya"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Metadata","preciseIdentifier":"s:7Logging6LoggerV8Metadataa"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:SD5Valuea"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/subscript(metadataKey:)","type":"topic","url":"\/documentation\/logging\/multiplexloghandler\/subscript(metadatakey:)"},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/metadata":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"metadata"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Metadata","preciseIdentifier":"s:7Logging6LoggerV8Metadataa"}],"type":"topic","title":"metadata","role":"symbol","url":"\/documentation\/logging\/multiplexloghandler\/metadata","abstract":[{"type":"text","text":"Get or set the entire metadata storage as a dictionary."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/metadata","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Logging/LogHandler":{"role":"symbol","navigatorTitle":[{"text":"LogHandler","kind":"identifier"}],"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":" is an implementation of a logging backend."}],"kind":"symbol","title":"LogHandler","type":"topic","url":"\/documentation\/logging\/loghandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/LogHandler","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LogHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/log(level:message:metadata:source:file:function:line:)":{"abstract":[{"type":"text","text":"This method is called when a "},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":" must emit a log message. There is no need for the "},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":" to"},{"text":" ","type":"text"},{"text":"check if the ","type":"text"},{"code":"level","type":"codeVoice"},{"text":" is above or below the configured ","type":"text"},{"code":"logLevel","type":"codeVoice"},{"text":" as ","type":"text"},{"code":"Logger","type":"codeVoice"},{"text":" already performed this check and","type":"text"},{"text":" ","type":"text"},{"text":"determined that a message should be logged.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/log(level:message:metadata:source:file:function:line:)","title":"log(level:message:metadata:source:file:function:line:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"log","kind":"identifier"},{"text":"(","kind":"text"},{"text":"level","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV"},{"text":".","kind":"text"},{"text":"Level","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV5LevelO"},{"text":", ","kind":"text"},{"text":"message","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV"},{"text":".","kind":"text"},{"text":"Message","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV7MessageV"},{"text":", ","kind":"text"},{"text":"metadata","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV"},{"text":".","kind":"text"},{"text":"Metadata","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV8Metadataa"},{"text":"?, ","kind":"text"},{"text":"source","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"function","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":")","kind":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/logging\/multiplexloghandler\/log(level:message:metadata:source:file:function:line:)","role":"symbol"}}}