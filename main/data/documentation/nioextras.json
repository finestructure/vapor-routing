{"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","interfaceLanguage":"swift"},"hierarchy":{"paths":[[]]},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugInboundEventsHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/FixedLengthFrameDecoder","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LengthFieldBasedFrameDecoder","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LengthFieldPrepender","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LineBasedFrameDecoder","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOPCAPRingBuffer","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/ServerQuiescingHelper"],"title":"Classes"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOExtrasError"],"title":"Protocols"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOLengthFieldBitLength"],"title":"Structures"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LengthFieldPrependerError","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOExtrasErrors","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOJSONRPCFraming","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOLengthFieldBasedFrameDecoderError"],"title":"Enumerations"}],"metadata":{"role":"collection","symbolKind":"module","modules":[{"name":"NIOExtras"}],"title":"NIOExtras","roleHeading":"Framework","externalID":"NIOExtras"},"variants":[{"paths":["\/documentation\/nioextras"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOPCAPRingBuffer":{"navigatorTitle":[{"text":"NIOPCAPRingBuffer","kind":"identifier"}],"abstract":[{"text":"Storage for the most recent set of packets captured subject to constraints.","type":"text"},{"text":" ","type":"text"},{"text":"Use ","type":"text"},{"type":"codeVoice","code":"addFragment"},{"text":" as the sink to a ","type":"text"},{"type":"codeVoice","code":"NIOWritePCAPHandler"},{"text":" and call ","type":"text"},{"type":"codeVoice","code":"emitPCAP"},{"text":" ","type":"text"},{"text":"when you wish to get the recorded data.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOPCAPRingBuffer","url":"\/documentation\/nioextras\/niopcapringbuffer","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOPCAPRingBuffer","kind":"identifier"}],"role":"symbol","type":"topic","title":"NIOPCAPRingBuffer","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler":{"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" that can write a "},{"type":"reference","identifier":"https:\/\/en.wikipedia.org\/wiki\/Pcap","isActive":true},{"type":"text","text":" containing the send\/received"},{"type":"text","text":" "},{"type":"text","text":"data as synthesized TCP packet captures."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOWritePCAPHandler"}],"navigatorTitle":[{"kind":"identifier","text":"NIOWritePCAPHandler"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler","url":"\/documentation\/nioextras\/niowritepcaphandler","title":"NIOWritePCAPHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugOutboundEventsHandler":{"navigatorTitle":[{"text":"DebugOutboundEventsHandler","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DebugOutboundEventsHandler","kind":"identifier"}],"title":"DebugOutboundEventsHandler","role":"symbol","url":"\/documentation\/nioextras\/debugoutboundeventshandler","abstract":[{"text":"ChannelOutboundHandler that prints all outbound events that pass through the pipeline by default,","type":"text"},{"text":" ","type":"text"},{"text":"overridable by providing your own closure for custom logging. See DebugInboundEventsHandler for inbound events.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler"},"https://en.wikipedia.org/wiki/Pcap":{"url":"https:\/\/en.wikipedia.org\/wiki\/Pcap","identifier":"https:\/\/en.wikipedia.org\/wiki\/Pcap","titleInlineContent":[{"type":"codeVoice","code":".pcap"},{"type":"text","text":" file"}],"type":"link","title":".pcap file"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler":{"type":"topic","kind":"symbol","abstract":[{"type":"codeVoice","code":"RequestResponseHandler"},{"text":" receives a ","type":"text"},{"type":"codeVoice","code":"Request"},{"text":" alongside an ","type":"text"},{"type":"codeVoice","code":"EventLoopPromise<Response>"},{"type":"text","text":" from the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"‘s"},{"type":"text","text":" "},{"type":"text","text":"outbound side. It will fulfill the promise with the "},{"code":"Response","type":"codeVoice"},{"text":" once it’s received from the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"’s inbound","type":"text"},{"text":" ","type":"text"},{"text":"side.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler","navigatorTitle":[{"text":"RequestResponseHandler","kind":"identifier"}],"title":"RequestResponseHandler","url":"\/documentation\/nioextras\/requestresponsehandler","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestResponseHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOLengthFieldBitLength":{"url":"\/documentation\/nioextras\/niolengthfieldbitlength","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOLengthFieldBitLength","kind":"identifier"}],"title":"NIOLengthFieldBitLength","abstract":[{"text":"An struct to describe the length of a piece of data in bits","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOLengthFieldBitLength","type":"topic","navigatorTitle":[{"text":"NIOLengthFieldBitLength","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOExtrasError":{"url":"\/documentation\/nioextras\/nioextraserror","title":"NIOExtrasError","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOExtrasError","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOExtrasError","kind":"identifier"}],"navigatorTitle":[{"text":"NIOExtrasError","kind":"identifier"}],"role":"symbol","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/ServerQuiescingHelper":{"url":"\/documentation\/nioextras\/serverquiescinghelper","type":"topic","kind":"symbol","title":"ServerQuiescingHelper","abstract":[{"text":"Helper that can be used to orchestrate the quiescing of a server ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" and all the child ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":"s that are","type":"text"},{"text":" ","type":"text"},{"text":"open at a given point in time.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/ServerQuiescingHelper","role":"symbol","navigatorTitle":[{"text":"ServerQuiescingHelper","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ServerQuiescingHelper","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/FixedLengthFrameDecoder":{"kind":"symbol","url":"\/documentation\/nioextras\/fixedlengthframedecoder","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FixedLengthFrameDecoder"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FixedLengthFrameDecoder"}],"abstract":[{"text":"A decoder that splits the received ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" by a fixed number","type":"text"},{"text":" ","type":"text"},{"text":"of bytes. For example, if you received the following four fragmented packets:","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/FixedLengthFrameDecoder","title":"FixedLengthFrameDecoder"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/LengthFieldPrepender":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LengthFieldPrepender"}],"kind":"symbol","title":"LengthFieldPrepender","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LengthFieldPrepender"}],"abstract":[{"text":"An encoder that takes a ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" message and prepends the number of bytes in the message.","type":"text"},{"text":" ","type":"text"},{"text":"The length field is always the same fixed length specified on construction.","type":"text"},{"text":" ","type":"text"},{"text":"These bytes contain a binary specification of the message size.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LengthFieldPrepender","type":"topic","url":"\/documentation\/nioextras\/lengthfieldprepender"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOJSONRPCFraming":{"navigatorTitle":[{"kind":"identifier","text":"NIOJSONRPCFraming"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOJSONRPCFraming"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOJSONRPCFraming","type":"topic","title":"NIOJSONRPCFraming","role":"symbol","kind":"symbol","abstract":[],"url":"\/documentation\/nioextras\/niojsonrpcframing"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOExtrasErrors":{"kind":"symbol","url":"\/documentation\/nioextras\/nioextraserrors","type":"topic","abstract":[{"type":"text","text":"Errors that are raised in NIOExtras."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"NIOExtrasErrors"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOExtrasErrors"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOExtrasErrors","title":"NIOExtrasErrors"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras":{"kind":"symbol","title":"NIOExtras","role":"collection","url":"\/documentation\/nioextras","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/LengthFieldBasedFrameDecoder":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LengthFieldBasedFrameDecoder","url":"\/documentation\/nioextras\/lengthfieldbasedframedecoder","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LengthFieldBasedFrameDecoder","kind":"identifier"}],"title":"LengthFieldBasedFrameDecoder","kind":"symbol","abstract":[{"text":"A decoder that splits the received ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" by the number of bytes specified in a fixed length header","type":"text"},{"text":" ","type":"text"},{"text":"contained within the buffer.","type":"text"},{"text":" ","type":"text"},{"text":"For example, if you received the following four fragmented packets:","type":"text"},{"text":" ","type":"text"},{"text":"+—+––+——+––+","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"| A | BC | DEFG | HI |"},{"type":"text","text":" "},{"type":"text","text":"+—+––+——+––+"}],"navigatorTitle":[{"text":"LengthFieldBasedFrameDecoder","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOLengthFieldBasedFrameDecoderError":{"navigatorTitle":[{"kind":"identifier","text":"NIOLengthFieldBasedFrameDecoderError"}],"kind":"symbol","type":"topic","url":"\/documentation\/nioextras\/niolengthfieldbasedframedecodererror","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOLengthFieldBasedFrameDecoderError","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOLengthFieldBasedFrameDecoderError"}],"role":"symbol","title":"NIOLengthFieldBasedFrameDecoderError","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugInboundEventsHandler":{"title":"DebugInboundEventsHandler","url":"\/documentation\/nioextras\/debuginboundeventshandler","navigatorTitle":[{"kind":"identifier","text":"DebugInboundEventsHandler"}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DebugInboundEventsHandler"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugInboundEventsHandler","abstract":[{"text":"ChannelInboundHandler that prints all inbound events that pass through the pipeline by default,","type":"text"},{"text":" ","type":"text"},{"text":"overridable by providing your own closure for custom logging. See DebugOutboundEventsHandler for outbound events.","type":"text"}],"kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/LengthFieldPrependerError":{"kind":"symbol","type":"topic","url":"\/documentation\/nioextras\/lengthfieldprependererror","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LengthFieldPrependerError"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LengthFieldPrependerError"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LengthFieldPrependerError","title":"LengthFieldPrependerError","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/LineBasedFrameDecoder":{"abstract":[{"type":"text","text":"A decoder that splits incoming "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":"s around line end"},{"type":"text","text":" "},{"type":"text","text":"character(s) ("},{"type":"codeVoice","code":"'\\n'"},{"type":"text","text":" or "},{"type":"codeVoice","code":"'\\r\\n'"},{"type":"text","text":")."}],"kind":"symbol","url":"\/documentation\/nioextras\/linebasedframedecoder","navigatorTitle":[{"text":"LineBasedFrameDecoder","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LineBasedFrameDecoder","title":"LineBasedFrameDecoder","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LineBasedFrameDecoder","kind":"identifier"}]}}}