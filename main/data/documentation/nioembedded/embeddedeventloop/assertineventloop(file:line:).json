{"metadata":{"externalID":"s:7NIOCore9EventLoopPAAE08assertInbC04file4lineys12StaticStringV_SutF::SYNTHESIZED::s:11NIOEmbedded17EmbeddedEventLoopC","title":"assertInEventLoop(file:line:)","extendedModule":"NIOCore","roleHeading":"Instance Method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"assertInEventLoop"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":")"}],"modules":[{"name":"NIOEmbedded"}],"symbolKind":"method"},"kind":"symbol","sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Asserts that the current thread is the one tied to this "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Otherwise, if running in debug mode, the process will be abnormally terminated as per the semantics of"},{"type":"text","text":" "},{"type":"codeVoice","code":"preconditionFailure(_:file:line:)"},{"type":"text","text":". Never has any effect in release mode."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"assertInEventLoop","kind":"identifier"},{"text":"(","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"#file","kind":"keyword"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"#line","kind":"keyword"},{"text":")","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"aside","content":[{"inlineContent":[{"text":"This is not a customization point so calls to this function can be fully optimized out in release mode.","type":"text"}],"type":"paragraph"}],"style":"note"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedEventLoop","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedEventLoop\/EventLoop-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioembedded\/embeddedeventloop\/assertineventloop(file:line:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedEventLoop\/assertInEventLoop(file:line:)"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedEventLoop/EventLoop-Implementations":{"kind":"article","url":"\/documentation\/nioembedded\/embeddedeventloop\/eventloop-implementations","title":"EventLoop Implementations","role":"collectionGroup","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedEventLoop\/EventLoop-Implementations","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded":{"kind":"symbol","url":"\/documentation\/nioembedded","title":"NIOEmbedded","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedEventLoop":{"navigatorTitle":[{"text":"EmbeddedEventLoop","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/nioembedded\/embeddedeventloop","title":"EmbeddedEventLoop","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddedEventLoop","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedEventLoop","abstract":[{"text":"An ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" that is embedded in the current running context with no external","type":"text"},{"text":" ","type":"text"},{"text":"control.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedEventLoop/assertInEventLoop(file:line:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"assertInEventLoop"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":")"}],"url":"\/documentation\/nioembedded\/embeddedeventloop\/assertineventloop(file:line:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedEventLoop\/assertInEventLoop(file:line:)","role":"symbol","title":"assertInEventLoop(file:line:)","abstract":[{"type":"text","text":"Asserts that the current thread is the one tied to this "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Otherwise, if running in debug mode, the process will be abnormally terminated as per the semantics of"},{"type":"text","text":" "},{"type":"codeVoice","code":"preconditionFailure(_:file:line:)"},{"type":"text","text":". Never has any effect in release mode."}],"kind":"symbol","type":"topic"}}}