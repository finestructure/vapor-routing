{"sections":[],"metadata":{"title":"init(handlers:loop:)","modules":[{"name":"NIOEmbedded"}],"externalID":"s:11NIOEmbedded15EmbeddedChannelC8handlers4loopACSay7NIOCore0C7Handler_pG_AA0B9EventLoopCtcfc","role":"symbol","roleHeading":"Initializer","symbolKind":"init","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"handlers","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"ChannelHandler","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14ChannelHandlerP"},{"text":"], ","kind":"text"},{"text":"loop","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EmbeddedEventLoop","kind":"typeIdentifier","preciseIdentifier":"s:11NIOEmbedded17EmbeddedEventLoopC"},{"text":")","kind":"text"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"handlers"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14ChannelHandlerP","text":"ChannelHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"loop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11NIOEmbedded17EmbeddedEventLoopC","text":"EmbeddedEventLoop","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedEventLoop"},{"kind":"text","text":" = EmbeddedEventLoop())"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"handlers","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s to add to the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" before register."}]}]},{"name":"loop","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"EmbeddedEventLoop"},{"type":"text","text":" to use."}]}]}]},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"During creation it will automatically also register itself on the "},{"type":"codeVoice","code":"EmbeddedEventLoop"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/init(handlers:loop:)"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"Create a new instance.","type":"text"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioembedded\/embeddedchannel\/init(handlers:loop:)"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelHandler","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","role":"symbol","abstract":[{"text":"You should ","type":"text"},{"inlineContent":[{"text":"never","type":"text"}],"type":"emphasis"},{"text":" implement this protocol directly. Please implement one of its sub-protocols.","type":"text"}],"title":"ChannelHandler","navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"url":"\/documentation\/niocore\/channelhandler"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/init(handlers:loop:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/init(handlers:loop:)","type":"topic","title":"init(handlers:loop:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"handlers","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"ChannelHandler","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14ChannelHandlerP"},{"text":"], ","kind":"text"},{"text":"loop","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EmbeddedEventLoop","kind":"typeIdentifier","preciseIdentifier":"s:11NIOEmbedded17EmbeddedEventLoopC"},{"text":")","kind":"text"}],"abstract":[{"text":"Create a new instance.","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel\/init(handlers:loop:)"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"type":"topic","kind":"symbol","abstract":[{"type":"codeVoice","code":"EmbeddedChannel"},{"text":" is a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" implementation that does neither any","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"actual IO nor has a proper eventing mechanism. The prime use-case for"},{"type":"text","text":" "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is in unit tests when you want to feed the inbound events"},{"type":"text","text":" "},{"type":"text","text":"and check the outbound events manually."}],"navigatorTitle":[{"kind":"identifier","text":"EmbeddedChannel"}],"url":"\/documentation\/nioembedded\/embeddedchannel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","title":"EmbeddedChannel","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedChannel"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedEventLoop":{"navigatorTitle":[{"text":"EmbeddedEventLoop","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/nioembedded\/embeddedeventloop","title":"EmbeddedEventLoop","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddedEventLoop","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedEventLoop","abstract":[{"text":"An ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" that is embedded in the current running context with no external","type":"text"},{"text":" ","type":"text"},{"text":"control.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded":{"kind":"symbol","url":"\/documentation\/nioembedded","title":"NIOEmbedded","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","abstract":[]}}}