{"abstract":[{"type":"codeVoice","code":"LeftOverState"},{"text":" represents any left-over inbound, outbound, and pending outbound events that hit the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"EmbeddedChannel"},{"text":" and were not consumed when ","type":"text"},{"type":"codeVoice","code":"finish"},{"text":" was called on the ","type":"text"},{"type":"codeVoice","code":"EmbeddedChannel"},{"text":".","type":"text"}],"metadata":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LeftOverState"}],"symbolKind":"enum","navigatorTitle":[{"kind":"identifier","text":"LeftOverState"}],"roleHeading":"Enumeration","externalID":"s:11NIOEmbedded15EmbeddedChannelC13LeftOverStateO","modules":[{"name":"NIOEmbedded"}],"role":"symbol","title":"EmbeddedChannel.LeftOverState"},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/LeftOverState\/clean","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/LeftOverState\/leftOvers(inbound:outbound:pendingOutbound:)"],"title":"Enumeration Cases"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/LeftOverState\/hasLeftOvers","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/LeftOverState\/isClean"],"title":"Instance Properties"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LeftOverState"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" is most useful in testing and usually in unit tests, you want to consume all inbound and","type":"text"},{"text":" ","type":"text"},{"text":"outbound data to verify they are what you expect. Therefore, when you ","type":"text"},{"code":"finish","type":"codeVoice"},{"text":" an ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" it will","type":"text"},{"text":" ","type":"text"},{"text":"return if itâ€™s either ","type":"text"},{"code":".clean","type":"codeVoice"},{"text":" (no left overs) or that it has ","type":"text"},{"code":".leftOvers","type":"codeVoice"},{"text":".","type":"text"}]}]}],"kind":"symbol","variants":[{"paths":["\/documentation\/nioembedded\/embeddedchannel\/leftoverstate"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/LeftOverState"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/LeftOverState/leftOvers(inbound:outbound:pendingOutbound:)":{"kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"leftOvers","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inbound","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"outbound","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"pendingOutbound","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny","kind":"typeIdentifier"},{"text":"])","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/LeftOverState\/leftOvers(inbound:outbound:pendingOutbound:)","type":"topic","role":"symbol","abstract":[{"text":"The ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" has inbound, outbound, or pending outbound data left on ","type":"text"},{"code":"finish","type":"codeVoice"},{"text":".","type":"text"}],"title":"EmbeddedChannel.LeftOverState.leftOvers(inbound:outbound:pendingOutbound:)","url":"\/documentation\/nioembedded\/embeddedchannel\/leftoverstate\/leftovers(inbound:outbound:pendingoutbound:)"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/LeftOverState/isClean":{"kind":"symbol","role":"symbol","abstract":[{"type":"codeVoice","code":"true"},{"text":" if the ","type":"text"},{"type":"codeVoice","code":"EmbeddedChannel"},{"text":" was ","type":"text"},{"type":"codeVoice","code":"clean"},{"text":" on ","type":"text"},{"type":"codeVoice","code":"finish"},{"text":", ie. there is no unconsumed inbound, outbound, or","type":"text"},{"text":" ","type":"text"},{"text":"pending outbound data left on the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":".","type":"text"}],"title":"isClean","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isClean"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/leftoverstate\/isclean","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/LeftOverState\/isClean","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded":{"kind":"symbol","url":"\/documentation\/nioembedded","title":"NIOEmbedded","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/LeftOverState/clean":{"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is clean, ie. no inbound, outbound, or pending outbound data left on "},{"type":"codeVoice","code":"finish"},{"type":"text","text":"."}],"fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"clean"}],"title":"EmbeddedChannel.LeftOverState.clean","kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel\/leftoverstate\/clean","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/LeftOverState\/clean"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/LeftOverState/hasLeftOvers":{"kind":"symbol","title":"hasLeftOvers","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasLeftOvers"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/LeftOverState\/hasLeftOvers","url":"\/documentation\/nioembedded\/embeddedchannel\/leftoverstate\/hasleftovers","abstract":[{"code":"true","type":"codeVoice"},{"text":" if the ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" if there was unconsumed inbound, outbound, or pending outbound data left","type":"text"},{"type":"text","text":" "},{"type":"text","text":"on the "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" when it was "},{"code":"finish","type":"codeVoice"},{"type":"text","text":"ed."}],"type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/LeftOverState":{"abstract":[{"type":"codeVoice","code":"LeftOverState"},{"type":"text","text":" represents any left-over inbound, outbound, and pending outbound events that hit the"},{"type":"text","text":" "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" and were not consumed when "},{"type":"codeVoice","code":"finish"},{"type":"text","text":" was called on the "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LeftOverState"}],"title":"EmbeddedChannel.LeftOverState","kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LeftOverState"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/leftoverstate","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/LeftOverState"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"type":"topic","kind":"symbol","abstract":[{"type":"codeVoice","code":"EmbeddedChannel"},{"text":" is a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" implementation that does neither any","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"actual IO nor has a proper eventing mechanism. The prime use-case for"},{"type":"text","text":" "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is in unit tests when you want to feed the inbound events"},{"type":"text","text":" "},{"type":"text","text":"and check the outbound events manually."}],"navigatorTitle":[{"kind":"identifier","text":"EmbeddedChannel"}],"url":"\/documentation\/nioembedded\/embeddedchannel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","title":"EmbeddedChannel","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedChannel"}]}}}