{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/SynchronousOptions\/getOption(_:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioembedded\/embeddedchannel\/synchronousoptions\/getoption(_:)"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getOption"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Option"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"option"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Option"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Option"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Option"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOption","kind":"typeIdentifier","text":"ChannelOption","preciseIdentifier":"s:7NIOCore13ChannelOptionP"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"Must be called on the ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" is running on.","type":"text"}]}],"style":"important"}]}],"metadata":{"externalID":"s:11NIOEmbedded15EmbeddedChannelC18SynchronousOptionsV9getOptiony5ValueQzxK7NIOCore0cG0RzlF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getOption","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Option","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"modules":[{"name":"NIOEmbedded"}],"title":"getOption(_:)","symbolKind":"method","roleHeading":"Instance Method","role":"symbol"},"abstract":[{"type":"text","text":"Get the value of "},{"type":"codeVoice","code":"option"},{"type":"text","text":" for this "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/SynchronousOptions"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/SynchronousOptions":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/SynchronousOptions","navigatorTitle":[{"text":"SynchronousOptions","kind":"identifier"}],"abstract":[],"type":"topic","role":"symbol","kind":"symbol","title":"EmbeddedChannel.SynchronousOptions","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SynchronousOptions","kind":"identifier"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/synchronousoptions"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/SynchronousOptions/getOption(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getOption"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Option"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Option"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Option"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"role":"symbol","abstract":[{"type":"text","text":"Get the value of "},{"code":"option","type":"codeVoice"},{"type":"text","text":" for this "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/SynchronousOptions\/getOption(_:)","kind":"symbol","type":"topic","title":"getOption(_:)","url":"\/documentation\/nioembedded\/embeddedchannel\/synchronousoptions\/getoption(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"type":"topic","kind":"symbol","abstract":[{"type":"codeVoice","code":"EmbeddedChannel"},{"text":" is a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" implementation that does neither any","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"actual IO nor has a proper eventing mechanism. The prime use-case for"},{"type":"text","text":" "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is in unit tests when you want to feed the inbound events"},{"type":"text","text":" "},{"type":"text","text":"and check the outbound events manually."}],"navigatorTitle":[{"kind":"identifier","text":"EmbeddedChannel"}],"url":"\/documentation\/nioembedded\/embeddedchannel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","title":"EmbeddedChannel","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedChannel"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded":{"kind":"symbol","url":"\/documentation\/nioembedded","title":"NIOEmbedded","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOption":{"title":"ChannelOption","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOption"}],"kind":"symbol","url":"\/documentation\/niocore\/channeloption","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChannelOption"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOption","abstract":[{"type":"text","text":"A configuration option that can be set on a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" to configure different behaviour."}]}}}