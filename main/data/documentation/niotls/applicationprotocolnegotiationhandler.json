{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler","interfaceLanguage":"swift"},"sections":[],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/init(alpnCompleteHandler:)-1b0z6","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/init(alpnCompleteHandler:)-8h9zw"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/channelRead(context:data:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/userInboundEventTriggered(context:event:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/InboundOut"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/RemovableChannelHandler-Implementations"]}],"abstract":[{"type":"text","text":"A helper "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" that makes it easy to swap channel pipelines"},{"type":"text","text":" "},{"type":"text","text":"based on the result of an ALPN negotiation."}],"kind":"symbol","metadata":{"navigatorTitle":[{"text":"ApplicationProtocolNegotiationHandler","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApplicationProtocolNegotiationHandler","kind":"identifier"}],"externalID":"s:6NIOTLS37ApplicationProtocolNegotiationHandlerC","role":"symbol","title":"ApplicationProtocolNegotiationHandler","roleHeading":"Class","symbolKind":"class","modules":[{"name":"NIOTLS"}]},"schemaVersion":{"major":0,"patch":0,"minor":3},"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApplicationProtocolNegotiationHandler","kind":"identifier"}]}]},{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"inlineContent":[{"type":"text","text":"The standard pattern used by applications that want to use ALPN is to select"},{"type":"text","text":" "},{"type":"text","text":"an application protocol based on the result, optionally falling back to some"},{"type":"text","text":" "},{"type":"text","text":"default protocol. To do this in SwiftNIO requires that the channel pipeline be"},{"type":"text","text":" "},{"type":"text","text":"reconfigured based on the result of the ALPN negotiation. This channel handler"},{"type":"text","text":" "},{"type":"text","text":"encapsulates that logic in a generic form that doesnâ€™t depend on the specific"},{"type":"text","text":" "},{"type":"text","text":"TLS implementation in use by using "},{"type":"codeVoice","code":"TLSUserEvent"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The user of this channel handler provides a single closure that is called with"},{"type":"text","text":" "},{"type":"text","text":"an "},{"code":"ALPNResult","type":"codeVoice"},{"type":"text","text":" when the ALPN negotiation is complete. Based on that result"},{"type":"text","text":" "},{"type":"text","text":"the user is free to reconfigure the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" as required, and should"},{"type":"text","text":" "},{"type":"text","text":"return an "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" that will complete when the pipeline is reconfigured."}],"type":"paragraph"},{"inlineContent":[{"text":"Until the ","type":"text"},{"type":"codeVoice","code":"EventLoopFuture"},{"text":" completes, this channel handler will buffer inbound","type":"text"},{"text":" ","type":"text"},{"text":"data. When the ","type":"text"},{"type":"codeVoice","code":"EventLoopFuture"},{"text":" completes, the buffered data will be replayed","type":"text"},{"text":" ","type":"text"},{"text":"down the channel. Then, finally, this channel handler will automatically remove","type":"text"},{"text":" ","type":"text"},{"text":"itself from the channel pipeline, leaving the pipeline in its final","type":"text"},{"text":" ","type":"text"},{"text":"configuration.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niotls\/applicationprotocolnegotiationhandler"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelInboundHandler","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","role":"symbol","abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"text":" which handles inbound I\/O events for a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}],"title":"ChannelInboundHandler","navigatorTitle":[{"text":"ChannelInboundHandler","kind":"identifier"}],"url":"\/documentation\/niocore\/channelinboundhandler"},"doc://co.pointfree.VaporRouting/documentation/NIOTLS/ApplicationProtocolNegotiationHandler/init(alpnCompleteHandler:)-1b0z6":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/init(alpnCompleteHandler:)-1b0z6","role":"symbol","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"alpnCompleteHandler","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:6NIOTLS10ALPNResultO","text":"ALPNResult","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"url":"\/documentation\/niotls\/applicationprotocolnegotiationhandler\/init(alpncompletehandler:)-1b0z6","title":"init(alpnCompleteHandler:)","type":"topic","abstract":[{"text":"Create an ","type":"text"},{"code":"ApplicationProtocolNegotiationHandler","type":"codeVoice"},{"text":" with the given completion","type":"text"},{"text":" ","type":"text"},{"text":"callback.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOTLS/ApplicationProtocolNegotiationHandler/RemovableChannelHandler-Implementations":{"role":"collectionGroup","title":"RemovableChannelHandler Implementations","abstract":[],"type":"topic","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/RemovableChannelHandler-Implementations","url":"\/documentation\/niotls\/applicationprotocolnegotiationhandler\/removablechannelhandler-implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOTLS":{"role":"collection","url":"\/documentation\/niotls","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS","type":"topic","abstract":[],"kind":"symbol","title":"NIOTLS"},"doc://co.pointfree.VaporRouting/documentation/NIOTLS/ApplicationProtocolNegotiationHandler/InboundIn":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/InboundIn","navigatorTitle":[{"kind":"identifier","text":"InboundIn"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundIn"}],"kind":"symbol","abstract":[{"text":"The type of the inbound data which is wrapped in ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","title":"ApplicationProtocolNegotiationHandler.InboundIn","url":"\/documentation\/niotls\/applicationprotocolnegotiationhandler\/inboundin"},"doc://co.pointfree.VaporRouting/documentation/NIOTLS/ApplicationProtocolNegotiationHandler/InboundOut":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/InboundOut","title":"ApplicationProtocolNegotiationHandler.InboundOut","abstract":[{"type":"text","text":"The type of the inbound data which will be forwarded to the next "},{"code":"ChannelInboundHandler","type":"codeVoice"},{"type":"text","text":" in the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundOut"}],"url":"\/documentation\/niotls\/applicationprotocolnegotiationhandler\/inboundout","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"InboundOut"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOTLS/ApplicationProtocolNegotiationHandler/channelRead(context:data:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelRead"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":")"}],"role":"symbol","url":"\/documentation\/niotls\/applicationprotocolnegotiationhandler\/channelread(context:data:)","kind":"symbol","type":"topic","title":"channelRead(context:data:)","abstract":[{"type":"text","text":"Called when some data has been read from the remote peer."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/channelRead(context:data:)"},"doc://co.pointfree.VaporRouting/documentation/NIOTLS/ApplicationProtocolNegotiationHandler":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler","url":"\/documentation\/niotls\/applicationprotocolnegotiationhandler","navigatorTitle":[{"kind":"identifier","text":"ApplicationProtocolNegotiationHandler"}],"abstract":[{"type":"text","text":"A helper "},{"code":"ChannelInboundHandler","type":"codeVoice"},{"type":"text","text":" that makes it easy to swap channel pipelines"},{"type":"text","text":" "},{"type":"text","text":"based on the result of an ALPN negotiation."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplicationProtocolNegotiationHandler"}],"title":"ApplicationProtocolNegotiationHandler","role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOTLS/ApplicationProtocolNegotiationHandler/ChannelHandler-Implementations":{"url":"\/documentation\/niotls\/applicationprotocolnegotiationhandler\/channelhandler-implementations","title":"ChannelHandler Implementations","type":"topic","role":"collectionGroup","kind":"article","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/ChannelHandler-Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOTLS/ApplicationProtocolNegotiationHandler/init(alpnCompleteHandler:)-8h9zw":{"url":"\/documentation\/niotls\/applicationprotocolnegotiationhandler\/init(alpncompletehandler:)-8h9zw","role":"symbol","title":"init(alpnCompleteHandler:)","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/init(alpnCompleteHandler:)-8h9zw","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"alpnCompleteHandler","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"ALPNResult","preciseIdentifier":"s:6NIOTLS10ALPNResultO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">)","kind":"text"}],"abstract":[{"text":"Create an ","type":"text"},{"type":"codeVoice","code":"ApplicationProtocolNegotiationHandler"},{"text":" with the given completion","type":"text"},{"text":" ","type":"text"},{"text":"callback.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/RemovableChannelHandler":{"title":"RemovableChannelHandler","navigatorTitle":[{"kind":"identifier","text":"RemovableChannelHandler"}],"role":"symbol","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" that can be dynamically removed from a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" whilst"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is operating normally."},{"type":"text","text":" "},{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is required to remove itself from the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" (using"},{"type":"text","text":" "},{"code":"ChannelHandlerContext.removeHandler","type":"codeVoice"},{"type":"text","text":") as soon as possible."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemovableChannelHandler"}],"url":"\/documentation\/niocore\/removablechannelhandler"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelHandler","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","role":"symbol","abstract":[{"text":"You should ","type":"text"},{"inlineContent":[{"text":"never","type":"text"}],"type":"emphasis"},{"text":" implement this protocol directly. Please implement one of its sub-protocols.","type":"text"}],"title":"ChannelHandler","navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"url":"\/documentation\/niocore\/channelhandler"},"doc://co.pointfree.VaporRouting/documentation/NIOTLS/ApplicationProtocolNegotiationHandler/ChannelInboundHandler-Implementations":{"type":"topic","title":"ChannelInboundHandler Implementations","role":"collectionGroup","url":"\/documentation\/niotls\/applicationprotocolnegotiationhandler\/channelinboundhandler-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/ChannelInboundHandler-Implementations","abstract":[],"kind":"article"},"doc://co.pointfree.VaporRouting/documentation/NIOTLS/ApplicationProtocolNegotiationHandler/userInboundEventTriggered(context:event:)":{"type":"topic","url":"\/documentation\/niotls\/applicationprotocolnegotiationhandler\/userinboundeventtriggered(context:event:)","title":"userInboundEventTriggered(context:event:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"userInboundEventTriggered","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"event","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":")","kind":"text"}],"abstract":[{"text":"Called when a user inbound event has been triggered.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/userInboundEventTriggered(context:event:)"}}}