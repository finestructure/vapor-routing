{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelRead","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier"},{"text":")","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"ChannelHandlerContext","type":"codeVoice"},{"text":" which this ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" belongs to.","type":"text"}]}],"name":"context"},{"content":[{"inlineContent":[{"type":"text","text":"The data read from the remote peer, wrapped in a "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"data"}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"This should call "},{"type":"codeVoice","code":"context.fireChannelRead"},{"type":"text","text":" to forward the operation to the next "},{"type":"codeVoice","code":"_ChannelInboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" if you want to allow the next handler to also handle the event."}],"type":"paragraph"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler"]]},"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Called when some data has been read from the remote peer."}],"metadata":{"externalID":"s:6NIOTLS37ApplicationProtocolNegotiationHandlerC11channelRead7context4datay7NIOCore07ChannelE7ContextC_AG6NIOAnyVtF","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelRead","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOAny","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"text":")","kind":"text"}],"role":"symbol","modules":[{"name":"NIOTLS"}],"title":"channelRead(context:data:)","symbolKind":"method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niotls\/applicationprotocolnegotiationhandler\/channelread(context:data:)"]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/channelRead(context:data:)","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOTLS/ApplicationProtocolNegotiationHandler/channelRead(context:data:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelRead"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":")"}],"role":"symbol","url":"\/documentation\/niotls\/applicationprotocolnegotiationhandler\/channelread(context:data:)","kind":"symbol","type":"topic","title":"channelRead(context:data:)","abstract":[{"type":"text","text":"Called when some data has been read from the remote peer."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/channelRead(context:data:)"},"doc://co.pointfree.VaporRouting/documentation/NIOTLS":{"role":"collection","url":"\/documentation\/niotls","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS","type":"topic","abstract":[],"kind":"symbol","title":"NIOTLS"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandlerContext":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","role":"symbol","url":"\/documentation\/niocore\/channelhandlercontext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandlerContext"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelHandlerContext"}],"title":"ChannelHandlerContext","abstract":[{"text":"Every ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" has – when added to a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" – a corresponding "},{"type":"codeVoice","code":"ChannelHandlerContext"},{"type":"text","text":" which is"},{"type":"text","text":" "},{"type":"text","text":"the way "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s can interact with other "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s in the pipeline."}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOAny":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOAny"}],"type":"topic","url":"\/documentation\/niocore\/nioany","navigatorTitle":[{"kind":"identifier","text":"NIOAny"}],"abstract":[{"code":"NIOAny","type":"codeVoice"},{"type":"text","text":" is an opaque container for values of "},{"inlineContent":[{"text":"any","type":"text"}],"type":"emphasis"},{"type":"text","text":" type, similar to Swift’s builtin "},{"code":"Any","type":"codeVoice"},{"type":"text","text":" type. Contrary to"},{"type":"text","text":" "},{"type":"codeVoice","code":"Any"},{"type":"text","text":" the overhead of "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":" depends on the the type of the wrapped value. Certain types that are important"},{"type":"text","text":" "},{"type":"text","text":"for the performance of a SwiftNIO application like "},{"code":"ByteBuffer","type":"codeVoice"},{"text":", ","type":"text"},{"code":"FileRegion","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"AddressEnvelope<ByteBuffer>","type":"codeVoice"},{"text":" can be expected","type":"text"},{"text":" ","type":"text"},{"text":"to be wrapped almost without overhead. All others will have similar performance as if they were passed as an ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" as","type":"text"},{"text":" ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":" just like ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" will contain them within an existential container.","type":"text"}],"title":"NIOAny","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny"},"doc://co.pointfree.VaporRouting/documentation/NIOTLS/ApplicationProtocolNegotiationHandler":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler","url":"\/documentation\/niotls\/applicationprotocolnegotiationhandler","navigatorTitle":[{"kind":"identifier","text":"ApplicationProtocolNegotiationHandler"}],"abstract":[{"type":"text","text":"A helper "},{"code":"ChannelInboundHandler","type":"codeVoice"},{"type":"text","text":" that makes it easy to swap channel pipelines"},{"type":"text","text":" "},{"type":"text","text":"based on the result of an ALPN negotiation."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplicationProtocolNegotiationHandler"}],"title":"ApplicationProtocolNegotiationHandler","role":"symbol","kind":"symbol"}}}