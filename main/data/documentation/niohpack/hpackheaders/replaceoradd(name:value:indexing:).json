{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceOrAdd"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"indexing"},{"kind":"text","text":": "},{"text":"HPACKIndexing","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKIndexing","preciseIdentifier":"s:8NIOHPACK13HPACKIndexingO"},{"text":" = .indexable)","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"The header field name. For maximum compatibility this should be an","type":"text"},{"text":" ","type":"text"},{"text":"ASCII string. For future-proofing with HTTP\/2 lowercase header names are strongly","type":"text"},{"text":" ","type":"text"},{"text":"recommended.","type":"text"}],"type":"paragraph"}],"name":"name"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The header field value to add for the given name."}]}],"name":"value"}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is a supplemental method to "},{"type":"codeVoice","code":"add"},{"type":"text","text":" that essentially combines "},{"type":"codeVoice","code":"remove"},{"type":"text","text":" and "},{"type":"codeVoice","code":"add"},{"type":"text","text":" "},{"text":"in a single function. It can be used to ensure that a header block is in a","type":"text"},{"text":" ","type":"text"},{"text":"well-defined form without having to check whether the value was previously there.","type":"text"},{"text":" ","type":"text"},{"text":"Like ","type":"text"},{"code":"add","type":"codeVoice"},{"text":", this method performs case-insensitive comparisons of the header field","type":"text"},{"text":" ","type":"text"},{"text":"names.","type":"text"}]}],"kind":"content"}],"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKHeaders\/replaceOrAdd(name:value:indexing:)","interfaceLanguage":"swift"},"metadata":{"externalID":"s:8NIOHPACK12HPACKHeadersV12replaceOrAdd4name5value8indexingySS_SSAA13HPACKIndexingOtF","roleHeading":"Instance Method","title":"replaceOrAdd(name:value:indexing:)","modules":[{"name":"NIOHPACK"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceOrAdd"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"indexing"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8NIOHPACK13HPACKIndexingO","kind":"typeIdentifier","text":"HPACKIndexing"},{"kind":"text","text":")"}],"symbolKind":"method","role":"symbol"},"variants":[{"paths":["\/documentation\/niohpack\/hpackheaders\/replaceoradd(name:value:indexing:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKHeaders"]]},"abstract":[{"text":"Add a header name\/value pair to the block, replacing any previous values for the","type":"text"},{"text":" ","type":"text"},{"text":"same header name that are already in the block.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHPACK":{"role":"collection","abstract":[],"kind":"symbol","type":"topic","title":"NIOHPACK","url":"\/documentation\/niohpack","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKHeaders":{"title":"HPACKHeaders","role":"symbol","url":"\/documentation\/niohpack\/hpackheaders","abstract":[{"text":"Very similar to ","type":"text"},{"code":"NIOHTTP1.HTTPHeaders","type":"codeVoice"},{"text":", but with extra data for storing indexing","type":"text"},{"text":" ","type":"text"},{"text":"information.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKHeaders","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HPACKHeaders"}],"navigatorTitle":[{"kind":"identifier","text":"HPACKHeaders"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKHeaders/replaceOrAdd(name:value:indexing:)":{"title":"replaceOrAdd(name:value:indexing:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKHeaders\/replaceOrAdd(name:value:indexing:)","role":"symbol","type":"topic","url":"\/documentation\/niohpack\/hpackheaders\/replaceoradd(name:value:indexing:)","abstract":[{"text":"Add a header name\/value pair to the block, replacing any previous values for the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"same header name that are already in the block."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceOrAdd"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"indexing"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8NIOHPACK13HPACKIndexingO","kind":"typeIdentifier","text":"HPACKIndexing"},{"kind":"text","text":")"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKIndexing":{"role":"symbol","abstract":[{"type":"text","text":"Defines the types of indexing and rewriting operations a decoder may take with"},{"text":" ","type":"text"},{"text":"regard to this header.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"HPACKIndexing","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HPACKIndexing","kind":"identifier"}],"type":"topic","title":"HPACKIndexing","url":"\/documentation\/niohpack\/hpackindexing","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKIndexing"}}}