{"kind":"symbol","sections":[],"hierarchy":{"paths":[[]]},"metadata":{"roleHeading":"Framework","externalID":"CoreMetrics","title":"CoreMetrics","role":"collection","symbolKind":"module","modules":[{"name":"CoreMetrics"}]},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Counter","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounter","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Gauge","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MultiplexMetricsHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/NOOPMetricsHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Recorder","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Timer"],"title":"Classes"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/CounterHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounterHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MetricsFactory","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/RecorderHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/TimerHandler"],"title":"Protocols"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/TimeUnit"],"title":"Structures"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MetricsSystem"],"title":"Enumerations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics"},"variants":[{"paths":["\/documentation\/coremetrics"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/RecorderHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/RecorderHandler","type":"topic","abstract":[{"type":"text","text":"A "},{"code":"RecorderHandler","type":"codeVoice"},{"type":"text","text":" represents a backend implementation of a "},{"code":"Recorder","type":"codeVoice"},{"type":"text","text":"."}],"title":"RecorderHandler","role":"symbol","url":"\/documentation\/coremetrics\/recorderhandler","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RecorderHandler"}],"navigatorTitle":[{"kind":"identifier","text":"RecorderHandler"}]},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/FloatingPointCounterHandler":{"abstract":[{"text":"A ","type":"text"},{"code":"FloatingPointCounterHandler","type":"codeVoice"},{"text":" represents a backend implementation of a ","type":"text"},{"code":"FloatingPointCounter","type":"codeVoice"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"FloatingPointCounterHandler","kind":"identifier"}],"url":"\/documentation\/coremetrics\/floatingpointcounterhandler","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounterHandler","title":"FloatingPointCounterHandler","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FloatingPointCounterHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/CounterHandler":{"title":"CounterHandler","abstract":[{"text":"A ","type":"text"},{"code":"CounterHandler","type":"codeVoice"},{"text":" represents a backend implementation of a ","type":"text"},{"code":"Counter","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CounterHandler","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"CounterHandler","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/CounterHandler","url":"\/documentation\/coremetrics\/counterhandler","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/TimeUnit":{"navigatorTitle":[{"kind":"identifier","text":"TimeUnit"}],"title":"TimeUnit","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TimeUnit"}],"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/coremetrics\/timeunit","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/TimeUnit"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/TimerHandler":{"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"TimerHandler"},{"text":" represents a backend implementation of a ","type":"text"},{"type":"codeVoice","code":"Timer"},{"type":"text","text":"."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TimerHandler","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"TimerHandler","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/TimerHandler","url":"\/documentation\/coremetrics\/timerhandler","kind":"symbol","title":"TimerHandler","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/Timer":{"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Timer","kind":"identifier"}],"title":"Timer","abstract":[{"text":"A timer collects observations within a time window (usually things like request durations) and provides aggregated information about the data sample,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"for example, min, max and various quantiles. It is similar to a "},{"type":"codeVoice","code":"Recorder"},{"type":"text","text":" but specialized for values that represent durations."}],"role":"symbol","url":"\/documentation\/coremetrics\/timer","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Timer","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Timer"}]},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/Recorder":{"kind":"symbol","type":"topic","abstract":[{"text":"A recorder collects observations within a time window (usually things like response sizes) and ","type":"text"},{"inlineContent":[{"type":"text","text":"can"}],"type":"emphasis"},{"type":"text","text":" provide aggregated information about the data sample, for example, count, sum, min, max and various quantiles."}],"title":"Recorder","role":"symbol","navigatorTitle":[{"text":"Recorder","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Recorder","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Recorder","url":"\/documentation\/coremetrics\/recorder"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/MetricsSystem":{"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"MetricsSystem"}],"title":"MetricsSystem","navigatorTitle":[{"kind":"identifier","text":"MetricsSystem"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MetricsSystem","role":"symbol","url":"\/documentation\/coremetrics\/metricssystem","type":"topic","abstract":[{"type":"text","text":"The "},{"code":"MetricsSystem","type":"codeVoice"},{"type":"text","text":" is a global facility where the default metrics backend implementation ("},{"code":"MetricsFactory","type":"codeVoice"},{"type":"text","text":") can be"},{"type":"text","text":" "},{"type":"text","text":"configured. "},{"code":"MetricsSystem","type":"codeVoice"},{"type":"text","text":" is set up just once in a given program to set up the desired metrics backend"},{"type":"text","text":" "},{"type":"text","text":"implementation."}]},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/Counter":{"abstract":[{"text":"A counter is a cumulative metric that represents a single monotonically increasing counter whose value can only increase or be reset to zero.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"For example, you can use a counter to represent the number of requests served, tasks completed, or errors."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Counter","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Counter","url":"\/documentation\/coremetrics\/counter","type":"topic","navigatorTitle":[{"text":"Counter","kind":"identifier"}],"role":"symbol","title":"Counter"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/MultiplexMetricsHandler":{"navigatorTitle":[{"text":"MultiplexMetricsHandler","kind":"identifier"}],"url":"\/documentation\/coremetrics\/multiplexmetricshandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultiplexMetricsHandler","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MultiplexMetricsHandler","role":"symbol","title":"MultiplexMetricsHandler","type":"topic","abstract":[{"text":"A pseudo-metrics handler that can be used to send messages to multiple other metrics handlers.","type":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/MetricsFactory":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MetricsFactory","type":"topic","abstract":[{"type":"text","text":"The "},{"code":"MetricsFactory","type":"codeVoice"},{"type":"text","text":" is the bridge between the "},{"code":"MetricsSystem","type":"codeVoice"},{"type":"text","text":" and the metrics backend implementation."},{"type":"text","text":" "},{"code":"MetricsFactory","type":"codeVoice"},{"type":"text","text":"’s role is to initialize concrete implementations of the various metric types:"}],"title":"MetricsFactory","role":"symbol","url":"\/documentation\/coremetrics\/metricsfactory","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MetricsFactory"}],"navigatorTitle":[{"kind":"identifier","text":"MetricsFactory"}]},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/NOOPMetricsHandler":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NOOPMetricsHandler","kind":"identifier"}],"url":"\/documentation\/coremetrics\/noopmetricshandler","kind":"symbol","abstract":[{"type":"text","text":"Ships with the metrics module, used for initial bootstrapping."}],"title":"NOOPMetricsHandler","navigatorTitle":[{"text":"NOOPMetricsHandler","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/NOOPMetricsHandler","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/Gauge":{"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Gauge"}],"title":"Gauge","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Gauge","url":"\/documentation\/coremetrics\/gauge","abstract":[{"type":"text","text":"A gauge is a metric that represents a single numerical value that can arbitrarily go up and down."},{"type":"text","text":" "},{"type":"text","text":"Gauges are typically used for measured values like temperatures or current memory usage, but also “counts” that can go up and down, like the number of active threads."},{"type":"text","text":" "},{"text":"Gauges are modeled as ","type":"text"},{"code":"Recorder","type":"codeVoice"},{"text":" with a sample size of 1 and that does not perform any aggregation.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Gauge"}]},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics","type":"topic","abstract":[],"title":"CoreMetrics","role":"collection","url":"\/documentation\/coremetrics","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/FloatingPointCounter":{"navigatorTitle":[{"kind":"identifier","text":"FloatingPointCounter"}],"url":"\/documentation\/coremetrics\/floatingpointcounter","title":"FloatingPointCounter","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounter","role":"symbol","abstract":[{"text":"A FloatingPointCounter is a cumulative metric that represents a single monotonically increasing FloatingPointCounter whose value can only increase or be reset to zero.","type":"text"},{"text":" ","type":"text"},{"text":"For example, you can use a FloatingPointCounter to represent the number of requests served, tasks completed, or errors.","type":"text"},{"text":" ","type":"text"},{"text":"FloatingPointCounter is not supported by all metrics backends, however a default implementation is provided which accumulates floating point values and records increments to a standard Counter after crossing integer boundaries.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FloatingPointCounter","kind":"identifier"}],"kind":"symbol","type":"topic"}}}